{"version":3,"sources":["../src/app.js"],"names":["port_number","process","env","PORT","app","server","http","createServer","use","bodyParser","json","express","static","path","join","__dirname","passport","initialize","corsOption","origin","methods","credentials","exposedHeaders","req","res","next","header","routes","resp","fileName","resolve","sendFile","listen","console","log"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,cAAcC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAtC;AACA,IAAIC,MAAM,wBAAV;;AAEAA,IAAIC,MAAJ,GAAaC,eAAKC,YAAL,CAAkBH,GAAlB,CAAb;AACAA,IAAII,GAAJ,CAAQC,qBAAWC,IAAX,EAAR;AACAN,IAAII,GAAJ,CAAQG,kBAAQC,MAAR,CAAeC,eAAKC,IAAL,CAAUC,SAAV,CAAf,CAAR;;AAEAX,IAAII,GAAJ,CAAQQ,mBAASC,UAAT,EAAR;;AAEA,IAAIC,aAAa;AACbC,YAAQ,IADK;AAEbC,aAAS,gCAFI;AAGbC,iBAAa,IAHA;AAIbC,oBAAgB,CAAC,cAAD;AAJH,CAAjB;AAMAlB,IAAII,GAAJ,CAAQ,oBAAKU,UAAL,CAAR;;AAEAd,IAAII,GAAJ,CAAQ,UAASe,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC7BD,QAAIE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,QAAIE,MAAJ,CAAW,8BAAX,EAA2C,gDAA3C;AACAF,QAAIE,MAAJ,CAAW,8BAAX,EAA2C,iCAA3C;;AAEAD;AACH,CAND;;AAQArB,IAAII,GAAJ,CAAQ,MAAR,EAAgBmB,gBAAhB;AACAvB,IAAII,GAAJ,CAAQ,cAAR,EAAwB,UAACe,GAAD,EAAMK,IAAN,EAAe;AACnC,QAAIC,WAAWhB,eAAKiB,OAAL,CAAaf,YAAY,aAAzB,CAAf;AACAa,SAAKG,QAAL,CAAcF,QAAd;AACH,CAHD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOAzB,IAAI4B,MAAJ,CAAWhC,WAAX,EAAwB,YAAM;AAC1BiC,YAAQC,GAAR,CAAY,iCAAiClC,WAA7C;AACH,CAFD","file":"app.js","sourcesContent":["import express from 'express';\r\nimport http from 'http';\r\nimport routes from './routes';\r\nimport bodyParser from 'body-parser';\r\nimport path from 'path';\r\nimport cors from 'cors';\r\nimport p from './passport';\r\nimport passport from 'passport';\r\n\r\nlet port_number = process.env.PORT || 3001;\r\nlet app = express();\r\n\r\napp.server = http.createServer(app);\r\napp.use(bodyParser.json());\r\napp.use(express.static(path.join(__dirname)));\r\n\r\napp.use(passport.initialize());\r\n\r\nvar corsOption = {\r\n    origin: true,\r\n    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\r\n    credentials: true,\r\n    exposedHeaders: ['x-auth-token']\r\n};\r\napp.use(cors(corsOption));\r\n\r\napp.use(function(req, res, next) {\r\n    res.header(\"Access-Control-Allow-Origin\", \"*\");\r\n    res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\r\n    res.header('Access-Control-Allow-Methods', 'PUT, POST, GET, DELETE, OPTIONS');\r\n\r\n    next();\r\n});\r\n\r\napp.use('/api', routes);\r\napp.use('/testLanding', (req, resp) => {\r\n    let fileName = path.resolve(__dirname + '/index.html');\r\n    resp.sendFile(fileName);\r\n})\r\n/* This is for preventing routes and sending forbidden message for unknown urls */\r\n// app.get('/home', function (req, res) {\r\n//     let fileName = path.resolve(__dirname + '/index.html');\r\n//     console.log(fileName);\r\n//     res.sendFile(fileName);\r\n// });\r\n/* This is for allowing refresh when using client side routing and redirecting accordingly */\r\n/*\r\napp.get('/*', function (req, res) {\r\n    let fileName = path.resolve(__dirname + '/index.html');\r\n    console.log(fileName);\r\n    res.sendFile(fileName);\r\n});\r\n*/\r\napp.listen(port_number, () => {\r\n    console.log('Tech Assess API runnning on ' + port_number);\r\n})"]}