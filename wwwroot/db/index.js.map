{"version":3,"sources":["../../src/db/index.js"],"names":["dbFileName","dbPath","path","join","__dirname","console","log","db","loki","databaseInitialize","entities","map","item","index","dbCollection","getCollection","addCollection","dataCleanup","entitiesToDelete","clear","runProgramLogic","saveDatabase","loadDatabase","err"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,aAAa,UAAnB;AACA,IAAIC,SAASC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,IAA3B,EAAiC,MAAjC,EAAyCJ,UAAzC,CAAb;AACAC,SAASC,eAAKC,IAAL,CAAUC,SAAV,EAAoB,IAApB,EAA0B,MAA1B,EAAkCJ,UAAlC,CAAT;AACAK,QAAQC,GAAR,CAAY,aAAaL,MAAzB;AACA;;AAEA,IAAIM,KAAK,IAAIC,gBAAJ,CAASP,MAAT,CAAT;;AAEA;AACA,IAAMQ,qBAAqB,SAArBA,kBAAqB,GAAM;;AAE/BC,WAASC,GAAT,CAAa,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC5B,QAAIC,eAAeP,GAAGQ,aAAH,CAAiBH,IAAjB,CAAnB;AACA,QAAGE,iBAAiB,IAApB,EAA0B;AACxBP,SAAGS,aAAH,CAAiBJ,IAAjB;AACD;AACF,GALD;AAMAP,UAAQC,GAAR,CAAY,0BAAZ;AACD,CATD;;AAWA,IAAMW,cAAc,SAAdA,WAAc,GAAM;AACxBC,mBAAiBP,GAAjB,CAAqB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACpC,QAAIC,eAAeP,GAAGQ,aAAH,CAAiBH,IAAjB,CAAnB;AACA,QAAGE,iBAAiB,IAApB,EAA0B;AACxBA,mBAAaK,KAAb;AACD;AACF,GALD;AAMAd,UAAQC,GAAR,CAAY,sBAAZ;AACD,CARD;;AAWA;AACA,SAASc,eAAT,GAA2B;AACzBX;AACAQ;AACAV,KAAGc,YAAH;AACF;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAEDhB,QAAQC,GAAR,CAAY,EAAZ;AACAD,QAAQC,GAAR,CAAY,qBAAZ;;AAEA;AACAC,GAAGe,YAAH,CAAgB,EAAhB,EAAoB,UAASC,GAAT,EAAc;AAChCd;AACAJ,UAAQC,GAAR,CAAY,gBAAZ;AACAc;AACAf,UAAQC,GAAR,CAAY,oEAAZ;AACD,CALD;;AAOAD,QAAQC,GAAR,CAAY,gBAAZ;AACA,IAAMI,WAAW,CACf,YADe,EACD,OADC,EACQ,QADR,EACkB,YADlB,EACgC,MADhC,EACwC,OADxC,CAAjB;AAGA,IAAMQ,mBAAmB;AACvB;AACA;AACA;AACA;AACA;AACA;AANuB,CAAzB;;kBASeX,E","file":"index.js","sourcesContent":["import loki from 'lokijs';\r\nimport path from 'path';\r\n\r\nconst dbFileName = 'dev.json';\r\nvar dbPath = path.join(__dirname, '..', '..', 'data', dbFileName);\r\ndbPath = path.join(__dirname,'..', 'data', dbFileName);\r\nconsole.log('dbpath: ' + dbPath);\r\n// const db = new loki(dbPath);\r\n\r\nvar db = new loki(dbPath);\r\n\r\n// set up an initialize function for first load (when db hasn't been created yet)\r\nconst databaseInitialize = () => {\r\n\r\n  entities.map((item, index) => {\r\n    let dbCollection = db.getCollection(item);\r\n    if(dbCollection === null) {\r\n      db.addCollection(item);\r\n    }\r\n  });\r\n  console.log('initialized all entities');\r\n}\r\n\r\nconst dataCleanup = () => {\r\n  entitiesToDelete.map((item, index) => {\r\n    let dbCollection = db.getCollection(item);\r\n    if(dbCollection !== null) {\r\n      dbCollection.clear();\r\n    }\r\n  })\r\n  console.log('deleted all entities');\r\n}\r\n\r\n\r\n// place any bootstrap logic which needs to be run after loadDatabase has completed\r\nfunction runProgramLogic() {\r\n  databaseInitialize();\r\n  dataCleanup();\r\n  db.saveDatabase();\r\n//   var categories = db.getCollection(\"categories\");\r\n//   var categoryCount = categories.count();\r\n//   var now = new Date();\r\n\r\n//   console.log(\"old number of categories in database : \" + categoryCount);\r\n\r\n//   categories.insert({ title: 'Programming', description: 'All programming languages' });\r\n//   categoryCount = categories.count();\r\n\r\n//   console.log(\"new number of categories in database : \" + categoryCount);\r\n//   console.log(\"\");\r\n//   categories.clear();\r\n  // var mcqs = db.getCollection(\"mcqs\");\r\n  // if(mcqs){\r\n  //   mcqs.clear();\r\n  // }\r\n  // manually save\r\n  //  db.saveDatabase(function(err) {\r\n  //   if (err) {\r\n  //     console.log(err);\r\n  //   }\r\n  //   else {\r\n  //     console.log(\"saved... it can now be loaded or reloaded with up to date data\");\r\n  //   }\r\n  // });\r\n}\r\n\r\nconsole.log(\"\");\r\nconsole.log(\"Loading database...\");\r\n\r\n// manual bootstrap\r\ndb.loadDatabase({}, function(err) {\r\n  databaseInitialize();\r\n  console.log(\"db initialized\");\r\n  runProgramLogic();\r\n  console.log(\"program logic run but it's save database probably not finished yet\");\r\n});\r\n\r\nconsole.log(\"wait for it...\");\r\nconst entities = [\r\n  \"categories\", \"users\", \"skills\", \"candidates\", \"mcqs\", \"tests\"\r\n];\r\nconst entitiesToDelete = [\r\n  // \"categories\", \r\n  // \"users\", \r\n  // \"skills\", \r\n  // \"mcqs\", \r\n  // \"tests\",\r\n  // \"candidates\", \r\n];\r\n\r\nexport default db;\r\n"]}