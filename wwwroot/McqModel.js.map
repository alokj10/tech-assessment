{"version":3,"sources":["../src/McqModel.js"],"names":["McqModel","entities","GetAll","userEntity","Promise","resolve","reject","role","users","UserRoles","admin","console","log","data","length","GetMcqsByUser","filteredMcqs","filter","item","index","addedBy","emailId","BulkAddMcq","jsonData","mcqs","map","Add","then","res","catch","error","entity","correctOptions","correctAnswer","indexOf","choices","choice","chIndex","isCorrect","insert","db","saveDatabase","Update","mcqToUpdate","find","$loki","title","description","user","updatedBy","update","Delete","mcqToDelete","chain","remove","initializeCollection","getCollection","addCollection"],"mappings":"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","file":"McqModel.js","sourcesContent":["import db from './db';\r\nimport users from './users';\r\n\r\nclass McqModel {\r\n    entities = {};\r\n\r\n    constructor() {\r\n      this.initializeCollection();\r\n    }\r\n\r\n    GetAll = (userEntity) => {\r\n        return new Promise((resolve, reject) => {\r\n            // console.log('get all mcqs called', req.user);\r\n            // let mcqs = this.initializeCollection();\r\n            if(userEntity && userEntity.role === users.UserRoles.admin) {\r\n                console.log(this.entities.data.length);\r\n                resolve(this.entities.data);\r\n            }\r\n            else {\r\n                this.GetMcqsByUser(userEntity);\r\n            }\r\n        })\r\n    }\r\n\r\n    GetMcqsByUser = (userEntity) => {\r\n        if(this.entities.data && this.entities.data.length > 0 && userEntity) {\r\n          let filteredMcqs = this.entities.data.filter((item, index) => {\r\n              return item.addedBy = userEntity.emailId;\r\n          });\r\n          console.log(filteredMcqs.length);\r\n          return filteredMcqs;\r\n        }\r\n        return [];\r\n    }\r\n\r\n    BulkAddMcq = (jsonData) => {\r\n        return new Promise((resolve, reject) => {\r\n            let mcqs = jsonData.mcqs;\r\n            if(mcqs && mcqs.length > 0) {\r\n                mcqs.map((item, index) => {\r\n                    item.addedBy = jsonData.addedBy;\r\n                    this.Add(item)\r\n                      .then((res) => {\r\n                          console.log('mcq added');\r\n                      })\r\n                      .catch((error) => {\r\n                          console.log('mcq add failed: ' + error);\r\n                      });\r\n                })\r\n            } \r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    Add = (entity) => {\r\n      return new Promise((resolve, reject) => {\r\n          console.log('mcq insert called', this.entities.data.length);\r\n          let correctOptions = ['A','B','C','D','E','F'];\r\n          if(entity.correctAnswer && correctOptions.indexOf(entity.correctAnswer) > -1) {\r\n                if(entity.choices && entity.choices.length > 0) {\r\n                    entity.choices.map((choice, chIndex) => {\r\n                        if(chIndex === correctOptions.indexOf(entity.correctAnswer)) {\r\n                            choice.isCorrect = true;              \r\n                        }\r\n                        else {\r\n                            choice.isCorrect = false;\r\n                        }\r\n                    })\r\n                }\r\n          }\r\n          this.entities.insert(entity);\r\n          db.saveDatabase();\r\n          console.log('save db called');\r\n          resolve(true);\r\n      });\r\n    }\r\n\r\n    Update = (entity) => {\r\n      return new Promise((resolve, reject) => {\r\n          // let mcqs = this.initializeCollection();\r\n          let mcqToUpdate = this.entities.find({ '$loki': entity.$loki });\r\n          if(mcqToUpdate && mcqToUpdate.length > 0) {\r\n              mcqToUpdate[0].title = entity.title;\r\n              mcqToUpdate[0].description = entity.description;\r\n              if(entity.user) {\r\n                  mcqToUpdate[0].updatedBy = entity.emailId;\r\n              }\r\n              this.entities.update(mcqToUpdate[0]);\r\n              db.saveDatabase();\r\n              resolve(true);\r\n          }\r\n          else {\r\n              console.log('nothing to update');\r\n              reject(\"nothing to update\");\r\n          }\r\n      })\r\n    }\r\n\r\n    Delete = (entity) => {\r\n      return new Promise((resolve, reject) => {\r\n          let mcqToDelete = this.entities.chain().find({ '$loki': entity.$loki });\r\n          if(mcqToDelete) {\r\n              mcqToDelete.remove();\r\n              db.saveDatabase();\r\n              resolve(true);\r\n          }\r\n          else {\r\n              console.log('nothing to delete');\r\n              reject(\"nothing to delete\");\r\n          }\r\n      })\r\n    }\r\n\r\n    initializeCollection = () => {\r\n      this.entities = db.getCollection('mcqs');\r\n      if(!this.entities) {\r\n          this.entities = db.addCollection('mcqs');\r\n      }\r\n      console.log('mcq entity initialized', this.entities.data.length);\r\n    }\r\n}\r\nexport default McqModel;\r\n"]}