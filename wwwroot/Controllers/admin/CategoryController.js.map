{"version":3,"sources":["../../../src/Controllers/admin/CategoryController.js"],"names":["CategoryController","GetAll","req","resp","console","log","categories","initializeCollection","data","length","send","Add","body","insert","db","saveDatabase","JSON","stringify","Update","categoryToUpdate","find","$loki","title","description","update","Delete","getCollection","addCollection"],"mappings":";;;;;;AAAA;;;;;;;;IAEMA,kB;;;;;SACFC,M,GAAS,UAACC,GAAD,EAAMC,IAAN,EAAe;AACpBC,gBAAQC,GAAR,CAAY,2BAAZ;AACA,YAAIC,aAAa,MAAKC,oBAAL,EAAjB;AACAH,gBAAQC,GAAR,CAAYC,WAAWE,IAAX,CAAgBC,MAA5B;AACAN,aAAKO,IAAL,CAAUJ,WAAWE,IAArB;AACH,K;;SAEDG,G,GAAM,UAACT,GAAD,EAAMC,IAAN,EAAe;AACjBC,gBAAQC,GAAR,CAAY,qBAAZ;AACAD,gBAAQC,GAAR,CAAYH,IAAIU,IAAhB;AACA,YAAIN,aAAa,MAAKC,oBAAL,EAAjB;AACAD,mBAAWO,MAAX,CAAkBX,IAAIU,IAAtB;AACAE,qBAAGC,YAAH;AACAZ,aAAKO,IAAL,CAAUM,KAAKC,SAAL,CAAef,IAAIU,IAAnB,CAAV;AACH,K;;SAEDM,M,GAAS,UAAChB,GAAD,EAAMC,IAAN,EAAe;AACpBC,gBAAQC,GAAR,CAAY,wBAAZ;AACAD,gBAAQC,GAAR,CAAYH,IAAIU,IAAhB;AACA,YAAIN,aAAa,MAAKC,oBAAL,EAAjB;AACA,YAAIY,mBAAmBb,WAAWc,IAAX,CAAgB,EAAE,SAASlB,IAAIU,IAAJ,CAASS,KAApB,EAAhB,CAAvB;AACA,YAAGF,oBAAoBA,iBAAiBV,MAAjB,GAA0B,CAAjD,EAAoD;AAChDU,6BAAiB,CAAjB,EAAoBG,KAApB,GAA4BpB,IAAIU,IAAJ,CAASU,KAArC;AACAH,6BAAiB,CAAjB,EAAoBI,WAApB,GAAkCrB,IAAIU,IAAJ,CAASW,WAA3C;AACAjB,uBAAWkB,MAAX,CAAkBL,iBAAiB,CAAjB,CAAlB;AACH,SAJD,MAKK;AACDf,oBAAQC,GAAR,CAAY,mBAAZ;AACH;AACDD,gBAAQC,GAAR,CAAYc,gBAAZ;AACAhB,aAAKO,IAAL,CAAUM,KAAKC,SAAL,CAAef,IAAIU,IAAnB,CAAV;AACH,K;;SAEDa,M,GAAS,UAACvB,GAAD,EAAMC,IAAN,EAAe;AACpBC,gBAAQC,GAAR,CAAY,qBAAZ;AACAF,aAAKO,IAAL,CAAU,qBAAV;AACH,K;;SAEDH,oB,GAAuB,YAAM;AACzB,YAAID,aAAaQ,aAAGY,aAAH,CAAiB,YAAjB,CAAjB;AACA,YAAG,CAACpB,UAAJ,EAAgB;AACZA,yBAAaQ,aAAGa,aAAH,CAAiB,YAAjB,CAAb;AACH;AACD,eAAOrB,UAAP;AACH,K;;;kBAGU,IAAIN,kBAAJ,E","file":"CategoryController.js","sourcesContent":["import db from '../../db';\r\n\r\nclass CategoryController {\r\n    GetAll = (req, resp) => {\r\n        console.log('get all categories called');\r\n        let categories = this.initializeCollection();\r\n        console.log(categories.data.length);\r\n        resp.send(categories.data);\r\n    }\r\n\r\n    Add = (req, resp) => {\r\n        console.log('Add Category called');\r\n        console.log(req.body);\r\n        let categories = this.initializeCollection();\r\n        categories.insert(req.body);\r\n        db.saveDatabase();\r\n        resp.send(JSON.stringify(req.body));\r\n    }\r\n\r\n    Update = (req, resp) => {\r\n        console.log('update category called');\r\n        console.log(req.body);\r\n        let categories = this.initializeCollection();\r\n        let categoryToUpdate = categories.find({ '$loki': req.body.$loki });\r\n        if(categoryToUpdate && categoryToUpdate.length > 0) {\r\n            categoryToUpdate[0].title = req.body.title;\r\n            categoryToUpdate[0].description = req.body.description;\r\n            categories.update(categoryToUpdate[0]);\r\n        }\r\n        else {\r\n            console.log('nothing to update');\r\n        }\r\n        console.log(categoryToUpdate);\r\n        resp.send(JSON.stringify(req.body));\r\n    }\r\n\r\n    Delete = (req, resp) => {\r\n        console.log('get all mcqs called');\r\n        resp.send('get all mcqs called');\r\n    }\r\n\r\n    initializeCollection = () => {\r\n        let categories = db.getCollection('categories');\r\n        if(!categories) {\r\n            categories = db.addCollection('categories');\r\n        }\r\n        return categories;\r\n    }\r\n}\r\n\r\nexport default new CategoryController();"]}