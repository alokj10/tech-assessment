{"version":3,"sources":["../../../src/Controllers/admin/UserController.js"],"names":["UserController","LoadConfig","req","resp","dbConfig","DbConfig","Initialize","then","KeyValues","status","json","catch","err","message","GetAll","console","log","user","model","UserModel","res","error","msg","send","Add","body","userToAdd","user_meta","createdBy","id","createdOn","Date","toLocaleDateString","JSON","stringify","AddNewUserToBeVerified","verificationLink","userId","SendVerificationEmail","VerifyUser","query","userIv","userContent","userToUpdate","Update","homePage","fileName","url","redirect","Delete","BaseController"],"mappings":"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","file":"UserController.js","sourcesContent":["import db from '../../db';\r\nimport userModel from '../../users';\r\nimport BaseController from '../BaseController';\r\nimport UserModel from '../../Models/UserModel';\r\nimport DbConfig from '../../commons/DbConfig';\r\nimport { encrypt, getHomePagePath, getSiteUrl } from '../../utils/general';\r\nimport path from 'path';\r\n\r\nclass UserController extends BaseController {\r\n\r\n    LoadConfig = (req, resp) => {\r\n        let dbConfig = new DbConfig();\r\n        dbConfig.Initialize().then((KeyValues) => {\r\n            resp.status(200).json(KeyValues);\r\n        }).catch((err) => {\r\n            resp.status(500).json({message: 'Exception in loading config: ' + err});\r\n        })\r\n    }\r\n\r\n    GetAll = (req, resp) => {\r\n        console.log('get all users called', req.user);\r\n        \r\n        let model = new UserModel();\r\n        model.GetAll(req.user)\r\n            .then((res) => {\r\n                console.log('users retrieved');\r\n                resp.status(200).json(res);\r\n            })\r\n            .catch((error) => {\r\n                let msg = \"Error in fetching users: \" + error;\r\n                console.log(msg);\r\n                resp.status(500).send(msg);\r\n            });\r\n    }\r\n\r\n    Add = (req, resp)=>{\r\n        console.log('add user called');\r\n        console.log(req.body);\r\n        let userToAdd = req.body;\r\n        userToAdd = req.body.user_meta;\r\n        \r\n        userToAdd.createdBy = req.user.id;\r\n        userToAdd.createdOn = (new Date()).toLocaleDateString();\r\n\r\n        let model = new UserModel(); \r\n        model.Add(userToAdd)\r\n            .then((res) => {\r\n                if(res) {\r\n                    console.log('User Added');\r\n                    resp.status(200).send(JSON.stringify(req.body));\r\n                }  \r\n            })\r\n            .catch((error) => {\r\n                let msg = \"Error in adding User: \" + error;\r\n                console.log(msg);\r\n                resp.status(500).send(msg);\r\n            });\r\n    }\r\n\r\n    AddNewUserToBeVerified = async (req, resp) => {\r\n        console.log('new user to be confirmed called');\r\n        console.log(req.body);\r\n        let userToAdd = req.body.user_meta;\r\n        \r\n        userToAdd.createdBy = 'self';\r\n        userToAdd.status = 'pending verification';\r\n        userToAdd.createdOn = (new Date()).toLocaleDateString();\r\n\r\n        let verificationLink = '';\r\n\r\n        let model = new UserModel(); \r\n        let userId = await model.Add(userToAdd)\r\n        .catch((err) => {\r\n            let msg = \"Error while adding User: \" + error;\r\n            console.log(msg);\r\n            resp.status(500).send(msg);\r\n        })\r\n            // .then((res) => {\r\n                if(userId) {\r\n                    console.log('User Added, Id: ', userId);\r\n                    await model.SendVerificationEmail(userId)\r\n                    .catch((err) => {\r\n                        let msg = \"Error while sending email: \" + err;\r\n                        console.log(msg);\r\n                        resp.status(500).send(msg);\r\n                    });\r\n                    resp.status(200).send(JSON.stringify(userToAdd));\r\n                } else { \r\n            // })\r\n            // .catch((error) => {\r\n                    let msg = \"Could not add user. Try after some time\";\r\n                    console.log(msg);\r\n                    resp.status(500).send(msg);\r\n                }\r\n            // });\r\n    }\r\n\r\n    VerifyUser = async (req, resp) => {\r\n        console.log('Verify user called');\r\n        console.log(req.query);\r\n        let { userIv, userContent } = req.query;\r\n        console.log('calling decrypt on ', userIv, userContent);\r\n        let model = new UserModel();\r\n        let userToUpdate = await model.VerifyUser(userIv, userContent)\r\n        .catch((err) => {\r\n            let msg = 'User not found or verification link expired. Please sign up again to use the website.'\r\n            resp.status(200).send(msg);\r\n            return;\r\n        });\r\n        if(userToUpdate && userToUpdate.user_meta) {\r\n            userToUpdate.user_meta.status = 'verified'; \r\n        }\r\n        else {\r\n            let msg = 'User not found or verification link expired. Please sign up again to use the website.'\r\n            resp.status(200).send(msg);\r\n            return;\r\n        }\r\n        model.Update(userToUpdate)\r\n            .then(async (res) => {\r\n                if(res) {\r\n                    let homePage = getHomePagePath();\r\n                    let fileName = homePage;\r\n                    // resp.sendFile(fileName);\r\n                    let url = `${await getSiteUrl()}emailVerified`;\r\n                    console.log('User Updated, redirecting to ', url);\r\n                    // resp.writeHead(301,\r\n                    //     { Location: url }\r\n                    //   );\r\n                    resp.redirect(url);\r\n                }  \r\n            })\r\n            .catch((error) => {\r\n                let msg = \"Error in updating User: \" + error;\r\n                console.log(msg);\r\n                resp.status(500).send(msg);\r\n            });\r\n    }\r\n\r\n    Update = (req, resp)=>{\r\n        console.log('update user called');\r\n        // let userObj = req.body.user;\r\n        // let dbuser = userModel.UpdateUser(userObj.emailId, userObj);\r\n        // resp.status(200).send(dbuser);\r\n        console.log(req.body);\r\n        let model = new UserModel(); \r\n        model.Update(req.body)\r\n            .then((res) => {\r\n                if(res) {\r\n                    console.log('User Updated');\r\n                    resp.status(200).send(JSON.stringify(req.body));\r\n                }  \r\n            })\r\n            .catch((error) => {\r\n                let msg = \"Error in updating User: \" + error;\r\n                console.log(msg);\r\n                resp.status(500).send(msg);\r\n            });\r\n    }\r\n\r\n    Delete = (req, resp) => {\r\n        console.log('delete user called');\r\n        console.log(req.body);\r\n        // let userObj = req.body.user;\r\n        // userModel.DeleteUser(userObj.emailId);\r\n        // resp.status(200).send('success');\r\n        let model = new UserModel(); \r\n        model.Delete(req.body)\r\n            .then((res) => {\r\n                if(res) {\r\n                    console.log('User deleted');\r\n                    resp.status(200).send(JSON.stringify(req.body));\r\n                }  \r\n            })\r\n            .catch((error) => {\r\n                let msg = \"Error in deleting User: \" + error;\r\n                console.log(msg);\r\n                resp.status(500).send(msg);\r\n            });\r\n    }\r\n\r\n}\r\nexport default new UserController();\r\n"]}