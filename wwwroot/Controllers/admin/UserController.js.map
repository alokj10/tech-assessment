{"version":3,"sources":["../../../src/Controllers/admin/UserController.js"],"names":["UserController","LoadConfig","req","resp","dbConfig","DbConfig","Initialize","then","KeyValues","status","json","catch","err","message","GetAll","console","log","user","model","UserModel","res","error","msg","send","Add","body","userToAdd","user_meta","createdBy","id","createdOn","Date","toLocaleDateString","JSON","stringify","Update","Delete","BaseController"],"mappings":"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","file":"UserController.js","sourcesContent":["import db from '../../db';\r\nimport userModel from '../../users';\r\nimport BaseController from '../BaseController';\r\nimport UserModel from '../../Models/UserModel';\r\nimport DbConfig from '../../commons/DbConfig';\r\n\r\nclass UserController extends BaseController {\r\n\r\n    LoadConfig = (req, resp) => {\r\n        let dbConfig = new DbConfig();\r\n        dbConfig.Initialize().then((KeyValues) => {\r\n            resp.status(200).json(KeyValues);\r\n        }).catch((err) => {\r\n            resp.status(500).json({message: 'Exception in loading config: ' + err});\r\n        })\r\n    }\r\n\r\n    GetAll = (req, resp) => {\r\n        console.log('get all users called', req.user);\r\n        \r\n        let model = new UserModel();\r\n        model.GetAll(req.user)\r\n            .then((res) => {\r\n                console.log('users retrieved');\r\n                resp.status(200).json(res);\r\n            })\r\n            .catch((error) => {\r\n                let msg = \"Error in fetching users: \" + error;\r\n                console.log(msg);\r\n                resp.status(500).send(msg);\r\n            });\r\n    }\r\n\r\n    Add = (req, resp)=>{\r\n        console.log('add user called');\r\n        // let userObj=req.body.user;\r\n        // let dbuser=userModel.Add(userObj);\r\n        // resp.status(200).send(dbuser);\r\n        console.log(req.body);\r\n        let userToAdd = req.body;\r\n        userToAdd = req.body.user_meta;\r\n        \r\n        userToAdd.createdBy = req.user.id;\r\n        userToAdd.createdOn = (new Date()).toLocaleDateString();\r\n\r\n        let model = new UserModel(); \r\n        model.Add(userToAdd)\r\n            .then((res) => {\r\n                if(res) {\r\n                    console.log('User Added');\r\n                    resp.status(200).send(JSON.stringify(req.body));\r\n                }  \r\n            })\r\n            .catch((error) => {\r\n                let msg = \"Error in adding User: \" + error;\r\n                console.log(msg);\r\n                resp.status(500).send(msg);\r\n            });\r\n    }\r\n\r\n    Update = (req, resp)=>{\r\n        console.log('update user called');\r\n        // let userObj = req.body.user;\r\n        // let dbuser = userModel.UpdateUser(userObj.emailId, userObj);\r\n        // resp.status(200).send(dbuser);\r\n        console.log(req.body);\r\n        let model = new UserModel(); \r\n        model.Update(req.body)\r\n            .then((res) => {\r\n                if(res) {\r\n                    console.log('User Updated');\r\n                    resp.status(200).send(JSON.stringify(req.body));\r\n                }  \r\n            })\r\n            .catch((error) => {\r\n                let msg = \"Error in updating User: \" + error;\r\n                console.log(msg);\r\n                resp.status(500).send(msg);\r\n            });\r\n    }\r\n\r\n    Delete = (req, resp) => {\r\n        console.log('delete user called');\r\n        console.log(req.body);\r\n        // let userObj = req.body.user;\r\n        // userModel.DeleteUser(userObj.emailId);\r\n        // resp.status(200).send('success');\r\n        let model = new UserModel(); \r\n        model.Delete(req.body)\r\n            .then((res) => {\r\n                if(res) {\r\n                    console.log('User deleted');\r\n                    resp.status(200).send(JSON.stringify(req.body));\r\n                }  \r\n            })\r\n            .catch((error) => {\r\n                let msg = \"Error in deleting User: \" + error;\r\n                console.log(msg);\r\n                resp.status(500).send(msg);\r\n            });\r\n    }\r\n\r\n}\r\nexport default new UserController();\r\n"]}