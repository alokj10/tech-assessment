{"version":3,"sources":["../../../src/Controllers/admin/SkillController.js"],"names":["SkillController","entityName","skills","GetAll","req","resp","console","log","initializeCollection","then","res","send","data","catch","err","obj","status","message","Add","body","db","insert","skill_meta","JSON","stringify","Delete","delete","id","promise","Promise","resolve","reject","getCollection","BaseController"],"mappings":";;;;;;AACA;;;;AACA;;;;;;;;;;+eAFA;;;IAIMA,e;;;;;;;;;;;;;;4MACFC,U,GAAa,Q,QACbC,M,GAAS,E,QAETC,M,GAAS,UAACC,GAAD,EAAMC,IAAN,EAAe;AACpBC,oBAAQC,GAAR,CAAY,uBAAZ;AACA;AACA;AACA;AACA,kBAAKC,oBAAL,GAA4BC,IAA5B,CAAiC,UAACC,GAAD,EAAS;AACtCJ,wBAAQC,GAAR,CAAY,aAAZ;AACAF,qBAAKM,IAAL,CAAU,MAAKT,MAAL,CAAYU,IAAtB;AACH,aAHD,EAGGC,KAHH,CAGS,UAACC,GAAD,EAAS;AACd,oBAAIC,MAAM,EAAEC,QAAQ,GAAV,EAAeC,SAASH,GAAxB,EAAV;AACAT,qBAAKW,MAAL,CAAY,GAAZ,EAAiBL,IAAjB,CAAsBI,GAAtB;AACH,aAND;AAQH,S,QAEDG,G,GAAM,UAACd,GAAD,EAAMC,IAAN,EAAe;AACjBC,oBAAQC,GAAR,CAAY,kBAAZ;AACAD,oBAAQC,GAAR,CAAYH,IAAIe,IAAhB;AACAC,8BAAGC,MAAH,CAAU,MAAKpB,UAAf,EAA2BG,IAAIe,IAAJ,CAASG,UAApC;;AAEA;AACA;AACA;AACA;AACA;;AAEAjB,iBAAKM,IAAL,CAAUY,KAAKC,SAAL,CAAepB,IAAIe,IAAnB,CAAV;AACH,S,QAEDM,M,GAAS,UAACrB,GAAD,EAAMC,IAAN,EAAe;AACpBC,oBAAQC,GAAR,CAAY,qBAAZ;AACAD,oBAAQC,GAAR,CAAYH,IAAIe,IAAhB;AACAC,8BAAGM,MAAH,CAAU,MAAKzB,UAAf,EAA2BG,IAAIe,IAAJ,CAASQ,EAApC;AACAtB,iBAAKW,MAAL,CAAY,GAAZ,EAAiBL,IAAjB,CAAsB,SAAtB;AACH,S,QAQDH,oB,GAAuB,YAAM;AACzB,gBAAIoB,UAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC3CX,kCAAGY,aAAH,CAAiB,MAAK/B,UAAtB,EACKQ,IADL,CACU,UAACC,GAAD,EAAS;AACX,0BAAKR,MAAL,GAAcQ,GAAd;AACAoB,4BAAQ,MAAK5B,MAAb;AACH,iBAJL,EAIOW,KAJP,CAIa,UAACC,GAAD,EAAS;AACdR,4BAAQC,GAAR,CAAY,kBAAZ,EAAgCO,GAAhC;AACAiB,2BAAOjB,GAAP;AACH,iBAPL;AAQH,aATa,CAAd;AAUA,mBAAOc,OAAP;AACH,S;;AAnBD;AACA;AACA;AACA;AACA;AACA;AACA;;;;EA7C0BK,wB;;kBA6Df,IAAIjC,eAAJ,E","file":"SkillController.js","sourcesContent":["// import db from '../../db';\r\nimport db from '../../db/mysqldb';\r\nimport BaseController from '../BaseController';\r\n\r\nclass SkillController extends BaseController {\r\n    entityName = 'skills';\r\n    skills = {};\r\n\r\n    GetAll = (req, resp) => {\r\n        console.log('get all skills called');\r\n        // let skills = this.initializeCollection();\r\n        // console.log(skills.data.length);\r\n        // resp.send(skills.data);\r\n        this.initializeCollection().then((res) => {\r\n            console.log('initialized');\r\n            resp.send(this.skills.data);\r\n        }).catch((err) => {\r\n            var obj = { status: 500, message: err };\r\n            resp.status(500).send(obj);\r\n        });\r\n\r\n    }\r\n\r\n    Add = (req, resp) => {\r\n        console.log('Add skill called');\r\n        console.log(req.body);\r\n        db.insert(this.entityName, req.body.skill_meta);\r\n        \r\n        // let skills = this.initializeCollection();\r\n        // skills.insert(req.body);\r\n        // db.saveDatabase(() => {\r\n        //     this.EmailSnapshot('CategoryAdd');\r\n        // });\r\n\r\n        resp.send(JSON.stringify(req.body));\r\n    }\r\n\r\n    Delete = (req, resp) => {\r\n        console.log('delete skill called');\r\n        console.log(req.body);\r\n        db.delete(this.entityName, req.body.id);\r\n        resp.status(200).send('success');\r\n    }\r\n    // initializeCollection = () => {\r\n    //     let skills = db.getCollection('skills');\r\n    //     if(!skills) {\r\n    //         skills = db.addCollection('skills');\r\n    //     }\r\n    //     return skills;\r\n    // }\r\n    initializeCollection = () => {\r\n        var promise = new Promise((resolve, reject) => {\r\n            db.getCollection(this.entityName)\r\n                .then((res) => {\r\n                    this.skills = res;\r\n                    resolve(this.skills);\r\n                }).catch((err) => {\r\n                    console.log('error occurred: ', err);\r\n                    reject(err);\r\n                })\r\n        });\r\n        return promise;\r\n    }\r\n}\r\n\r\nexport default new SkillController();"]}