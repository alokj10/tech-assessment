{"version":3,"sources":["../../../src/Controllers/admin/OrgController.js"],"names":["OrgController","GetAll","req","resp","console","log","model","OrgModel","user","then","res","status","json","catch","err","obj","message","Add","body","org_meta","orgId","send","Update","entity","Delete","BaseController"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEMA,a;;;;;;;;;;;;;;wMAEFC,M,GAAS,UAACC,GAAD,EAAMC,IAAN,EAAe;AACpBC,oBAAQC,GAAR,CAAY,qBAAZ;AACA,gBAAIC,QAAQ,IAAIC,kBAAJ,EAAZ;;AAEAD,kBAAML,MAAN,CAAaC,IAAIM,IAAjB,EAAuBC,IAAvB,CAA4B,UAACC,GAAD,EAAS;AACjCN,wBAAQC,GAAR,CAAY,cAAZ;AACAF,qBAAKQ,MAAL,CAAY,GAAZ,EAAiBC,IAAjB,CAAsBF,GAAtB;AACH,aAHD,EAGGG,KAHH,CAGS,UAACC,GAAD,EAAS;AACdV,wBAAQC,GAAR,CAAY,iCAAiCS,GAA7C;AACA,oBAAIC,MAAM,EAAEJ,QAAQ,GAAV,EAAeK,SAASF,GAAxB,EAAV;AACAX,qBAAKQ,MAAL,CAAY,GAAZ,EAAiBC,IAAjB,CAAsBG,GAAtB;AACH,aAPD;AASH,S,QAEDE,G,GAAM,UAACf,GAAD,EAAMC,IAAN,EAAe;AACjBC,oBAAQC,GAAR,CAAY,gBAAZ;AACAD,oBAAQC,GAAR,CAAYH,IAAIgB,IAAhB;AAFiB,gBAGXC,QAHW,GAGEjB,IAAIgB,IAHN,CAGXC,QAHW;;AAIjB,gBAAIb,QAAQ,IAAIC,kBAAJ,EAAZ;AACAD,kBAAMW,GAAN,CAAUE,QAAV,EACSV,IADT,CACc,UAACW,KAAD,EAAW;AACbjB,qBAAKQ,MAAL,CAAY,GAAZ,EAAiBU,IAAjB,CAAsB,SAAtB;AACH,aAHT,EAISR,KAJT,CAIe,UAACC,GAAD,EAAS;AACZX,qBAAKQ,MAAL,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB,EAACI,SAASF,GAAV,EAAtB;AACH,aANT;AAQH,S,QAEDQ,M,GAAS,UAACpB,GAAD,EAAMC,IAAN,EAAe;AACpBC,oBAAQC,GAAR,CAAY,mBAAZ;AACAD,oBAAQC,GAAR,CAAYH,IAAIgB,IAAhB;AACA,gBAAIK,SAASrB,IAAIgB,IAAjB;AACA,gBAAIZ,QAAQ,IAAIC,kBAAJ,EAAZ;AACAD,kBAAMgB,MAAN,CAAaC,MAAb,EACSd,IADT,CACc,UAACW,KAAD,EAAW;AACbjB,qBAAKQ,MAAL,CAAY,GAAZ,EAAiBU,IAAjB,CAAsB,SAAtB;AACH,aAHT,EAISR,KAJT,CAIe,UAACC,GAAD,EAAS;AACZX,qBAAKQ,MAAL,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB,EAACI,SAASF,GAAV,EAAtB;AACH,aANT;AAOH,S,QAEDU,M,GAAS,UAACtB,GAAD,EAAMC,IAAN,EAAe;AACpBC,oBAAQC,GAAR,CAAY,mBAAZ;AACAD,oBAAQC,GAAR,CAAYH,IAAIgB,IAAhB;AACA,gBAAIK,SAASrB,IAAIgB,IAAjB;AACA,gBAAIZ,QAAQ,IAAIC,kBAAJ,EAAZ;AACAD,kBAAMkB,MAAN,CAAaD,MAAb,EACSd,IADT,CACc,UAACW,KAAD,EAAW;AACbjB,qBAAKQ,MAAL,CAAY,GAAZ,EAAiBU,IAAjB,CAAsB,SAAtB;AACH,aAHT,EAISR,KAJT,CAIe,UAACC,GAAD,EAAS;AACZX,qBAAKQ,MAAL,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB,EAACI,SAASF,GAAV,EAAtB;AACH,aANT;AAOH,S;;;;EA1DuBW,wB;;kBA8Db,IAAIzB,aAAJ,E","file":"OrgController.js","sourcesContent":["import db from '../../db/mysqldb';\r\nimport BaseController from '../BaseController';\r\nimport OrgModel from '../../Models/OrgModel';\r\n\r\nclass OrgController extends BaseController {\r\n\r\n    GetAll = (req, resp) => {\r\n        console.log('get all orgs called');\r\n        let model = new OrgModel();\r\n        \r\n        model.GetAll(req.user).then((res) => {\r\n            console.log('fetched orgs');\r\n            resp.status(200).json(res);\r\n        }).catch((err) => {\r\n            console.log('Exception in fetching orgs: ' + err);\r\n            var obj = { status: 500, message: err };\r\n            resp.status(500).json(obj);\r\n        });\r\n\r\n    }\r\n\r\n    Add = (req, resp) => {\r\n        console.log('Add org called');\r\n        console.log(req.body);\r\n        let { org_meta } = req.body;\r\n        let model = new OrgModel();\r\n        model.Add(org_meta)\r\n                .then((orgId) => {\r\n                    resp.status(200).send('success');\r\n                })\r\n                .catch((err) => {\r\n                    resp.status(500).json({message: err});  \r\n                });\r\n\r\n    }\r\n\r\n    Update = (req, resp) => {\r\n        console.log('Update Org called');\r\n        console.log(req.body);\r\n        let entity = req.body;\r\n        let model = new OrgModel();\r\n        model.Update(entity)\r\n                .then((orgId) => {\r\n                    resp.status(200).send('success');\r\n                })\r\n                .catch((err) => {\r\n                    resp.status(500).json({message: err});  \r\n                });\r\n    }\r\n\r\n    Delete = (req, resp) => {\r\n        console.log('delete org called');\r\n        console.log(req.body);\r\n        let entity = req.body;\r\n        let model = new OrgModel();\r\n        model.Delete(entity)\r\n                .then((orgId) => {\r\n                    resp.status(200).send('success');\r\n                })\r\n                .catch((err) => {\r\n                    resp.status(500).json({message: err});  \r\n                });\r\n    }\r\n\r\n}\r\n\r\nexport default new OrgController();"]}