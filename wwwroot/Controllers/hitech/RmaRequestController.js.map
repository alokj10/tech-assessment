{"version":3,"sources":["../../../src/Controllers/hitech/RmaRequestController.js"],"names":["RmaRequestController","GetAll","req","resp","console","log","rmaRequests","initializeCollection","data","length","send","Add","body","rmaToAdd","rmaCreated","insert","db","saveDatabase","emailInfo","to","emailTo","subject","notificationType","rmaRequest","rmaLink","generate_rma_link","emailHelper","EmailHelper","SendEmail","JSON","stringify","rmaRequestId","link","EmailConfig","rmaLinkPrefix","Update","rmaRequestToUpdate","find","$loki","categoryToUpdate","Delete","query","rmaRequestToDelete","chain","remove","getCollection","addCollection"],"mappings":"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","file":"RmaRequestController.js","sourcesContent":["import db from '../../db';\r\nimport EmailHelper from '../../commons/EmailHelper';\r\nimport { EmailConfig } from '../../commons/ServerConfig';\r\n\r\nclass RmaRequestController {\r\n    GetAll = (req, resp) => {\r\n        console.log('get all rma requests called');\r\n        let rmaRequests = this.initializeCollection();\r\n        console.log(rmaRequests.data.length);\r\n        resp.send(rmaRequests.data);\r\n    }\r\n\r\n    Add = (req, resp) => {\r\n        console.log('Add rma request called');\r\n        console.log(req.body);\r\n        let rmaToAdd = req.body;\r\n        let rmaRequests = this.initializeCollection();\r\n        let rmaCreated = rmaRequests.insert(rmaToAdd);\r\n        db.saveDatabase();\r\n        //send email\r\n        let emailInfo = {\r\n            to: rmaToAdd.emailTo,\r\n            subject: 'RMA Request Submitted',\r\n            notificationType: 'rma',\r\n            rmaRequest: rmaCreated,\r\n            rmaLink: this.generate_rma_link(rmaCreated['$loki'])\r\n        };\r\n        let emailHelper = new EmailHelper();\r\n        emailHelper.SendEmail(emailInfo);\r\n        \r\n        resp.send(JSON.stringify(req.body));\r\n    }\r\n\r\n    generate_rma_link = (rmaRequestId) => {\r\n        let link = EmailConfig.rmaLinkPrefix + rmaRequestId;\r\n        return link;\r\n    }\r\n\r\n\r\n    Update = (req, resp) => {\r\n        console.log('update rmaRequests called');\r\n        console.log(req.body);\r\n        let rmaRequests = this.initializeCollection();\r\n        let rmaRequestToUpdate = rmaRequests.find({ '$loki': req.body.$loki });\r\n        if(rmaRequestToUpdate && rmaRequestToUpdate.length > 0) {\r\n            //categoryToUpdate[0].title = req.body.title;\r\n            //categoryToUpdate[0].description = req.body.description;\r\n            //categories.update(categoryToUpdate[0]);\r\n        }\r\n        else {\r\n            console.log('nothing to update');\r\n        }\r\n        console.log(categoryToUpdate);\r\n        resp.send(JSON.stringify(req.body));\r\n    }\r\n\r\n    Delete = (req, resp) => {\r\n        console.log('delete rma request called', req.query.rmaRequestId);\r\n        let rmaRequests = this.initializeCollection();\r\n        console.log('rmaRequests length', rmaRequests.data.length);\r\n        let rmaRequestToDelete = rmaRequests.chain().find({ '$loki': +req.query.rmaRequestId });\r\n        if(rmaRequestToDelete) {\r\n            rmaRequestToDelete.remove();\r\n            db.saveDatabase();\r\n            console.log('deleted ' + req.query.rmaRequestId);\r\n            resp.send('deleted ' + req.query.rmaRequestId);\r\n        }\r\n        else {\r\n            console.log('nothing to delete');\r\n            resp.send('nothing to delete');\r\n        }\r\n    }\r\n\r\n    initializeCollection = () => {\r\n        let rmaRequests = db.getCollection('rmaRequests');\r\n        if(! rmaRequests) {\r\n            rmaRequests = db.addCollection('rmaRequests');\r\n        }\r\n        return rmaRequests;\r\n    }\r\n}\r\n\r\nexport default new RmaRequestController\r\n"]}