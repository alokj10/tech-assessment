{"version":3,"sources":["config.js","AuthHelper.js","actions/RedirectFromAction.js","repository.js","actions/UserActions.js","components/layouts/Header.js","components/layouts/SideDrawer.js","components/lib/LoadingComponent.js","components/Categories/AddCategory.js","components/Candidates/SelectCandidateExperience.js","components/Candidates/AddCandidate.js","components/Dashboard.js","components/lib/SnackbarComponent.js","Containers/User/EditUser.js","Containers/User/UsersList.js","Containers/User/AddUser.js","Containers/User/UserContainer.js","components/lib/LoginComponent.js","Containers/User/User401.js","Containers/User/UserForbidden.js","Containers/User/ResourceNotFound.js","components/Categories/CategoryList.js","actions/CategoryActions.js","Containers/CategoryContainer.js","components/Skills/AddSkill.js","components/Skills/SkillList.js","Containers/SkillContainer.js","actions/SkillActions.js","actions/TestConsoleActions.js","components/Mcq/AnswerOptions.js","Containers/TestConsole/McqItem.js","Containers/TestConsole/SelectedMcqs.js","Containers/TestConsole/McqSelector.js","Containers/TestConsole/TestConsoleQuestions.js","Containers/TestConsole/TestConsoleCandidates.js","Containers/TestConsole/TestConsoleSettings.js","Containers/TestConsole/TestConsoleTabs.js","Containers/TestConsole/TestConsoleContainer.js","components/Mcq/AddAnswerOption.js","components/Mcq/SelectExperience.js","components/Mcq/AddMcq.js","actions/McqActions.js","Containers/McqContainer.js","components/Mcq/BulkUpload.js","Containers/CandidateContainer.js","components/AdminTest/AddTest.js","actions/CandidateActions.js","components/AdminTest/TestList.js","Containers/AdminTestContainer.js","actions/AdminTestActions.js","components/Mcq/McqList.js","components/Candidates/CandidateList.js","Containers/InviteConsole/SendTestInvite.js","Containers/InviteConsole/InviteConsoleContainer.js","actions/InviteConsoleActions.js","Containers/Simulator/QuestionSimulatorConsoleContainer.js","Containers/Simulator/SimulatorConsoleContainer.js","actions/QuestionSimulatorConsoleActions.js","HiTech/RmaCustomerDetails.js","HiTech/AddRmaProduct.js","HiTech/RmaProductList.js","HiTech/RmaVendorDetails.js","HiTech/RmaTermsAndConditions.js","HiTech/HiTechAddress.js","HiTech/AddRmaRequest.js","HiTech/RmaRequestList.js","HiTech/AddRmaRequestContainer.js","HiTech/RmaRequestActions.js","HiTech/ViewRmaRequest.js","HiTech/RmaRequestListContainer.js","components/lib/PrivateRoute.js","components/Routes.js","components/Shell.js","reducers/categoryReducer.js","HiTech/rmaReducer.js","reducers/rootReducer.js","reducers/skillReducer.js","reducers/mcqReducer.js","reducers/candidateReducer.js","reducers/adminTestReducer.js","reducers/testConsoleReducer.js","reducers/inviteConsoleReducer.js","reducers/userReducer.js","reducers/questionSimulatorConsoleReducer.js","App.js","store.js","serviceWorker.js","index.js"],"names":["config","adminApiUrl","candidateApiUrl","hitechApiUrl","domainUrl","minBulkCount","maxBulkCount","validHeaders","prop","name","history","AuthHelper","Login","res","token","headers","data","JSON","stringify","console","log","localStorage","setItem","GetUserInfo","userInfo","getItem","user","parse","getToken","isLoggedIn","UserRoles","LogOut","removeItem","SetHistory","propsHistory","GetHistory","RedirectFromAction","page","hist","push","axios","interceptors","response","use","error","status","repository","getData","url","options","x-access-token","Promise","resolve","reject","get","then","catch","err","saveData","model","post","updateData","put","deleteData","delete","SetUserInfo","dispatch","type","payload","Header","props","classes","openState","react_default","a","createElement","AppBar_default","position","className","classNames","appBar","Object","defineProperty","appBarShift","Toolbar_default","disableGutters","IconButton_default","color","aria-label","onClick","onDrawerOpen","menuButton","hide","Menu_default","Typography_default","variant","noWrap","href","style","styles","welcomeMessage","role","onLogout","edge","aria-haspopup","index_es","marginLeft","MenuItems","routeName","routeCaption","icon","Dashboard","app","Assessment","Book","ViewQuilt","Polymer","PermIdentity","Airplay","getIcon","menuItem","React","SideDrawer","_classNames","_classNames2","theme","Drawer_default","drawer","drawerOpen","drawerClose","paper","open","toolbar","onDrawerClose","direction","ChevronRight_default","ChevronLeft_default","Divider_default","List_default","map","index","key","react_router_dom","to","ListItem_default","button","ListItemIcon_default","title","ListItemText_default","textDecoration","primary","LoadingComponent","CircularProgress_default","AddCategoryComponent","display","editMode","Card_default","padding","lib_LoadingComponent","noValidate","autoComplete","core_index_es","avatar","Avatar_default","Add_default","Edit_default","action","Button_default","onAdd","CardContent_default","FormControl_default","formControl","TextField_default","id","label","value","onChange","e","onFieldChange","target","margin","multiline","rows","description","CardActions_default","actionButton","size","onSubmit","width","backgroundColor","years","months","SelectCandidateExperience","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","handleClickOpen","handleClose","handleSubmit","onSubmitExperience","state","render","isTestAdmin","Dialog_default","disableBackdropClick","disableEscapeKeyDown","onClose","DialogTitle_default","DialogContent_default","InputLabel_default","htmlFor","Select_default","input","Input_default","item","MenuItem_default","DialogActions_default","Component","AddCandidate","dense","fullName","email","contactno","Candidates_SelectCandidateExperience","componentDidMount","container","xs","sm","card","cardHeader","cardAction","marginTop","connect","objectSpread","userReducer","textAlign","float","borderBottom","SnackbarComponent","openSnack","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","message","snackMessage","Close_default","SnackbarContent_default","root","EditUser","spacing","length","onUpdateUser","CustomTableCell","withStyles","head","palette","common","black","white","body","fontSize","TableCell","UsersList","users","align","Table_default","TableHead_default","TableRow_default","TableBody_default","react","emailId","toUpperCase","User_EditUser","val","field","onDeleteUser","AddUser","fullWidth","marginBottom","UserContainer","reload","componentWillReceiveProps","newprops","oldprops","success_message","FetchUsers","onAddUser","_this$props","current_user","Grid_default","User_AddUser","CurrentUserFieldChange","User_UsersList","UpdateUser","DeleteUser","lib_SnackbarComponent","snack_open","CloseSnackbar","userModel","errorStatus","OpenSnackbar","LoginComponent","googleResponse","access_token","accessToken","pathname","errorMessage","google_login","clientId","buttonText","onSuccess","onFailure","cookiePolicy","top","left","User401","lib_LoginComponent","UserForbidden","ResourceNotFound","CategoryList","ViewHeadline_default","onSearchEnable","searchEnabled","Search_default","concat","categories","Collapse_default","in","placeholder","searchTerm","onSearchCategory","divider","onCategorySelect","secondary","UpdateCategory","categoryModel","CategoryContainer","componentWillUpdate","FetchCategories","search_enabled","filteredCategories","categoryList","Categories_AddCategory","AddCategory","current_category","CurrentCategoryFieldChange","Categories_CategoryList","SelectCategory","BeginSearch","search_term","SearchCategory","categoryReducer","filter","toLowerCase","indexOf","AddSkillComponent","skill","SkillList","skills","onSearchSkill","Chip_default","chip","SkillContainer","FetchSkills","filteredSkills","skillList","Skills_AddSkill","AddSkill","current_skill","CurrentSkillFieldChange","Skills_SkillList","SearchSkill","skillReducer","skillModel","FetchTest","testId","AnswerOptions","choices","onChoiceSelect","content","isCorrect","Transition","assign","McqItem","handleDelete","onDeleteMcq","mcq","markForDeletion","isSelectable","isEditable","isChecked","question","category","onAddMcqToTest","selected","checked","onEditClick","TransitionComponent","fullScreen","right","bottom","Mcq_AnswerOptions","SelectedMcqs","selectedMcqs","TestConsole_McqItem","onSelect","openMcq","McqSelector","mcqList","onSelectMcqItem","mcqItem","onSelectMcq","findIndex","$loki","TestConsoleQuestions","currentTest","TestConsole_McqSelector","TestConsole_SelectedMcqs","TestConsoleCandidates","invitations","TestConsoleCandidates_CustomTableCell","inviteInfo","emailTo","testStatus","&:nth-of-type(odd)","background","default","TableRow","TestConsoleSettings","TestConsoleTabs","tabs","TestConsoleTabs_LinkTab","TestConsoleTabs_TabContainer","TestConsole_TestConsoleQuestions","TestConsole_TestConsoleCandidates","TestConsole_TestConsoleSettings","TabContainer","component","children","LinkTab","preventDefault","TestConsoleContainer","componentWillMount","location","onAddTest","AddTest","AddMcqToTest","current_test","onPublish","PublishTest","goBack","testName","subheader","TestConsole_TestConsoleTabs","mcqId","getButton","testConsoleReducer","testModel","filterIndex","undefined","splice","AddAnswerOption","_props$children","currentAnswer","onAnswerFieldChange","onAnswerAdd","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","FormControlLabel_default","control","Switch_default","ExpansionPanelActions_default","experienceLevel","SelectExperience","min","max","AddMcq","OutlinedInput_default","labelWidth","Mcq_SelectExperience","Mcq_AddAnswerOption","UpdateMcq","mcqModel","SearchMcq","FetchMcqs","isDeleted","McqContainer","setTimeout","onAddMcq","Mcq_AddMcq","AddAnswerChoice","current_mcq","CurrentMcqFieldChange","CurrentAnswerFieldChange","mcqReducer","answerModel","SelectMcq","minimumExperience","maximumExperience","BulkUpload","handleFileLoaded","fileName","matrixArray","finalJson","mcqs","columnIndex","validateHeaders","validCount","itemArray","rowIndex","colValue","colIndex","filteredHeaders","startsWith","onUpload","isValid","idx","vh","matrix","matrixLength","handleError","_this$state","react_csv_reader_default","cssClass","onFileLoaded","onError","inputId","inputStyle","CandidateContainer","onAddCandidate","Candidates_AddCandidate","current_candidate","CurrentCandidateFieldChange","candidateReducer","candidateModel","UpdateCandidate","experienceYears","experienceMonths","duration","TestList","tests","TestList_CustomTableCell","test","scope","pendingAttempt","completed","toEvaluate","AdminTestContainer","FetchTests","AdminTest_AddTest","CurrentTestFieldChange","AdminTest_TestList","adminTestReducer","UpdateTest","McqList","DeleteMcq","bulkDeleteMcq","filteredMcqs","mcqToDisplay","EndSearch","Fab_default","CandidateList","FetchCandidates","candidates","SearchCandidate","candidateList","SendTestInvite","helperText","emailSubject","margintop","gutterBottom","editorControl","height","InviteConsoleContainer","inviteAdded","onSendInvite","SendInvite","_this$props2","md","InviteConsole_SendTestInvite","InviteInfoFieldChange","inviteConsoleReducer","QuestionSimulatorConsoleContainer","handleAnswerSelect","itemIndex","selectedAnswers","tempAnswers","qEntity","choiceItem","choiceIndex","Inbox_default","SimulatorConsoleContainer","LoadExamSimulator","candidateTestObject","Simulator_QuestionSimulatorConsoleContainer","questionSimulatorConsoleReducer","RmaCustomerDetails","customerName","address","width50","telephone","fax","contactPerson","paddingLeft","paddingRight","AddRmaProduct","modelNo","quantity","invoiceNo","deliveryChallanNo","serialNo","productUseAddress","failureDescription","RmaProductList","HiTech_AddRmaProduct","product","onAddRmaProduct","current_product","onProductFieldChange","productList","RmaProductList_CustomTableCell","RmaVendorDetails","halfWidth","purchaseDate","vendorName","RmaTermsAndConditions","HiTechAddress","AddRmaRequestComponent","customerDetails","vendorDetails","Book_default","HiTech_RmaCustomerDetails","HiTech_RmaProductList","productItem","HiTech_RmaVendorDetails","onVendorDetailsFieldChange","HiTech_RmaTermsAndConditions","HiTech_HiTechAddress","RmaRequestList","rmaRequests","requestList","reverse","RmaRequestList_CustomTableCell","rmaRequest","onViewRma","AddRmaRequestContainer","InitializeRmaFields","current_rma_request","HiTech_AddRmaRequest","AddRmaRequest","CurrentRmaRequestFieldChange","VendorDetailsFieldChange","AddProductToRma","ProductFieldChange","saving","rmaReducer","rmaRequestModel","field_version","ViewRmaRequest","renderCustomerDetails","group","renderVendorDetails","onBackToAllRequests","RmaRequestListContainer","FetchRmaRequests","selectedRmaRequestModel","HiTech_RmaRequestList","SelectRmaRequest","HiTech_ViewRmaRequest","GoBackToAllRequests","PrivateRoute","_ref","rest","authed","objectWithoutProperties","react_router","Routes","lib_PrivateRoute","exact","path","DashboardComponent","BulkMcq","CategoriesContainer","SkillsContainer","UsersComponent","Shell","handleDrawerOpen","handleDrawerClose","Logout","LogoutCurrentUser","_this2","CssBaseline_default","layouts_Header","layouts_SideDrawer","components_Routes","zIndex","transition","transitions","create","easing","sharp","leavingScreen","enteringScreen","marginRight","flexShrink","whiteSpace","overflowX","unit","breakpoints","up","alignItems","justifyContent","mixins","flexGrow","withTheme","initial_current_Category","initial_state","combineReducers","arguments","field_updated","current_MCQ","answerId","current_CANDIDATE","filteredCandidates","contactnoList","current_TEST","arr","state_changed","mcqAdded","inivteAdded","current_USER","currentUserLocal","newState","viewRmaRequestModel","App","Blob","isAuthenticated","es","store","createStore","rootReducer","applyMiddleware","thunk","components_Shell","Boolean","window","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a3358d5a.chunk.js","sourcesContent":["var domain = 'http://localhost:3001';\r\ndomain = '';\r\nvar domainUrl = 'http://localhost:3000';\r\nconst validHeaders = [\r\n    { prop: \"category\", name: \"Category\" },\r\n    { prop: \"skill\", name: \"Skill\" },\r\n    { prop: \"question\", name: \"Title\" },\r\n    { prop: \"description\", name: \"Description\" },\r\n    { prop: \"score\", name: \"Score\" },\r\n    { prop: \"minimumExperience\", name: \"Min\" },\r\n    { prop: \"maximumExperience\", name: \"Max\" },\r\n    { prop: \"correctAnswer\", name: \"Answer\" },\r\n    { prop: \"choiceA\", name: \"A\" },\r\n    { prop: \"choiceB\", name: \"B\" },\r\n    { prop: \"choiceC\", name: \"C\" },\r\n    { prop: \"choiceD\", name: \"D\" },\r\n    { prop: \"choiceE\", name: \"E\" }\r\n];\r\n\r\nexport default {\r\n    adminApiUrl: domain + '/api/admin/',\r\n    candidateApiUrl: domain + '/api/candidate/',\r\n    hitechApiUrl: domain + '/api/hitech/',\r\n    domainUrl: domainUrl,\r\n    minBulkCount: 1,\r\n    maxBulkCount: 30,\r\n    validHeaders\r\n}\r\n","var history = {};\r\nconst AuthHelper = {\r\n    Login: (res) => {\r\n        const token = res.headers['x-auth-token'];\r\n        const data = JSON.stringify(res.data);\r\n        console.log('res.data', data);\r\n        localStorage.setItem(\"auth-token\", token);\r\n        localStorage.setItem(\"user-info\", data);\r\n    },\r\n    GetUserInfo: () => {\r\n        let userInfo = localStorage.getItem(\"user-info\");\r\n        if(userInfo) {\r\n            let user = JSON.parse(userInfo);\r\n            console.log('userinfo', user.name);\r\n            return user;\r\n        } else {\r\n            console.log('userinfo not available');\r\n        }\r\n        return null;\r\n    },\r\n    getToken: () => {\r\n        return localStorage.getItem('auth-token');\r\n    },\r\n    isLoggedIn: () => {\r\n        let token = localStorage.getItem('auth-token');\r\n        // console.log('token', token);\r\n        if(token) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    },\r\n    UserRoles: () => {\r\n        return [ \"guest\", \"recruiter\", \"candidate\", \"admin\" ];\r\n    },\r\n    LogOut: () => {\r\n        console.log('remove token');\r\n        localStorage.removeItem('auth-token');\r\n        localStorage.removeItem('user-info');\r\n        // let token = localStorage.getItem('auth-token');\r\n        // console.log('token', token);\r\n    },\r\n    SetHistory: (propsHistory) => {\r\n        console.log('set history', propsHistory);\r\n        history = propsHistory;\r\n    },\r\n    GetHistory: () => {\r\n        console.log('get history');\r\n        return history;\r\n    }\r\n}\r\nexport default AuthHelper;\r\n","import AuthHelper from \"../AuthHelper\";\r\n\r\n// import createHistory from 'history/createBrowserHistory';\r\n\r\n\r\nconst RedirectFromAction = (page) => {\r\n    let hist = AuthHelper.GetHistory();\r\n    console.log('redirect called', typeof(hist));\r\n    if(typeof(hist.push) === 'function'){\r\n        hist.push('/' + page);\r\n    }\r\n}\r\n// let history = createHistory();\r\n// const RedirectFromAction = (page) => {\r\n//     console.log('redirect to 401 called', history);\r\n//     // history.pop();\r\n//     history.push('/unauthorizedUser');\r\n// }\r\nexport default RedirectFromAction;","import axios from 'axios';\r\nimport AuthHelper from './AuthHelper';\r\nimport RedirectFromAction from './actions/RedirectFromAction';\r\nlet History = null;\r\naxios.interceptors.response.use(response => {\r\n        return response;\r\n    }, error => {\r\n    if (error.response.status === 401) {\r\n        console.log('intercept 401', error.response);\r\n        RedirectFromAction('unauthorizedUser');\r\n    }\r\n    else if (error.response.status === 403) {\r\n        console.log('intercept 403', error.response);\r\n        RedirectFromAction('userForbidden');\r\n    }\r\n    else if (error.response.status === 404) {\r\n        console.log('intercept 404', error.response);\r\n        RedirectFromAction('notFound');\r\n    }\r\n    return error;\r\n });\r\n\r\nconst getData = (url) => {\r\n    // History = history;\r\n    let accessToken = AuthHelper.getToken(); //AuthHelper.getToken();\r\n    let options = {\r\n        headers: {\r\n          \"x-access-token\": accessToken\r\n        }\r\n    };\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(url, options)\r\n        .then((res) => {\r\n            console.log('res', res);\r\n            if(res.status === 401) {\r\n                console.log('in resolve not authorized error received');\r\n                return reject(res);\r\n            }\r\n            resolve(res);\r\n        })\r\n        .catch((err) => {\r\n            console.log('err', err);\r\n            reject(err);\r\n        })\r\n    });\r\n    \r\n}\r\n\r\nconst saveData = (url, model) => {\r\n    // History = history;\r\n    let accessToken = AuthHelper.getToken();\r\n    let options = {\r\n        headers: {\r\n          \"x-access-token\": accessToken\r\n        }\r\n    };\r\n    return axios.post(url, model, options);\r\n}\r\n\r\nconst updateData = (url, model) => {\r\n    // History = history;\r\n    let accessToken = AuthHelper.getToken();\r\n    let options = {\r\n        headers: {\r\n          \"x-access-token\": accessToken\r\n        }\r\n    };\r\n    return axios.put(url, model, options);\r\n}\r\n\r\nconst deleteData = (url, model) => {\r\n    // History = history;\r\n    let accessToken = AuthHelper.getToken();\r\n    let options = {\r\n        headers: {\r\n          \"x-access-token\": accessToken\r\n        },\r\n        data: model\r\n    };\r\n    console.log('delete options', options);\r\n    return axios.delete(url, options);\r\n}\r\n\r\nexport default {\r\n    getData,\r\n    saveData,\r\n    updateData,\r\n    deleteData\r\n};","import axios from 'axios';\r\nimport config from '../config';\r\nimport repository from '../repository';\r\nimport { FETCH_SKILLS_BEGIN, FETCH_SKILLS_FAIL, FETCH_SKILLS_SUCCESS } from './SkillActions';\r\nimport AuthHelper from '../AuthHelper';\r\n\r\nexport const ADD_USER_BEGIN = 'ADD_USER_BEGIN';\r\nexport const ADD_USER_SUCCESS = 'ADD_USER_SUCCESS';\r\nexport const ADD_USER_FAIL = 'ADD_USER_FAIL';\r\nexport const USER_SEARCH_BEGIN = 'USER_SEARCH_BEGIN';\r\nexport const USER_SEARCH_SUCCESS = 'USER_SEARCH_SUCCESS';\r\nexport const UPDATE_USER_BEGIN = 'UPDATE_USER_BEGIN';\r\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS';\r\nexport const UPDATE_USER_FAIL = 'UPDATE_USER_FAIL';\r\nexport const SELECT_USER = 'SELECT_USER';\r\nexport const CURRENT_USER_FIELD_CHANGE = 'CURRENT_USER_FIELD_CHANGE';\r\nexport const CURRENT_USER_FIELD_CHANGE_END = 'CURRENT_USER_FIELD_CHANGE_END';\r\nexport const CURRENT_ANSWER_FIELD_CHANGE = 'CURRENT_ANSWER_FIELD_CHANGE';\r\nexport const CURRENT_ANSWER_FIELD_CHANGE_END = 'CURRENT_ANSWER_FIELD_CHANGE_END';\r\nexport const CHOICE_ADDED_TO_USER = 'CHOICE_ADDED_TO_USER';\r\nexport const FETCH_USER_BEGIN = 'FETCH_USER_BEGIN';\r\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS';\r\nexport const FETCH_USER_FAIL = 'FETCH_USER_FAIL';\r\nexport const SET_USER_INFO_LOCAL = 'SET_USER_INFO_LOCAL';\r\nexport const LOGOUT_CURRENT_USER = 'LOGOUT_CURRENT_USER';\r\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS';\r\nexport const DELETE_USER_FAIL = 'DELETE_USER_FAIL';\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\r\nexport const OPEN_SNACKBAR = 'OPEN_SNACKBAR';\r\n\r\n\r\nvar history = {};\r\nexport const SetHistory = (propsHistory) => dispatch => {\r\n    history = propsHistory;\r\n}\r\n\r\nexport const CurrentUserFieldChange = (val, field, model) => dispatch => {\r\n    console.log('USER field change: ' + field);\r\n    console.log(val);\r\n    switch(field)\r\n    {\r\n        case 'emailId':\r\n        {\r\n            model.emailId = val;\r\n            dispatch({\r\n                type: CURRENT_USER_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'role':\r\n        {\r\n            model.role = val;\r\n            dispatch({\r\n                type: CURRENT_USER_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        default:\r\n        {\r\n        }\r\n    }\r\n    dispatch({\r\n        type: CURRENT_USER_FIELD_CHANGE_END\r\n    });\r\n}\r\n\r\nexport const DeleteUser = (userModel) => dispatch => {\r\n    let model ={\r\n        user: userModel\r\n    };\r\n    let url = config.adminApiUrl + 'user';\r\n    console.log('action model', userModel);\r\n    repository.deleteData(url, model)\r\n            .then((res) => {\r\n                console.log('user deleted: ' + res);\r\n                dispatch({\r\n                    type: DELETE_USER_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({\r\n                    type: DELETE_USER_FAIL,\r\n                    payload: err\r\n                });\r\n            });\r\n}\r\n\r\nexport const AddUser = (userModel) => dispatch => {\r\n    let model ={\r\n        user: userModel\r\n    };\r\n    let url = config.adminApiUrl + 'user';\r\n    console.log('action model', userModel);\r\n    repository.saveData(url, model)\r\n            .then((res) => {\r\n                console.log('user added: ' + res);\r\n                dispatch({\r\n                    type: ADD_USER_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({\r\n                    type: ADD_USER_FAIL,\r\n                    payload: err\r\n                });\r\n            });\r\n}\r\n\r\nexport const FetchUsers = () => dispatch => {\r\n    let url = config.adminApiUrl + 'getAllUsers';\r\n    repository.getData(url, history)\r\n        .then((res) => {\r\n            console.log('promise resolved');\r\n            dispatch({\r\n                type: FETCH_USER_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log('promise rejected');\r\n            dispatch({\r\n                type: FETCH_USER_FAIL,\r\n                payload: { errorStatus: '401' }\r\n            });\r\n        });\r\n}\r\n\r\nexport const UpdateUser = (userModel) => dispatch => {\r\n    let url = config.adminApiUrl + 'user';\r\n    let model ={\r\n        user: userModel\r\n    };\r\n    repository.updateData(url, model, history)\r\n        .then((res) => {\r\n            console.log('promise resolved');\r\n            dispatch({\r\n                type: UPDATE_USER_SUCCESS\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log('promise rejected');\r\n            dispatch({\r\n                type: UPDATE_USER_SUCCESS,\r\n                payload: { errorStatus: '401' }\r\n            });\r\n        });\r\n}\r\n\r\nexport const SetUserInfo = (res) => dispatch => {\r\n    AuthHelper.Login(res);\r\n    let userInfo = AuthHelper.GetUserInfo();\r\n    dispatch({\r\n        type: SET_USER_INFO_LOCAL,\r\n        payload: userInfo\r\n    })\r\n}\r\nexport const LogoutCurrentUser = () => dispatch => {\r\n    AuthHelper.LogOut();\r\n    dispatch({\r\n        type: LOGOUT_CURRENT_USER\r\n    })\r\n}\r\n\r\nexport const CloseSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: CLOSE_SNACKBAR\r\n    });\r\n}\r\nexport const OpenSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: OPEN_SNACKBAR\r\n    });\r\n}\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport classNames from 'classnames';\r\nimport { Button, Menu, MenuItem } from '@material-ui/core';\r\nimport { PowerSettingsNew } from '@material-ui/icons';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AuthHelper from '../../AuthHelper';\r\nimport config from '../../config';\r\n\r\nconst Header = (props) => {\r\n    // const classes = useStyles();\r\n    const { classes, openState } = props;\r\n    const logout = () => {\r\n        props.onLogout();\r\n    }\r\n    let userInfo = AuthHelper.GetUserInfo();\r\n    //console.log('header props', userInfo.name);\r\n    return (\r\n        <AppBar\r\n            position=\"fixed\"\r\n            className={classNames(classes.appBar, {\r\n            [classes.appBarShift]: openState,\r\n            })}\r\n        >\r\n            <Toolbar disableGutters={!openState}>\r\n            <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"Open drawer\"\r\n                onClick={() => props.onDrawerOpen()}\r\n                className={classNames(classes.menuButton, {\r\n                [classes.hide]: openState,\r\n                })}\r\n            >\r\n                <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                    <a href={config.domainUrl} style={{color: '#fff'}}>\r\n                        Technical Assessment Admin\r\n                    </a>\r\n            </Typography>\r\n            {userInfo && \r\n            <Typography variant=\"subtitle1\" color=\"inherit\" noWrap style={styles.welcomeMessage}>\r\n                {userInfo.name} ({userInfo.role})\r\n            </Typography>\r\n            }\r\n            {AuthHelper.isLoggedIn() && \r\n                // <Button style={styles.menuButton}\r\n                //     onClick={logout}\r\n                // color=\"inherit\">Logout</Button>\r\n                <IconButton \r\n                    onClick={logout}\r\n                    style={styles.menuButton}\r\n                    edge=\"end\"\r\n                    aria-label=\"Account of current user\"\r\n                    // aria-controls={menuId}\r\n                    aria-haspopup=\"true\"\r\n                    // onClick={handleProfileMenuOpen}\r\n                    color=\"inherit\"\r\n                    >\r\n                    <PowerSettingsNew />\r\n                </IconButton>\r\n            }\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\nexport default Header;\r\nconst styles = {\r\n    menuButton: {\r\n        marginLeft: '20%'\r\n    },\r\n    welcomeMessage: {\r\n        marginLeft: '40%'\r\n    }\r\n}","import React from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport classNames from 'classnames';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n// import MailIcon from '@material-ui/icons/Mail';\r\nimport { Dashboard, Book, Assessment, ViewQuilt, PermIdentity, Polymer, Airplay  } from '@material-ui/icons';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport { Link } from 'react-router-dom'\r\nimport AuthHelper from '../../AuthHelper';\r\n\r\nconst MenuItems = [\r\n    // { routeName: 'login', routeCaption: 'Login', icon: Polymer },\r\n    { routeName: 'dashboard', routeCaption: 'Dashboard', icon: Dashboard, app: 'TeachAssesment' },\r\n    { routeName: 'tests', routeCaption: 'Tests', icon: Assessment, app: 'TeachAssesment' },\r\n    { routeName: 'mcqs', routeCaption: 'Library', icon: Book, app: 'TeachAssesment' },\r\n    { routeName: 'categories', routeCaption: 'Categories', icon: ViewQuilt, app: 'TeachAssesment' },\r\n    { routeName: 'skills', routeCaption: 'Skills', icon: Polymer, app: 'TeachAssesment' },\r\n    // { routeName: 'candidates', routeCaption: 'Invite Candidates', icon: SupervisorAccount },\r\n    { routeName: 'users', routeCaption: 'Users', icon: PermIdentity, app: 'TeachAssesment' },\r\n    { routeName: 'simulator', routeCaption: 'Simulator', icon: Airplay, app: 'TeachAssesment' },\r\n\r\n    /* HiTech Routes */\r\n    { routeName: 'rmaRequests', routeCaption: 'RMA', icon: Book, app: 'Hitech' },\r\n];\r\n\r\nconst getIcon = (menuItem) => {\r\n    let icon = menuItem.icon;\r\n    return (\r\n        React.createElement(icon)\r\n    )\r\n}\r\n\r\nconst SideDrawer = (props) => {\r\n    const { classes, openState, theme } = props;\r\n    // console.log('Menuitems', MenuItems);\r\n    return (\r\n            <Drawer\r\n            variant=\"permanent\"\r\n            className={classNames(classes.drawer, {\r\n            [classes.drawerOpen]: openState,\r\n            [classes.drawerClose]: !openState,\r\n            })}\r\n            classes={{\r\n            paper: classNames({\r\n                [classes.drawerOpen]: openState,\r\n                [classes.drawerClose]: !openState,\r\n            }),\r\n            }}\r\n            open={openState}\r\n            >\r\n            <div className={classes.toolbar}>\r\n            <IconButton onClick={() => props.onDrawerClose()}>\r\n                {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n            </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n            {MenuItems.map((menuItem, index) => (\r\n                <div key={index}>\r\n                    {AuthHelper.isLoggedIn() && menuItem.routeName !== 'login' &&\r\n                    <Link to={\"/\" + menuItem.routeName} key={index}>\r\n                        <ListItem button key={menuItem.routeCaption}>\r\n                            {/* <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon> */}\r\n                            <ListItemIcon title={menuItem.routeCaption}>{getIcon(menuItem)}</ListItemIcon>\r\n                            <ListItemText style={{textDecoration: 'none'}} primary={menuItem.routeCaption} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    }\r\n                    {!AuthHelper.isLoggedIn() && menuItem.routeName === 'login' &&\r\n                    <Link to={\"/\" + menuItem.routeName} key={index}>\r\n                        <ListItem button key={menuItem.routeCaption}>\r\n                            <ListItemIcon title={menuItem.routeCaption}>{getIcon(menuItem)}</ListItemIcon>\r\n                            <ListItemText style={{textDecoration: 'none'}} primary={menuItem.routeCaption} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    }\r\n                    {menuItem.app === 'Hitech' &&\r\n                    <Link to={\"/\" + menuItem.routeName} key={index}>\r\n                        <ListItem button key={menuItem.routeCaption}>\r\n                            <ListItemIcon title={menuItem.routeCaption}>{getIcon(menuItem)}</ListItemIcon>\r\n                            <ListItemText style={{textDecoration: 'none'}} primary={menuItem.routeCaption} />\r\n                        </ListItem>\r\n                    </Link>}\r\n            </div>\r\n            ))}\r\n            </List>\r\n            {/* <Divider />\r\n            <List>\r\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                <Link to=\"/\">\r\n                    <ListItem button key={text}>\r\n                    <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                    <ListItemText primary={text} />\r\n                    </ListItem>\r\n                </Link>\r\n            ))}\r\n            </List> */}\r\n            </Drawer>\r\n                );\r\n}\r\nexport default SideDrawer;","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst LoadingComponent = (props) => {\r\n    return (\r\n        <div>\r\n            <CircularProgress color=\"secondary\" />\r\n        </div>\r\n    );\r\n}\r\nexport default LoadingComponent;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Loading from '../lib/LoadingComponent';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\nconst AddCategoryComponent = (props) => {\r\n    let { model } = props;\r\n    let display = (props && props.editMode) ? 'block' : 'none';\r\n    return (\r\n        <Card style={{padding: \"4%\"}}>\r\n        {!model && <Loading />} \r\n        {model &&    \r\n            <form  noValidate autoComplete=\"off\">\r\n                <CardHeader \r\n                avatar={\r\n                    <Avatar aria-label=\"Recipe\" style={styles.avatar}>\r\n                        {!props.editMode && <AddIcon />}\r\n                        {props.editMode && <EditIcon />}\r\n                    </Avatar>\r\n                    }\r\n                    action={\r\n                        <Button style={{display: display}} onClick={() => props.onAdd()}>Add New</Button>\r\n                    }\r\n                    title={props.editMode ? \r\n                            \"Edit Category\" :\r\n                            \"Add Category\"} \r\n                            >\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                        <TextField\r\n                            id=\"outlined-name\"\r\n                            label=\"Title\"\r\n                            value={model.title}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'title', props.model)}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <br></br>\r\n                    <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                        <TextField\r\n                            id=\"outlined-name\"\r\n                            label=\"Description\"\r\n                            multiline\r\n                            rows=\"4\"\r\n                            value={model.description}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'description', props.model)}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <br></br>\r\n                    <br></br>\r\n                </CardContent>\r\n                <CardActions style={styles.actionButton}>\r\n                    <Button variant=\"contained\" size=\"large\" color=\"primary\" \r\n                                onClick={ () => props.onSubmit(props.model) }>\r\n                        {props.editMode ? 'Update' : 'Submit'}\r\n                    </Button>\r\n                </CardActions>\r\n            </form>}\r\n        </Card>\r\n    );\r\n}\r\nexport default AddCategoryComponent;\r\nconst styles={\r\n    formControl: {\r\n        width: '90%'\r\n    },\r\n    actionButton: {\r\n        marginLeft: '70%'\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst years = [\r\n    0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20\r\n];\r\nconst months = [\r\n    0,1,2,3,4,5,6,7,8,9,10,11\r\n];\r\n\r\nclass SelectCandidateExperience extends Component{\r\n\r\n    // state = {\r\n    //     open: false,\r\n    //     min: '',\r\n    // };\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        open: false,\r\n        years: 0,\r\n        months: 0\r\n      };\r\n    }\r\n\r\n      handleChange = name => event => {\r\n        switch(name)\r\n        {\r\n          case 'years':\r\n          {\r\n            this.setState({\r\n              years: event.target.value\r\n            });\r\n            break;\r\n          }\r\n          case 'months':\r\n          {\r\n            this.setState({\r\n              months: event.target.value\r\n            });\r\n            break;\r\n          }\r\n          default:{}\r\n        }\r\n    };\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n      this.handleClose();\r\n      this.props.onSubmitExperience(this.state.years, this.state.months);\r\n    }\r\n\r\n    render = () => {\r\n      let { isTestAdmin } = this.props; \r\n    return (\r\n        <div>\r\n        <Button variant=\"outlined\" onClick={this.handleClickOpen}>Experience: {this.state.years} - {this.state.months}</Button>\r\n        <Dialog\r\n          disableBackdropClick\r\n          disableEscapeKeyDown\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n        >\r\n          <DialogTitle>Select Experience Level</DialogTitle>\r\n          <DialogContent>\r\n            <form >\r\n                <br></br>\r\n                <br></br>\r\n              <FormControl style={styles.formControl} variant=\"outlined\" >\r\n                <InputLabel htmlFor=\"years-simple\">Years</InputLabel>\r\n                <Select\r\n                  value={this.state.years}\r\n                  onChange={this.handleChange('years')}\r\n                  input={<Input id=\"years-simple\" />}\r\n                >\r\n                {years.map((item, index) => {\r\n                  return <MenuItem key={index} value={item}>{item}</MenuItem>\r\n                })}\r\n                </Select>\r\n              </FormControl>\r\n              {!isTestAdmin && <FormControl style={styles.formControl} variant=\"outlined\" >\r\n                <InputLabel htmlFor=\"months-simple\">Months</InputLabel>\r\n                <Select\r\n                  value={this.state.months}\r\n                  onChange={this.handleChange('months')}\r\n                  input={<Input id=\"months-simple\" />}\r\n                >\r\n                {months.map((item, index) => {\r\n                  return <MenuItem key={index} value={item}>{item}</MenuItem>\r\n                })}\r\n                </Select>\r\n              </FormControl> }\r\n            </form>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleSubmit} color=\"primary\">\r\n              Ok\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    )\r\n    }\r\n}\r\nconst styles = {\r\n    \r\n      formControl: {\r\n        width:\"45%\", \r\n        marginLeft:\"5%\"\r\n      }\r\n    \r\n};\r\nexport default SelectCandidateExperience;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport SelectCandidateExperience from './SelectCandidateExperience';\r\nimport LoadingComponent from '../lib/LoadingComponent';\r\n\r\nconst AddCandidate = (props) => {\r\n        let { model } = props;\r\n\r\n        const onSubmitExperience = (years, months) => {\r\n            props.onFieldChange(years, 'experienceYears', props.model)\r\n            props.onFieldChange(months, 'experienceMonths', props.model)\r\n        }\r\n\r\n        return (\r\n            <Card>\r\n            {!model && <LoadingComponent /> } \r\n            {model &&    \r\n                <form  noValidate autoComplete=\"off\">\r\n                    <CardHeader avatar={\r\n                        <Avatar aria-label=\"Recipe\">\r\n                        +\r\n                        </Avatar>\r\n                    }\r\n                    title=\"Add Candidate\">\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                    <FormControl variant=\"outlined\" style={{width:\"80%\"}}>\r\n                        <TextField\r\n                            id=\"outlined-name\"\r\n                            label=\"Full Name\"\r\n                            className={styles.dense}\r\n                            value={model.fullName}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'fullName', props.model)}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <br></br>\r\n                    <FormControl variant=\"outlined\" style={{width:\"80%\"}}>\r\n                        <TextField\r\n                            id=\"outlined-email\"\r\n                            label=\"Email\"\r\n                            className={styles.dense}\r\n                            value={model.email}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'email', props.model)}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <br></br>\r\n                    <FormControl variant=\"outlined\" style={{width:\"80%\"}}>\r\n                        <TextField\r\n                            id=\"outlined-contactno\"\r\n                            label=\"Contact Number\"\r\n                            className={styles.dense}\r\n                            value={model.contactno}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'contactno', props.model)}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <br></br>\r\n                    <FormControl variant=\"outlined\" style={{width:\"80%\"}}>\r\n                        <SelectCandidateExperience onSubmitExperience={ (years, months) => onSubmitExperience(years, months) } />\r\n                    </FormControl>\r\n                    <br></br>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                    <Button variant=\"contained\" size=\"large\" color=\"primary\"\r\n                                    onClick={ () => props.onSubmit(props.model)}>\r\n                        Submit\r\n                    </Button>\r\n                    </CardActions>\r\n                </form>\r\n            }\r\n            </Card>\r\n        );\r\n}\r\nconst styles = theme => ({\r\n    formControl: {\r\n        width: '70%',\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n});\r\nexport default AddCandidate;","import React, { Component } from 'react';\r\nimport AuthHelper from '../AuthHelper';\r\nimport { connect } from 'react-redux';\r\nimport { SetUserInfo } from '../actions/UserActions';\r\nimport { Card, CardHeader, CardContent, Typography, CardActions, Button, Grid } from '@material-ui/core';\r\n\r\nclass Dashboard extends Component {\r\n    componentDidMount = () => {\r\n        AuthHelper.SetHistory(this.props.history);\r\n        // this.props.SetUserInfo(AuthHelper.GetUserInfo());\r\n    }\r\n    \r\n    \r\n    render = () => {\r\n        return (\r\n            <div>\r\n                <Grid container>\r\n                    <Grid item xs={5} sm={5}>\r\n                        <Card style={styles.card}>\r\n                            <CardHeader title=\"Active Tests\" style={styles.cardHeader}>\r\n                            </CardHeader>\r\n                            <CardContent>\r\n                                <Typography variant=\"subtitle1\">\r\n                                    You have no active tests. Start Creating.\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions style={styles.cardAction}>\r\n                                <Button variant=\"contained\" size=\"small\" color=\"primary\">View All</Button>\r\n                                <a href=\"#\">Click Here</a>\r\n                            </CardActions>\r\n                            \r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={1} sm={1} />\r\n                    <Grid item xs={5} sm={5}>\r\n                        <Card style={styles.card}>\r\n                            <CardHeader title=\"MCQ Library\" style={styles.cardHeader}>\r\n                            </CardHeader>\r\n                            <CardContent>\r\n                                <Typography variant=\"subtitle1\">\r\n                                    You have 10 MCQs in library. Keep adding.\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions style={styles.cardAction}>\r\n                                <Button variant=\"contained\" size=\"small\" color=\"primary\">Start Adding</Button>\r\n                            </CardActions>\r\n                            \r\n                        </Card>\r\n                    </Grid>\r\n                    <br></br><br></br>\r\n                    <Grid item xs={5} sm={5} style={{marginTop: '5%'}}>\r\n                        <Card style={styles.card}>\r\n                            <CardHeader title=\"Candidates\" style={styles.cardHeader}>\r\n                            </CardHeader>\r\n                            <CardContent>\r\n                                <Typography variant=\"subtitle1\">\r\n                                    Your 2 candidates are yet to take test.\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions style={styles.cardAction}>\r\n                                <Button variant=\"contained\" size=\"small\" color=\"primary\">Go to Tests</Button>\r\n                            </CardActions>\r\n                            \r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={1} sm={1} />\r\n                    <Grid item xs={5} sm={5} style={{marginTop: '5%'}}>\r\n                        <Card style={styles.card}>\r\n                            <CardHeader title=\"Skills\" style={styles.cardHeader}>\r\n                            </CardHeader>\r\n                            <CardContent>\r\n                                <Typography variant=\"subtitle1\">\r\n                                    You have defined 25 skill sets for your hiring. Keep it updated.\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions style={styles.cardAction}>\r\n                                <Button variant=\"contained\" size=\"small\" color=\"primary\">View All</Button>\r\n                            </CardActions>\r\n                            \r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state.userReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    SetUserInfo: (userInfo) => dispatch(SetUserInfo(userInfo)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\nconst styles = {\r\n    card: {\r\n        textAlign: 'center'\r\n    },\r\n    cardAction: {\r\n        float: 'right'\r\n    },\r\n    cardHeader: {\r\n        borderBottom: '1px solid #3f51b5',\r\n        // backgroundColor: '#3f51b5',\r\n        color: '#fff'\r\n    }\r\n}","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst SnackbarComponent = (props) => {\r\n    console.log('snack render: ' + props.openSnack);\r\n    let { openSnack } = props;\r\n    return (\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={openSnack}\r\n          autoHideDuration={6000}\r\n          onClose={props.handleClose}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span id=\"message-id\">{props.snackMessage}</span>}\r\n          action={[\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"Close\"\r\n              color=\"inherit\"\r\n              onClick={props.handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>,\r\n          ]}\r\n        >\r\n        <SnackbarContent\r\n            style={styles.root}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\">\r\n                {/* <Icon /> */}\r\n                {props.snackMessage}\r\n                </span>\r\n            }\r\n            action={[\r\n                <IconButton\r\n                key=\"close\"\r\n                aria-label=\"Close\"\r\n                color=\"inherit\"\r\n                // className={classes.close}\r\n                // onClick={onClose}\r\n                >\r\n                <CloseIcon />\r\n                </IconButton>,\r\n            ]}\r\n            // {...other}\r\n            />\r\n        </Snackbar>\r\n    );\r\n}\r\nexport default SnackbarComponent;\r\nconst styles = {\r\n    root: {\r\n        backgroundColor: '#394'\r\n    }\r\n}","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Card, Grid } from '@material-ui/core';\r\nimport { MenuItem, OutlinedInput, Select, InputLabel, IconButton } from '@material-ui/core';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LoadingComponent from '../../components/lib/LoadingComponent';\r\nimport AuthHelper from '../../AuthHelper';\r\n\r\nconst EditUser = (props) => {\r\n        let { model } = props;\r\n\r\n        // const onSubmitExperience = (years, months) => {\r\n        //     props.onFieldChange(years, 'experienceYears', props.model)\r\n        //     props.onFieldChange(months, 'experienceMonths', props.model)\r\n        // }\r\n\r\n        return (\r\n            <div>\r\n            {!model && <LoadingComponent /> } \r\n            {model &&    \r\n                <form  noValidate autoComplete=\"off\">\r\n                    {/* <CardHeader avatar={\r\n                        <Avatar aria-label=\"Recipe\">\r\n                        +\r\n                        </Avatar>\r\n                    }\r\n                    title=\"Edit User\">\r\n                    </CardHeader> */}\r\n                    {/* <CardContent> */}\r\n                    <Grid container spacing={0}>\r\n                            <Grid item xs={6} sm={6}>\r\n                                <FormControl variant=\"standard\">\r\n                                    {/* <InputLabel htmlFor=\"outlined-role-simple\">\r\n                                        Role\r\n                                    </InputLabel> */}\r\n                                    <Select\r\n                                        onChange={(e) => props.onFieldChange(e.target.value, 'role', model)}\r\n                                        value={model.role}\r\n                                        >\r\n                                        <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                        </MenuItem>\r\n                                        {AuthHelper.UserRoles() && AuthHelper.UserRoles().length > 0 &&\r\n                                            AuthHelper.UserRoles().map((item, index) => {\r\n                                            return (\r\n                                                <MenuItem key={index} value={item}>{item}</MenuItem>\r\n                                            )\r\n                                        })}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6} sm={6}>\r\n                                <Button variant=\"contained\" size=\"small\" color=\"primary\" \r\n                                        onClick={ () => props.onUpdateUser(props.model)}>\r\n                                    Update\r\n                                </Button>\r\n                            </Grid>\r\n                    </Grid>\r\n                    \r\n                    {/* <br></br>\r\n                    <FormControl variant=\"outlined\" style={{width:\"80%\"}}>\r\n                        <TextField\r\n                            id=\"outlined-email\"\r\n                            label=\"Email\"\r\n                            className={styles.dense}\r\n                            value={model.emailId}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'email', props.model)}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <br></br> */}\r\n                    {/* </CardContent> */}\r\n                    {/* <CardActions>\r\n                    <Button variant=\"contained\" size=\"small\" color=\"primary\" style={{marginLeft: '70%'}}\r\n                                    onClick={ () => props.onUpdateUser(props.model)}>\r\n                        Update\r\n                    </Button>\r\n                    </CardActions> */}\r\n                </form>\r\n            }\r\n            </div>\r\n        );\r\n}\r\nconst styles = theme => ({\r\n    formControl: {\r\n        width: '70%',\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n});\r\n// const UserRoles = [ \"guest\", \"recruiter\", \"candidate\", \"admin\" ];\r\nexport default EditUser;","import React, { Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Delete } from '@material-ui/icons';\r\nimport LoadingComponent from '../../components/lib/LoadingComponent';\r\nimport { Typography, IconButton } from '@material-ui/core';\r\nimport EditUser from './EditUser';\r\n\r\nconst UsersList = (props) => {\r\n    let { users } = props;\r\n    return (\r\n        <div>\r\n        {!users && <LoadingComponent /> }\r\n        {users && users.length === 0 && <Typography align=\"center\" variant=\"subtitle1\">No Tests Found </Typography> }\r\n        {users && users.length > 0 && \r\n        <Table>\r\n            <TableHead>\r\n            <TableRow>\r\n                <CustomTableCell>Email</CustomTableCell>\r\n                <CustomTableCell align=\"left\">Display Name</CustomTableCell>\r\n                <CustomTableCell align=\"left\">Role</CustomTableCell>\r\n                <CustomTableCell>Edit Role</CustomTableCell>\r\n                <CustomTableCell></CustomTableCell>\r\n            </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n            {users.map((user, index) => (\r\n                <Fragment key={index}>\r\n                <TableRow >\r\n                    <CustomTableCell align=\"left\"><Typography variant=\"subtitle2\" >{user.emailId}</Typography></CustomTableCell>\r\n                    <CustomTableCell align=\"left\"><Typography variant=\"subtitle2\" >{user.name}</Typography></CustomTableCell>\r\n                    <CustomTableCell align=\"left\">{user.role.toUpperCase()}</CustomTableCell>\r\n                    {/* <CustomTableCell align=\"right\">Edit</CustomTableCell> */}\r\n                    <CustomTableCell align=\"left\">\r\n                        <EditUser \r\n                            model={user} \r\n                            onFieldChange={ (val, field, model) => props.onFieldChange(val, field, model) } \r\n                            onUpdateUser={ (model) => props.onUpdateUser(model) }\r\n                        />\r\n                    </CustomTableCell>\r\n                    <CustomTableCell>\r\n                        <IconButton \r\n                            onClick={() => props.onDeleteUser(user)}\r\n                            edge=\"end\"\r\n                            color=\"inherit\"\r\n                            >\r\n                            <Delete />\r\n                        </IconButton>\r\n                    </CustomTableCell>\r\n                </TableRow>\r\n                </Fragment>\r\n            ))}\r\n            </TableBody>\r\n        </Table>\r\n        }\r\n        </div>\r\n    );\r\n}\r\nconst CustomTableCell = withStyles(theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nexport default UsersList;","import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader, DialogContent, Dialog, DialogTitle, DialogActions, Divider } from '@material-ui/core';\r\nimport { MenuItem, OutlinedInput, Select, InputLabel, IconButton } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LoadingComponent from '../../components/lib/LoadingComponent';\r\nimport { Close  } from '@material-ui/icons';\r\nimport AuthHelper from '../../AuthHelper';\r\n\r\nclass AddUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n        \r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n      this.props.onSubmit(this.props.model);\r\n      this.handleClose();\r\n    }\r\n    \r\n    render = () => {\r\n        let { model } = this.props;\r\n        let UserRoles = AuthHelper.UserRoles();\r\n        console.log('current_user', model);\r\n        return (\r\n            <div>\r\n            {!model && <LoadingComponent /> } \r\n            {model && \r\n            <Card>   \r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>Add User</Button>\r\n                <Dialog\r\n                fullWidth={true}\r\n                open={this.state.open}\r\n                onClose={this.handleClose}\r\n                >\r\n                <DialogTitle onClose={this.handleClose}>Create New User</DialogTitle>\r\n                <Divider />\r\n                <DialogContent style={{padding: '4%'}}>\r\n                    <form  noValidate autoComplete=\"off\">\r\n                                <FormControl variant=\"standard\" style={styles.formControl}>\r\n                                    <Select\r\n                                        onChange={(e) => this.props.onFieldChange(e.target.value, 'role', model)}\r\n                                        value={model.role}\r\n                                        >\r\n                                        <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                        </MenuItem>\r\n                                        {UserRoles && UserRoles.length > 0 &&\r\n                                            UserRoles.map((item, index) => {\r\n                                            return (\r\n                                                <MenuItem key={index} value={item}>{item}</MenuItem>\r\n                                            )\r\n                                        })}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                <TextField\r\n                                    id=\"outlined-email\"\r\n                                    label=\"Email Id\"\r\n                                    className={styles.dense}\r\n                                    value={model.emailId}\r\n                                    onChange={(e) => this.props.onFieldChange(e.target.value, 'emailId', model)}\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </FormControl>\r\n                    </form>\r\n                    </DialogContent>\r\n                    <Divider />\r\n                    <DialogActions>\r\n                        <Button variant=\"contained\" size=\"large\" color=\"primary\"\r\n                                        onClick={ () => this.handleSubmit(this.props.model)}>\r\n                            Create User\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Card>}\r\n        \r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst styles = {\r\n    formControl: {\r\n        width: '80%',\r\n        marginBottom: '4%'\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n};\r\nexport default AddUser;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {    FetchUsers, AddUser, CurrentUserFieldChange,\r\n            UpdateUser, DeleteUser, CloseSnackbar,\r\n            OpenSnackbar } from '../../actions/UserActions';            \r\nimport Grid from '@material-ui/core/Grid';\r\nimport SnackbarComponent from '../../components/lib/SnackbarComponent';\r\nimport { Button, Card, CardHeader } from '@material-ui/core';\r\nimport LoadingComponent from '../../components/lib/LoadingComponent';\r\nimport UsersList from './UsersList';\r\nimport AddUserComponent from './AddUser';\r\n\r\nclass UserContainer extends React.Component {\r\n    \r\n    componentDidMount = () => {\r\n        this.reload();\r\n    }\r\n\r\n    componentWillReceiveProps = (newprops, oldprops) => {\r\n        if(newprops.success_message !== '' && newprops.success_message !== undefined) {\r\n            // this.props.OpenSnackbar();\r\n        }\r\n    }\r\n\r\n    reload = () => {\r\n        this.props.FetchUsers();\r\n    }\r\n\r\n    onAddUser = (model) => {\r\n        this.props.AddUser(model)\r\n    }\r\n\r\n    render = () => {\r\n        let { current_user, users } = this.props;\r\n        console.log('User container: render');\r\n        console.log(current_user);\r\n\r\n        return(\r\n            <Grid container spacing={16}>\r\n                <Grid item xs={12} sm={12}>\r\n                {!current_user && <LoadingComponent />}\r\n                {current_user &&\r\n                <Card>\r\n                    <CardHeader action={\r\n                    <AddUserComponent \r\n                        onSubmit={ (model) => this.onAddUser(model) }\r\n                        model={this.props.current_user}\r\n                        onFieldChange={ (val, field, model) => this.props.CurrentUserFieldChange(val, field, model) } \r\n                        />\r\n                    }\r\n                    title=\"Users\"\r\n                    />\r\n                    <UsersList \r\n                        users={users} \r\n                        onFieldChange={ (val, field, model) => this.props.CurrentUserFieldChange(val, field, model) } \r\n                        onUpdateUser={ (model) => this.props.UpdateUser(model) }\r\n                        onDeleteUser={ (model) => this.props.DeleteUser(model) }\r\n                    />\r\n                </Card>\r\n                }\r\n                <SnackbarComponent \r\n                    openSnack={this.props.snack_open} handleClose={() => this.props.CloseSnackbar()} \r\n                    snackMessage={\"Data Saved Successfully!\"} \r\n                    /> \r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.userReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    // AddTest: (model, editMode) => dispatch(AddTest(model, editMode)),\r\n    UpdateUser: (model) => dispatch(UpdateUser(model)),\r\n    DeleteUser: (model) => dispatch(DeleteUser(model)),\r\n    AddUser: (userModel) => dispatch(AddUser(userModel)),\r\n    FetchUsers: () => dispatch(FetchUsers()),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    CurrentUserFieldChange: (val, field, model) => dispatch(CurrentUserFieldChange(val, field, model))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserContainer);","import React, { Component } from 'react';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport config from '../../config';\r\nimport axios from 'axios';\r\nimport AuthHelper from '../../AuthHelper';\r\nimport { SetUserInfo } from '../../actions/UserActions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass LoginComponent extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            errorMessage: ''\r\n        };\r\n    }\r\n    googleResponse = (response) => {\r\n        console.log('response', response);\r\n        // const tokenBlob = new Blob([JSON.stringify({access_token: response.accessToken}, null, 2)], {type : 'application/json'});\r\n        // const options = {\r\n        //     method: 'POST',\r\n        //     body: tokenBlob,\r\n        //     mode: 'cors',\r\n        //     cache: 'default'\r\n        // };\r\n        let url = config.adminApiUrl + 'auth/google';\r\n        axios.get(url, {\r\n          headers: {\r\n            access_token: response.accessToken\r\n          }\r\n        }).then((res) => {\r\n            console.log('res',res);\r\n            const token = res.headers['x-auth-token'];\r\n            if(token) {\r\n                this.props.SetUserInfo(res);\r\n                this.props.history.push({\r\n                    pathname: '/dashboard'\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    errorMessage: 'Wrong Credentials. Please try again.'\r\n                });    \r\n            }\r\n        }).catch((err) => {\r\n            this.props.history.push({\r\n                pathname: '/userForbidden'\r\n            });\r\n            // this.setState({\r\n            //     errorMessage: 'Something went wrong. Please try again later.'\r\n            // })\r\n        });\r\n    }\r\n    \r\n    render = () => {\r\n        return (\r\n            <div style={styles.container}>\r\n                {this.state.errorMessage && <div>{this.state.errorMessage}</div>}\r\n                <GoogleLogin\r\n                            clientId=\"350931387343-l9s3gs4fnmbj4rk4r4nfvh5siega0s5g.apps.googleusercontent.com\"\r\n                            buttonText=\"Login\"\r\n                            onSuccess={this.googleResponse}\r\n                            onFailure={this.googleResponse}\r\n                            cookiePolicy={'single_host_origin'}\r\n                        />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst styles = {\r\n    container: {\r\n        top: '20%',\r\n        left: '25%'\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.userReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    SetUserInfo: (userInfo) => dispatch(SetUserInfo(userInfo)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginComponent);\r\n","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport LoginComponent from '../../components/lib/LoginComponent';\r\n\r\nconst User401 = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h2\">\r\n                User Not Authorized\r\n            </Typography>\r\n            <div>\r\n                <LoginComponent />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default User401;","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport LoginComponent from '../../components/lib/LoginComponent';\r\n\r\nconst UserForbidden = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h6\" >\r\n                User Forbidden or User Not Found. \r\n            </Typography>\r\n            <Typography variant=\"body1\" >\r\n                Please check with Admin if your emailId is added to user list. \r\n            </Typography>\r\n            <div>\r\n                <LoginComponent />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default UserForbidden;","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst ResourceNotFound = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h6\" >\r\n                Not Found. \r\n            </Typography>\r\n        </div>\r\n    )\r\n}\r\nexport default ResourceNotFound;","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { CardHeader, CardContent, IconButton } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListIcon from '@material-ui/icons/ViewHeadline';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Collapse from '@material-ui/core/Collapse';\r\n\r\nconst CategoryList = (props) => {\r\n        console.log(props);\r\n        return (\r\n            <Card style={{padding: \"4%\"}}>\r\n                <CardHeader \r\n                    avatar={\r\n                        <Avatar aria-label=\"Recipe\" style={styles.avatar}>\r\n                            <ListIcon />\r\n                        </Avatar>\r\n                    }    \r\n                    action={\r\n                        // !props.searchEnabled && \r\n                        <IconButton onClick={() => props.onSearchEnable()}>\r\n                            {!props.searchEnabled && <SearchIcon />}\r\n                            {props.searchEnabled && <CloseIcon />}\r\n                        </IconButton>\r\n                    }            \r\n                    title={`Categories ${props.categories ? \"(\"+props.categories.length+\")\" : \"\" }`}>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    {\r\n                        <Collapse in={props.searchEnabled}>\r\n                        <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                            <TextField\r\n                                id=\"outlined-name\"\r\n                                label=\"Search\"\r\n                                placeholder=\"Enter search text here\"\r\n                                value={props.searchTerm}\r\n                                onChange={(e) => props.onSearchCategory(e.target.value)}\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormControl>\r\n                        </Collapse>\r\n                    }\r\n                    <List dense={true}>\r\n                        {props.categories && props.categories.length > 0\r\n                        && props.categories.map((item, index) => {\r\n                            return(\r\n                            <ListItem key={index}\r\n                                divider={true}\r\n                                button={true} onClick={ () => props.onCategorySelect(item) }\r\n                            >\r\n                            <ListItemText\r\n                                primary={item.title}\r\n                                secondary={item.description}\r\n                                />\r\n                            </ListItem>)\r\n                        })}\r\n                        \r\n                    </List>\r\n                {(!props.categories || props.categories.length === 0) &&\r\n                <Typography variant=\"h6\" align=\"center\">\r\n                    There are currently no categories added\r\n                </Typography>}\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n}\r\n\r\nexport default CategoryList;\r\n\r\nconst styles = {\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    },\r\n    formControl: {\r\n        width: '70%'\r\n    }\r\n}","import config from '../config';\r\nimport repository from '../repository';\r\n\r\nexport const ADD_CATEGORY_BEGIN = 'ADD_CATEGORY_BEGIN';\r\nexport const ADD_CATEGORY_SUCCESS = 'ADD_CATEGORY_SUCCESS';\r\nexport const ADD_CATEGORY_FAIL = 'ADD_CATEGORY_FAIL';\r\nexport const CATEGORY_SEARCH_BEGIN = 'CATEGORY_SEARCH_BEGIN';\r\nexport const CATEGORY_SEARCH_SUCCESS = 'CATEGORY_SEARCH_SUCCESS';\r\nexport const UPDATE_CATEGORY_BEGIN = 'UPDATE_CATEGORY_BEGIN';\r\nexport const UPDATE_CATEGORY_SUCCESS = 'UPDATE_CATEGORY_SUCCESS';\r\nexport const UPDATE_CATEGORY_FAIL = 'UPDATE_CATEGORY_FAIL';\r\nexport const SELECT_CATEGORY = 'SELECT_CATEGORY';\r\nexport const CURRENT_CATEGORY_FIELD_CHANGE = 'CURRENT_CATEGORY_FIELD_CHANGE';\r\nexport const CURRENT_CATEGORY_FIELD_CHANGE_END = 'CURRENT_CATEGORY_FIELD_CHANGE_END';\r\nexport const FETCH_CATEGORIES_BEGIN = 'FETCH_CATEGORIES_BEGIN';\r\nexport const FETCH_CATEGORIES_SUCCESS = 'FETCH_CATEGORIES_SUCCESS';\r\nexport const FETCH_CATEGORIES_FAIL = 'FETCH_CATEGORIES_FAIL';\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\r\nexport const OPEN_SNACKBAR = 'OPEN_SNACKBAR';\r\n\r\nexport const CurrentCategoryFieldChange = (val, field, model) => dispatch => {\r\n    switch(field)\r\n    {\r\n        case 'title':\r\n        {\r\n            model.title = val;\r\n            dispatch({\r\n                type: CURRENT_CATEGORY_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'description':\r\n        {\r\n            model.description = val;\r\n            dispatch({\r\n                type: CURRENT_CATEGORY_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        default:\r\n        {\r\n            break;\r\n        }\r\n    }\r\n    dispatch({\r\n        type: CURRENT_CATEGORY_FIELD_CHANGE_END\r\n    });\r\n}\r\n\r\nexport const AddCategory = (categoryModel, editMode) => dispatch => {\r\n    dispatch({\r\n        type: ADD_CATEGORY_BEGIN\r\n    });\r\n    let url = config.adminApiUrl + 'category';\r\n    console.log('action model');\r\n    console.log(categoryModel);\r\n    if(!editMode) {\r\n        repository.saveData(url, categoryModel)\r\n            .then((res) => {\r\n                console.log('category saved: ' + res);\r\n                dispatch({\r\n                    type: ADD_CATEGORY_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({\r\n                    type: ADD_CATEGORY_FAIL,\r\n                    payload: err\r\n                });\r\n            });\r\n    }\r\n    else {\r\n        dispatch(UpdateCategory(categoryModel));\r\n        // this.UpdateCategory(categoryModel);\r\n    }\r\n}\r\n\r\nexport const BeginSearch = () => dispatch => {\r\n    dispatch({\r\n        type: CATEGORY_SEARCH_BEGIN\r\n    });\r\n}\r\n\r\nexport const SearchCategory = (searchTerm, categoryList) => dispatch => {\r\n    console.log(`search term: ${searchTerm}, list length: ${categoryList ? categoryList.length : 0}`);\r\n    if(categoryList && categoryList.length > 0) {\r\n        let filteredCategories = categoryList.filter((item) => {\r\n            return (\r\n                    item.title &&\r\n                    item.title.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1\r\n                    ) ||\r\n                    (\r\n                        item.description &&\r\n                        item.description.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1);\r\n        });\r\n        if(filteredCategories && filteredCategories.length > 0) {\r\n            dispatch({\r\n                type: CATEGORY_SEARCH_SUCCESS,\r\n                payload: {\r\n                    filteredCategories,\r\n                    searchTerm\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            dispatch({\r\n                type: CATEGORY_SEARCH_SUCCESS,\r\n                payload: {\r\n                    filteredCategories: [],\r\n                    searchTerm\r\n                }\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        dispatch({\r\n            type: CATEGORY_SEARCH_SUCCESS,\r\n            payload: {\r\n                filteredCategories: [],\r\n                searchTerm\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const SelectCategory = (categoryModel) => dispatch => {\r\n    dispatch({\r\n        type: SELECT_CATEGORY,\r\n        payload: categoryModel\r\n    })\r\n}\r\n\r\nexport const UpdateCategory = (categoryModel) => dispatch => {\r\n    dispatch({\r\n        type: UPDATE_CATEGORY_BEGIN\r\n    });\r\n    let url = config.adminApiUrl + 'category';\r\n    repository.updateData(url, categoryModel)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: UPDATE_CATEGORY_SUCCESS\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: UPDATE_CATEGORY_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const FetchCategories = () => dispatch => {\r\n    dispatch({\r\n        type: FETCH_CATEGORIES_BEGIN\r\n    });\r\n    let url = config.adminApiUrl + 'getAllCategories';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            console.log('categories fetched');\r\n            dispatch({\r\n                type: FETCH_CATEGORIES_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_CATEGORIES_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const CloseSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: CLOSE_SNACKBAR\r\n    });\r\n}\r\nexport const OpenSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: OPEN_SNACKBAR\r\n    });\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AddCategoryComponent from '../components/Categories/AddCategory';\r\nimport CategoryList from '../components/Categories/CategoryList';\r\nimport {    AddCategory, FetchCategories, UpdateCategory, \r\n            CloseSnackbar, CurrentCategoryFieldChange,\r\n            OpenSnackbar, SelectCategory,\r\n            BeginSearch, SearchCategory } from '../actions/CategoryActions';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SnackbarComponent from '../components/lib/SnackbarComponent';\r\n\r\nclass CategoryContainer extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        console.log('did mount');\r\n        this.reload();\r\n    }\r\n\r\n    componentWillUpdate = () => {\r\n     console.log('container updated');\r\n        if(this.props.success_message !== '') {\r\n            this.props.FetchCategories();\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (newprops, oldprops) => {\r\n        console.log('receiving props');\r\n        console.log(newprops);\r\n        if(newprops.success_message !== '') {\r\n            this.props.FetchCategories();\r\n            this.props.OpenSnackbar();\r\n        }\r\n    }\r\n\r\n    reload = () => {\r\n        this.props.FetchCategories();\r\n    }\r\n\r\n    // shouldComponentUpdate = () => {\r\n    //     console.log('should');\r\n    //     return true;\r\n    // }\r\n\r\n    render = () => {\r\n        console.log('container render');\r\n        console.log(this.props);\r\n        let categories = [];\r\n        if(this.props.search_enabled) {\r\n            categories = this.props.filteredCategories;\r\n        }\r\n        else {\r\n            categories = this.props.categoryList;\r\n        }\r\n        return(\r\n            <Grid container spacing={16}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AddCategoryComponent \r\n                        onSubmit={ (model) => this.props.AddCategory(model, this.props.editMode) }\r\n                        model={this.props.current_category}\r\n                        editMode={this.props.editMode}\r\n                        onAdd={() => this.reload()}\r\n                        onFieldChange={ (val, field, model) => this.props.CurrentCategoryFieldChange(val, field, model) } />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <CategoryList categories={categories} \r\n                        onCategorySelect={ (item) => this.props.SelectCategory(item) } \r\n                        onSearchEnable={ () => this.props.BeginSearch() } \r\n                        searchEnabled={this.props.search_enabled}\r\n                        searchTerm={this.props.search_term}\r\n                        onSearchCategory={ (searchTerm) => this.props.SearchCategory(searchTerm, this.props.categoryList) }/>\r\n                </Grid>\r\n                <SnackbarComponent \r\n                    openSnack={this.props.snack_open} handleClose={() => this.props.CloseSnackbar()} \r\n                    snackMessage={\"Data Saved Successfully!\"} \r\n                                    // \"Category Updated Successfully\" :    \r\n                                    // \"Category Added Successfully!\"}\r\n                    /> \r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.categoryReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    AddCategory: (model, editMode) => dispatch(AddCategory(model, editMode)),\r\n    UpdateCategory: (model) => dispatch(UpdateCategory(model)),\r\n    SelectCategory: (model) => dispatch(SelectCategory(model)),\r\n    FetchCategories: () => dispatch(FetchCategories()),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    BeginSearch: () => dispatch(BeginSearch()),\r\n    SearchCategory: (searchTerm, categoryList) => dispatch(SearchCategory(searchTerm, categoryList)),\r\n    CurrentCategoryFieldChange: (val, field, model) => dispatch(CurrentCategoryFieldChange(val, field, model))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryContainer);","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader, Typography } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Loading from '../lib/LoadingComponent';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst AddSkillComponent = (props) => {\r\n    let { model } = props;\r\n    let display = (props && props.editMode) ? 'block' : 'none';\r\n    return (\r\n        <Card style={{padding: \"4%\"}}>\r\n        {!model && <Loading />} \r\n        {model &&    \r\n            <form  noValidate autoComplete=\"off\">\r\n                <CardHeader \r\n                avatar={\r\n                    <Avatar aria-label=\"Recipe\" style={styles.avatar}>\r\n                       <AddIcon />\r\n                    </Avatar>\r\n                    }\r\n                    title=\"Add Skill\">\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                        <TextField\r\n                            id=\"outlined-name\"\r\n                            label=\"Skill\"\r\n                            value={model.skill}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'skill', props.model)}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <br></br>\r\n                </CardContent>\r\n                <CardActions style={styles.actionButton}>\r\n                    <Button variant=\"contained\" size=\"large\" color=\"primary\" \r\n                                onClick={ () => props.onSubmit(props.model) }>\r\n                        Submit\r\n                    </Button>\r\n                </CardActions>\r\n            </form>}\r\n        </Card>\r\n    );\r\n}\r\nexport default AddSkillComponent;\r\nconst styles={\r\n    formControl: {\r\n        width: '90%'\r\n    },\r\n    actionButton: {\r\n        marginLeft: '70%'\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n}","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport List from '@material-ui/core/List';\r\nimport { CardHeader, CardContent, IconButton } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListIcon from '@material-ui/icons/ViewHeadline';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nconst SkillList = (props) => {\r\n        console.log(props);\r\n        return (\r\n            <Card style={{padding: \"4%\"}}>\r\n                <CardHeader \r\n                    avatar={\r\n                        <Avatar aria-label=\"Recipe\" style={styles.avatar}>\r\n                            <ListIcon />\r\n                        </Avatar>\r\n                    }    \r\n                    action={\r\n                        <IconButton onClick={() => props.onSearchEnable()}>\r\n                            {!props.searchEnabled && <SearchIcon />}\r\n                            {props.searchEnabled && <CloseIcon />}\r\n                        </IconButton>\r\n                    }            \r\n                    title={`Skills ${props.skills ? \"(\"+props.skills.length+\")\" : \"\" }`}>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    {\r\n                        <Collapse in={props.searchEnabled}>\r\n                        <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                            <TextField\r\n                                id=\"outlined-name\"\r\n                                label=\"Search\"\r\n                                placeholder=\"Enter search text here\"\r\n                                value={props.searchTerm}\r\n                                onChange={(e) => props.onSearchSkill(e.target.value)}\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormControl>\r\n                        </Collapse>\r\n                    }\r\n                    <List dense={true}>\r\n                        {props.skills && props.skills.length > 0\r\n                        && props.skills.map((item, index) => {\r\n                            return(\r\n                            <Chip label={item.skill} key={index}\r\n                                style={styles.chip}\r\n                                avatar={\r\n                                    <Avatar>\r\n                                        {item.skill[0]}\r\n                                    </Avatar>   \r\n                                }/>\r\n                            )\r\n                        })}\r\n                        \r\n                    </List>\r\n                {(!props.skills || props.skills.length === 0) &&\r\n                <Typography variant=\"h6\" align=\"center\">\r\n                    There are currently no skills added\r\n                </Typography>}\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n}\r\n\r\nexport default SkillList;\r\n\r\nconst styles = {\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    },\r\n    formControl: {\r\n        width: '70%'\r\n    },\r\n    chip: {\r\n        margin: 10\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AddSkillComponent from '../components/Skills/AddSkill';\r\nimport SkillList from '../components/Skills/SkillList';\r\nimport {    AddSkill, FetchSkills,\r\n            CloseSnackbar, CurrentSkillFieldChange,\r\n            OpenSnackbar,\r\n            BeginSearch, SearchSkill } from '../actions/SkillActions';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SnackbarComponent from '../components/lib/SnackbarComponent';\r\n\r\nclass SkillContainer extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        console.log('did mount');\r\n        this.reload();\r\n    }\r\n\r\n    componentWillUpdate = () => {\r\n     console.log('container updated');\r\n        if(this.props.success_message !== '') {\r\n            this.props.FetchSkills();\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (newprops, oldprops) => {\r\n        console.log('receiving props');\r\n        console.log(newprops);\r\n        if(newprops.success_message !== '') {\r\n            this.props.FetchSkills();\r\n            this.props.OpenSnackbar();\r\n        }\r\n    }\r\n\r\n    reload = () => {\r\n        this.props.FetchSkills();\r\n    }\r\n\r\n    render = () => {\r\n        console.log('container render');\r\n        console.log(this.props);\r\n        let skills = [];\r\n        if(this.props.search_enabled) {\r\n            skills = this.props.filteredSkills;\r\n        }\r\n        else {\r\n            skills = this.props.skillList;\r\n        }\r\n        return(\r\n            <Grid container spacing={16}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AddSkillComponent \r\n                        onSubmit={ (model) => this.props.AddSkill(model, this.props.editMode) }\r\n                        model={this.props.current_skill}\r\n                        onAdd={() => this.reload()}\r\n                        onFieldChange={ (val, field, model) => this.props.CurrentSkillFieldChange(val, field, model) } />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <SkillList skills={skills} \r\n                        onSearchEnable={ () => this.props.BeginSearch() } \r\n                        searchEnabled={this.props.search_enabled}\r\n                        searchTerm={this.props.search_term}\r\n                        onSearchSkill={ (searchTerm) => this.props.SearchSkill(searchTerm, this.props.skillList) }/>\r\n                </Grid>\r\n                <SnackbarComponent \r\n                    openSnack={this.props.snack_open} handleClose={() => this.props.CloseSnackbar()} \r\n                    snackMessage={\"Data Saved Successfully!\"} \r\n                    /> \r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.skillReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    AddSkill: (model, editMode) => dispatch(AddSkill(model, editMode)),\r\n    FetchSkills: () => dispatch(FetchSkills()),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    BeginSearch: () => dispatch(BeginSearch()),\r\n    SearchSkill: (searchTerm, categoryList) => dispatch(SearchSkill(searchTerm, categoryList)),\r\n    CurrentSkillFieldChange: (val, field, model) => dispatch(CurrentSkillFieldChange(val, field, model))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SkillContainer);","import axios from 'axios';\r\nimport config from '../config';\r\nimport repository from '../repository';\r\n\r\nexport const ADD_SKILL_BEGIN = 'ADD_SKILL_BEGIN';\r\nexport const ADD_SKILL_SUCCESS = 'ADD_SKILL_SUCCESS';\r\nexport const ADD_SKILL_FAIL = 'ADD_SKILL_FAIL';\r\nexport const SKILL_SEARCH_BEGIN = 'SKILL_SEARCH_BEGIN';\r\nexport const SKILL_SEARCH_SUCCESS = 'SKILL_SEARCH_SUCCESS';\r\nexport const CURRENT_SKILL_FIELD_CHANGE = 'CURRENT_SKILL_FIELD_CHANGE';\r\nexport const CURRENT_SKILL_FIELD_CHANGE_END = 'CURRENT_SKILL_FIELD_CHANGE_END';\r\nexport const FETCH_SKILLS_BEGIN = 'FETCH_SKILLS_BEGIN';\r\nexport const FETCH_SKILLS_SUCCESS = 'FETCH_SKILLS_SUCCESS';\r\nexport const FETCH_SKILLS_FAIL = 'FETCH_SKILLS_FAIL';\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\r\nexport const OPEN_SNACKBAR = 'OPEN_SNACKBAR';\r\n\r\nexport const CurrentSkillFieldChange = (val, field, model) => dispatch => {\r\n    switch(field)\r\n    {\r\n        case 'skill':\r\n        {\r\n            model.skill = val;\r\n            dispatch({\r\n                type: CURRENT_SKILL_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n    }\r\n    dispatch({\r\n        type: CURRENT_SKILL_FIELD_CHANGE_END\r\n    });\r\n}\r\n\r\nexport const AddSkill = (skillModel) => dispatch => {\r\n    dispatch({\r\n        type: ADD_SKILL_BEGIN\r\n    });\r\n    let url = config.adminApiUrl + 'skill';\r\n    console.log('action model');\r\n    console.log(skillModel);\r\n    repository.saveData(url, skillModel)\r\n        .then((res) => {\r\n            console.log('skill saved: ' + res);\r\n            dispatch({\r\n                type: ADD_SKILL_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: ADD_SKILL_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n\r\n}\r\n\r\nexport const BeginSearch = () => dispatch => {\r\n    dispatch({\r\n        type: SKILL_SEARCH_BEGIN\r\n    });\r\n}\r\n\r\nexport const SearchSkill = (searchTerm, skillList) => dispatch => {\r\n    console.log(`search term: ${searchTerm}, list length: ${skillList ? skillList.length : 0}`);\r\n    if(skillList && skillList.length > 0) {\r\n        let filteredSkills = skillList.filter((item) => {\r\n            return (\r\n                    item.skill &&\r\n                    item.skill.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1\r\n                    );\r\n        });\r\n        if(filteredSkills && filteredSkills.length > 0) {\r\n            dispatch({\r\n                type: SKILL_SEARCH_SUCCESS,\r\n                payload: {\r\n                    filteredSkills,\r\n                    searchTerm\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            dispatch({\r\n                type: SKILL_SEARCH_SUCCESS,\r\n                payload: {\r\n                    filteredSkills: [],\r\n                    searchTerm\r\n                }\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        dispatch({\r\n            type: SKILL_SEARCH_SUCCESS,\r\n            payload: {\r\n                filteredSkills: [],\r\n                searchTerm\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const FetchSkills = () => dispatch => {\r\n    dispatch({\r\n        type: FETCH_SKILLS_BEGIN\r\n    });\r\n    let url = config.adminApiUrl + 'getAllSkills';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            console.log('skills fetched');\r\n            dispatch({\r\n                type: FETCH_SKILLS_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_SKILLS_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const CloseSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: CLOSE_SNACKBAR\r\n    });\r\n}\r\nexport const OpenSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: OPEN_SNACKBAR\r\n    });\r\n}\r\n","import axios from 'axios';\r\nimport config from '../config';\r\nimport repository from '../repository';\r\n\r\nexport const ADD_QUESTION_TO_TEST = 'ADD_QUESTION_TO_TEST';\r\nexport const PUBLISH_TEST_SUCCESS = 'PUBLISH_TEST_SUCCESS';\r\nexport const PUBLISH_TEST_FAIL = 'PUBLISH_TEST_FAIL';\r\nexport const FETCH_TEST_SUCCESS = 'FETCH_TEST_SUCCESS';\r\nexport const FETCH_TEST_FAIL = 'FETCH_TEST_FAIL';\r\nexport const TEST_PUBLISHED = 'TEST_PUBLISHED';\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\r\nexport const OPEN_SNACKBAR = 'OPEN_SNACKBAR';\r\n\r\nvar history = {};\r\nexport const SetHistory = (propsHistory) => dispatch => {\r\n    history = propsHistory;\r\n}\r\n\r\nexport const FetchTest = (testId) => dispatch => {\r\n    console.log('fetch test: ' + testId);\r\n    let url = config.adminApiUrl + 'getTest' + '?testId=' + testId;\r\n    repository.getData(url, history)\r\n        .then((res) => {\r\n            console.log('test fetched: ');\r\n            console.log(res);\r\n            dispatch({\r\n                type: FETCH_TEST_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_TEST_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const AddMcqToTest = (mcqItem, testModel) => dispatch => {\r\n    let url = config.adminApiUrl + 'test';\r\n    \r\n    if(!testModel.selectedMcqs){\r\n        testModel.selectedMcqs = [];\r\n    }\r\n    let mcqList = testModel.selectedMcqs;\r\n    let filterIndex = testModel.selectedMcqs.findIndex(item => item.$loki === mcqItem.$loki);\r\n    if(filterIndex !== undefined && filterIndex > -1) {\r\n        testModel.selectedMcqs.splice(filterIndex, 1);\r\n    }\r\n    else {\r\n        testModel.selectedMcqs.push(mcqItem);\r\n    }\r\n    repository.updateData(url, testModel, history)\r\n        .then((res) => {\r\n            console.log('test updated');\r\n            console.log(res);\r\n            dispatch({\r\n                type: ADD_QUESTION_TO_TEST,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n\r\n        })\r\n}\r\n\r\nexport const PublishTest = (testModel) => dispatch => {\r\n    \r\n    let url = config.adminApiUrl + 'test';\r\n    console.log('action model');\r\n    console.log(testModel);\r\n    testModel.status = 'published';\r\n    repository.updateData(url, testModel, history)\r\n        .then((res) => {\r\n            console.log('test published');\r\n            console.log(res);\r\n            dispatch({\r\n                type: TEST_PUBLISHED,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: PUBLISH_TEST_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n    \r\n}\r\n\r\nexport const CloseSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: CLOSE_SNACKBAR\r\n    });\r\n}\r\nexport const OpenSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: OPEN_SNACKBAR\r\n    });\r\n}\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst AnswerOptions = (props) => {\r\n        return (\r\n            <div>\r\n                <Typography variant=\"caption\">Choices</Typography>\r\n                <List dense={true}>\r\n                        {props.choices && props.choices.length > 0\r\n                        && props.choices.map((item, index) => {\r\n                            return(\r\n                            <ListItem key={index}\r\n                                divider={true}\r\n                                button={false} onClick={ () => props.onChoiceSelect && props.onChoiceSelect(item) }\r\n                            >\r\n                            <ListItemText\r\n                                primary={item.content}\r\n                                secondary={item.isCorrect ? 'Correct' : 'Wrong'}\r\n                                />\r\n                            </ListItem>)\r\n                        })}\r\n                        \r\n                </List>\r\n\r\n            </div>\r\n        );\r\n}\r\nexport default AnswerOptions;","import React, { Component } from 'react';\r\nimport { Card, CardContent, CardActions, ListItem, ListItemText, \r\n        ListItemSecondaryAction, IconButton, Slide,\r\n        Dialog, DialogTitle, DialogContent, Divider,\r\n        Typography, \r\n        DialogActions,\r\n        Button,\r\n        Checkbox} from '@material-ui/core';\r\nimport { AddBox, Close, Remove, Edit, Delete } from '@material-ui/icons';\r\nimport AnswerOptions from '../../components/Mcq/AnswerOptions';\r\n\r\nconst Transition = (props) => {\r\n    return <Slide direction=\"up\" {...props} />\r\n}\r\n\r\nclass McqItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n    \r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        console.log('handle close');\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.props.onDeleteMcq();\r\n        this.setState({ open: false });\r\n    }\r\n\r\n    handleChange = (mcq) => {\r\n        console.log('selected', mcq);\r\n        this.props.markForDeletion(mcq);\r\n    }\r\n\r\n    render = () => {\r\n        let { mcq, isSelectable, isEditable, isChecked } = this.props; \r\n        return (\r\n            <div>\r\n                \r\n                <ListItem \r\n                    divider={true} \r\n                    onClick={this.handleClickOpen}\r\n                    button={true}\r\n                    >\r\n                    <ListItemText primary={mcq.question} secondary={`${mcq.category} - ${mcq.skill}`}>\r\n                    </ListItemText>\r\n                    {isSelectable && \r\n                    <ListItemSecondaryAction>\r\n                        <IconButton onClick={() => this.props.onAddMcqToTest()}>\r\n                            {!mcq.selected && \r\n                            <AddBox fontSize=\"large\" color=\"secondary\" />\r\n                            }\r\n                            {mcq.selected && \r\n                            <Remove fontSize=\"large\" color=\"secondary\" />\r\n                            }\r\n                        </IconButton>\r\n                    </ListItemSecondaryAction>}\r\n                    {isEditable && \r\n                    <ListItemSecondaryAction>\r\n                        <Checkbox checked={isChecked} onChange={() => this.handleChange(mcq)} value=\"checkedA\" />\r\n                        <IconButton onClick={() => this.props.onEditClick(mcq)}>\r\n                            <Edit fontSize=\"small\" color=\"secondary\" />\r\n                        </IconButton>\r\n                    </ListItemSecondaryAction>}\r\n                </ListItem>\r\n                <Dialog\r\n                    TransitionComponent={Transition}\r\n                    fullScreen\r\n                    style={{left: '20%', right: '20%', top: '10%', bottom: '10%' }}\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <DialogTitle onClose={this.handleClose}>\r\n                        <Typography variant=\"display1\">\r\n                            {mcq.question}\r\n                        </Typography>\r\n                        <IconButton onClick={this.handleClose} style={{right: '4%', top: '1%', position:'absolute'}}>\r\n                            <Close />\r\n                        </IconButton>\r\n                    </DialogTitle>\r\n                    <Divider />\r\n                    <DialogContent style={{padding: '4%'}}>\r\n                        <p>{mcq.description}</p>\r\n                        <AnswerOptions choices={mcq.choices}/>\r\n                    </DialogContent>\r\n                    {isEditable &&\r\n                    <DialogActions>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={this.handleDelete} >\r\n                            Delete\r\n                        </Button>\r\n                    </DialogActions>\r\n                    }\r\n                </Dialog>\r\n            </div>\r\n        );  \r\n    }\r\n}\r\nexport default McqItem;","import React from 'react';\r\nimport { Typography, List } from '@material-ui/core';\r\nimport McqItem from './McqItem';\r\n\r\nconst SelectedMcqs = (props) => {\r\n    let { selectedMcqs } = props;\r\n    \r\n    console.log('SelectedMcqs render');\r\n    console.log(selectedMcqs);\r\n    return (\r\n        <div>\r\n        {selectedMcqs && selectedMcqs.length > 0 &&\r\n            <List>\r\n                {selectedMcqs.map((item, index) => {\r\n                    return (\r\n                        <McqItem mcq={item}  key={index}\r\n                                    onSelect={ () => props.openMcq(item) }\r\n                                    isSelectable={false} />\r\n                    );\r\n                })}\r\n            </List>\r\n        }\r\n        {!selectedMcqs && \r\n            <Typography variant=\"subtitle1\">No questions selected</Typography>\r\n        }\r\n        {selectedMcqs && selectedMcqs.length === 0 && \r\n            <Typography variant=\"subtitle1\">No questions selected</Typography>\r\n        }\r\n        </div>\r\n    )\r\n}\r\nexport default SelectedMcqs;","import React, { Component } from 'react';\r\nimport { Dialog, DialogContent, DialogTitle,\r\n    Divider, DialogActions, Card, CardHeader, Button, IconButton, CardContent, Slide, List, Typography } from '@material-ui/core';\r\nimport config from '../../config';\r\nimport axios from 'axios';\r\nimport McqItem from './McqItem';\r\nimport { Close } from '@material-ui/icons';\r\nimport repository from '../../repository';\r\n\r\nconst Transition = (props) => {\r\n    return <Slide direction=\"left\" {...props} />\r\n}\r\n\r\nclass McqSelector extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n            mcqList: [],\r\n            error: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n            \r\n        let url = config.adminApiUrl + 'getAllMcqs';\r\n        repository.getData(url)\r\n            .then((res) => {\r\n                console.log('MCQ fetched');\r\n                this.setState({\r\n                    mcqList: res.data,\r\n                    error: ''\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                this.setState({\r\n                    error: err\r\n                });\r\n            });\r\n    }\r\n\r\n    onSelectMcqItem = (mcqItem) => {\r\n        this.props.onSelectMcq(mcqItem);\r\n    }\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        console.log('handle close');\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    render = () => {\r\n        let { onAddMcqToTest, selectedMcqs } = this.props;\r\n        let { mcqList } = this.state;\r\n        if(selectedMcqs && selectedMcqs.length > 0) {\r\n            selectedMcqs.map((item, index) => {\r\n                // console.log(`selectedMcq: ${item.$loki}`);\r\n            })\r\n        }\r\n        return (\r\n            <div>\r\n            <Card>   \r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>Add Mcq To Test</Button>\r\n                <Dialog\r\n                TransitionComponent={Transition}\r\n                fullScreen\r\n                style={{left: '20%'}}\r\n                open={this.state.open}\r\n                onClose={this.handleClose}\r\n                >\r\n                    <DialogTitle onClose={this.handleClose}>\r\n                        <Typography variant=\"title\">\r\n                            Select MCQ to Add\r\n                        </Typography>\r\n                        <IconButton onClick={this.handleClose} style={{right: '4%', top: '1%', position:'absolute'}}>\r\n                            <Close />\r\n                        </IconButton>\r\n                    </DialogTitle>\r\n                    <Divider />\r\n                    <DialogContent style={{padding: '4%'}}>\r\n                    <List>\r\n                        {mcqList && mcqList.length > 0 &&\r\n                        mcqList.map((item, index) => {\r\n                            // console.log(`item: ${item.$loki}`);\r\n                            if(selectedMcqs && selectedMcqs.findIndex(mcq => {\r\n                                console.log(`${mcq.$loki} == ${item.$loki}, ${mcq.$loki == item.$loki}`);\r\n                                return (mcq.$loki == item.$loki) || (mcq.$loki === item.$loki)\r\n                            }) > -1) {\r\n                                // console.log(`selected mcq: ${item.question}, total: ${mcqList.length}`);\r\n                                item.selected = true;\r\n                            } else {\r\n                                // console.log(`selected mcq: ${item.$loki}, total: ${mcqList.length}`);\r\n                                item.selected = false;\r\n                            }\r\n                            return (\r\n                            <McqItem    mcq={item} key={index}\r\n                                        onAddMcqToTest={() => this.props.onSelectMcq(item) } \r\n                                        isSelectable={true}\r\n                                        isEditable={false} />\r\n                            );\r\n                        })}\r\n                    </List>\r\n                    </DialogContent>\r\n                        {/* <Divider />\r\n                    <DialogActions>\r\n                        <Button variant=\"contained\" size=\"large\" color=\"primary\"\r\n                                        onClick={ () => this.handleSubmit(this.props.model)}>\r\n                            Create Test\r\n                        </Button>\r\n                    </DialogActions> */}\r\n                </Dialog>\r\n            </Card>\r\n        \r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default McqSelector;","import React, { Component } from 'react';\r\nimport { Card, CardHeader, Button, IconButton, CardContent } from '@material-ui/core';\r\nimport { AddBox } from '@material-ui/icons';\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom';\r\nimport SelectedMcqs from './SelectedMcqs';\r\nimport McqSelector from'./McqSelector';\r\n\r\nclass TestConsoleQuestions extends Component {\r\n\r\n    render = () => {\r\n        let { selectedMcqs, currentTest } = this.props;\r\n        console.log('test console questions render');\r\n        console.log(selectedMcqs);\r\n        return (\r\n            <Card>\r\n                {currentTest && currentTest.status==='draft' &&\r\n                <CardHeader action={\r\n                    <McqSelector \r\n                        onSelectMcq={(mcqItem) => this.props.onSelectMcq(mcqItem)} \r\n                        selectedMcqs={selectedMcqs}\r\n                        />\r\n                }\r\n                />\r\n                }\r\n                <CardContent>\r\n                    <SelectedMcqs selectedMcqs={selectedMcqs} />\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\nexport default TestConsoleQuestions;","import React, { Component } from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport { Card, CardHeader, CardContent } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//     root: {\r\n//       width: '100%',\r\n//       marginTop: theme.spacing(3),\r\n//       overflowX: 'auto',\r\n//     },\r\n//     table: {\r\n//       minWidth: 700,\r\n//     },\r\n// }));\r\n\r\nclass TestConsoleCandidates extends Component {\r\n\r\n    render = () => {\r\n        // const classes = useStyles();\r\n        let { currentTest } = this.props;\r\n\r\n        if(currentTest && currentTest.invitations && currentTest.invitations.length > 0){\r\n            return (\r\n                <div>\r\n                {/* <Card>\r\n                    <CardContent> */}\r\n                    <Table>\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <CustomTableCell>Email</CustomTableCell>\r\n                            <CustomTableCell align=\"left\">Status</CustomTableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {currentTest.invitations.map((inviteInfo, index) => (\r\n                            <TableRow key={index}>\r\n                            <CustomTableCell align=\"left\"><Typography variant=\"subtitle2\" >{inviteInfo.emailTo}</Typography></CustomTableCell>\r\n                            <CustomTableCell align=\"left\"><Typography variant=\"subtitle2\" >{inviteInfo.testStatus}</Typography></CustomTableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                    {/* </CardContent>\r\n                </Card> */}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Typography variant=\"subtitle1\">No Invitations Sent</Typography> \r\n            </div> \r\n        )\r\n\r\n        // return (\r\n        //     <Paper className={classes.root}>\r\n        //         <Table className={classes.table}>\r\n        //             <TableHead>\r\n        //             <TableRow>\r\n        //                 <StyledTableCell>Email</StyledTableCell>\r\n        //                 <StyledTableCell align=\"right\">Status</StyledTableCell>\r\n        //             </TableRow>\r\n        //             </TableHead>\r\n        //             <TableBody>\r\n        //             {currentTest.invitations.map(row => (\r\n        //                 <StyledTableRow key={row.emailTo}>\r\n        //                 <StyledTableCell component=\"th\" scope=\"row\">\r\n        //                     {row.status}\r\n        //                 </StyledTableCell>\r\n        //                 </StyledTableRow>\r\n        //             ))}\r\n        //             </TableBody>\r\n        //         </Table>\r\n        //     </Paper>\r\n        // )\r\n    }\r\n}\r\nconst CustomTableCell = withStyles(theme => ({\r\n    head: {\r\n      backgroundColor: '#3f51b5',\r\n      //   backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst StyledTableCell = withStyles(theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n  \r\n  const StyledTableRow = withStyles(theme => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.background.default,\r\n      },\r\n    },\r\n}))(TableRow);\r\nexport default TestConsoleCandidates;","import React, { Component } from 'react';\r\n\r\nclass TestConsoleSettings extends Component {\r\n\r\n    render = () => {\r\n        return (\r\n            <div>WIP</div>\r\n        );\r\n    }\r\n}\r\nexport default TestConsoleSettings;","import React, { Component } from 'react';\r\nimport { AppBar, Tabs, Tab, Typography, Button } from '@material-ui/core';\r\nimport TestConsoleQuestions from './TestConsoleQuestions';\r\nimport TestConsoleCandidates from './TestConsoleCandidates';\r\nimport TestConsoleSettings from './TestConsoleSettings';\r\n\r\nclass TestConsoleTabs extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: 0\r\n        };\r\n    }\r\n\r\n    handleChange = (event, value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    render = () => {\r\n        let { value } = this.state;\r\n        let { tabs, selectedMcqs, currentTest } = this.props;\r\n        return(\r\n        <div>\r\n            <AppBar position=\"static\">\r\n                <Tabs variant=\"fullWidth\" value={value} onChange={this.handleChange}>\r\n                    <LinkTab label=\"Questions\" href=\"page1\" />\r\n                    <LinkTab label=\"Candidates\" href=\"page2\" />\r\n                    <LinkTab label=\"Settings\" href=\"page3\" />\r\n                </Tabs>\r\n            </AppBar>\r\n            {value === 0 && \r\n            <TabContainer>\r\n                <TestConsoleQuestions   \r\n                            selectedMcqs={selectedMcqs} \r\n                            onSelectMcq={ (mcqItem) => this.props.onAddMcqToTest(mcqItem) } \r\n                            currentTest={currentTest}\r\n                            /> \r\n            </TabContainer>}\r\n            {value === 1 && \r\n            <TabContainer>\r\n                <TestConsoleCandidates \r\n                    currentTest={currentTest}\r\n                /> \r\n            </TabContainer>}\r\n            {value === 2 && <TabContainer><TestConsoleSettings /> </TabContainer>}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst TabContainer = (props) => {\r\n    return (\r\n      <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n        {props.children}\r\n      </Typography>\r\n    );\r\n}\r\n\r\nconst LinkTab = (props) => {\r\n    return <Tab component=\"a\" onClick={event => event.preventDefault()} {...props} />;\r\n}\r\nexport default TestConsoleTabs;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n// import AddTestComponent from '../components/AdminTest/AddTest';\r\nimport {    FetchTest, AddMcqToTest, PublishTest, CloseSnackbar, SetHistory,\r\n            OpenSnackbar } from '../../actions/TestConsoleActions';            \r\nimport Grid from '@material-ui/core/Grid';\r\nimport SnackbarComponent from '../../components/lib/SnackbarComponent';\r\nimport TestConsoleTabs from './TestConsoleTabs';\r\nimport { Button, Card, CardHeader } from '@material-ui/core';\r\nimport TestConsoleQuestions from './TestConsoleQuestions';\r\nimport LoadingComponent from '../../components/lib/LoadingComponent';\r\nimport { KeyboardBackspace } from '@material-ui/icons';\r\n\r\nclass TestConsoleContainer extends React.Component {\r\n    \r\n    componentWillMount = () => {\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        console.log('this.props.history', this.props.history);\r\n        this.props.SetHistory(this.props.history);\r\n        this.reload();\r\n    }\r\n\r\n    componentWillReceiveProps = (newprops, oldprops) => {\r\n        if(newprops.success_message !== '' && newprops.success_message !== undefined) {\r\n            // this.props.OpenSnackbar();\r\n        }\r\n    }\r\n\r\n    reload = () => {\r\n        // this.props.FetchSkills();\r\n        let { state } = this.props.location;\r\n        console.log('reload: location state');\r\n        console.log(state);\r\n        if(state){\r\n            this.props.FetchTest(state.testId, this.props.history);\r\n        }\r\n    }\r\n\r\n    onAddTest = (model) => {\r\n        this.props.AddTest(model, this.props.editMode)\r\n    }\r\n\r\n    onAddMcqToTest = (mcqItem) => {\r\n        console.log('container: mcq added to test');\r\n        this.props.AddMcqToTest(mcqItem, this.props.current_test);\r\n    }\r\n\r\n    onPublish = () => {\r\n        this.props.PublishTest(this.props.current_test);\r\n        this.reload();\r\n    }\r\n\r\n    render = () => {\r\n        let { current_test } = this.props;\r\n        console.log('container: render');\r\n        console.log(current_test);\r\n        if(current_test && current_test.selectedMcqs) {\r\n            console.log(current_test.selectedMcqs);\r\n        }\r\n        return(\r\n            <Grid container spacing={16}>\r\n                <Grid item xs={12} sm={12}>\r\n                {!current_test && <LoadingComponent />}\r\n                {current_test &&\r\n                <Card>\r\n                    <CardHeader action={\r\n                        <div>\r\n                        {current_test.status=='draft' && current_test.selectedMcqs && current_test.selectedMcqs.length > 0 &&\r\n                        <Button variant=\"contained\" color=\"primary\"\r\n                                onClick={this.onPublish}\r\n                        >Publish</Button>}\r\n                        <Button color=\"primary\" size=\"large\" variant=\"outlined\"\r\n                                onClick={() => this.props.history.goBack() }>\r\n                            <KeyboardBackspace />\r\n                        </Button>\r\n                        </div>\r\n                    }\r\n                    title={current_test.testName}\r\n                     subheader={current_test.status!=='draft' ? 'Published' : 'draft'}\r\n                    />\r\n                    <TestConsoleTabs \r\n                        tabs={tabs} \r\n                        onAddMcqToTest={(mcqId) => this.onAddMcqToTest(mcqId) }\r\n                        selectedMcqs={current_test.selectedMcqs} \r\n                        currentTest={current_test}\r\n                        />\r\n                </Card>\r\n                }\r\n                <SnackbarComponent \r\n                    openSnack={this.props.snack_open} handleClose={() => this.props.CloseSnackbar()} \r\n                    snackMessage={\"Data Saved Successfully!\"} \r\n                    /> \r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.testConsoleReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    // AddTest: (model, editMode) => dispatch(AddTest(model, editMode)),\r\n    // UpdateTest: (model) => dispatch(UpdateTest(model)),\r\n    SetHistory: (history) => dispatch(SetHistory(history)),\r\n    AddMcqToTest: (mcqItem, testModel) => dispatch(AddMcqToTest(mcqItem, testModel)),\r\n    PublishTest: (testModel) => dispatch(PublishTest(testModel)),\r\n    FetchTest: (testId, history) => dispatch(FetchTest(testId, history)),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    // CurrentTestFieldChange: (val, field, model) => dispatch(CurrentTestFieldChange(val, field, model))\r\n});\r\nconst tabs = [\r\n    {key: 0, content: '<Button variant=\"container\" color=\"primary\">Page {index}</Button>'},\r\n    {key: 1, content: <TestConsoleQuestions /> },\r\n    {key: 2, content: getButton}\r\n]\r\nconst getButton = (index) => {\r\n    return 'abc'+index;\r\n    // (\r\n        // <Button variant=\"container\" color=\"primary\">Page {index}</Button>\r\n    // );\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TestConsoleContainer);","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Grid } from '@material-ui/core';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AnswerOptions from './AnswerOptions';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\n\r\nconst AddAnswerOption = (props) => {\r\n        let { currentAnswer, onAnswerFieldChange, onAnswerAdd, model } = props.children;\r\n        // console.log('add option (model):');\r\n        // console.log(model);\r\n        return (\r\n            <ExpansionPanel>\r\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Grid container spacing={16}>\r\n                    <Grid item xs={6} sm={6}>\r\n                        <Typography variant=\"h6\">Answer Choices</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={5} sm={5}>\r\n                    </Grid>\r\n                    <Grid item xs={1} sm={1}>\r\n                        <Typography variant=\"subtitle1\" >Add Choice</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                    <div style={styles.formControl}>\r\n                    {currentAnswer && \r\n                        <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                            <TextField\r\n                                id=\"outlined-name\"\r\n                                label=\"Description\"\r\n                                multiline\r\n                                rows=\"6\"\r\n                                value={currentAnswer.content}\r\n                                onChange={ (e) => onAnswerFieldChange(e.target.value, 'content', currentAnswer) }\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormControl>\r\n                    }\r\n\r\n                    {currentAnswer && \r\n                        <FormControlLabel style={styles.formControl}\r\n                            control={\r\n                            <Switch\r\n                                // checked={currentAnswer.isCorrect}\r\n                                onChange={ (e) => onAnswerFieldChange(e.target.checked, 'isCorrect', currentAnswer) }\r\n                                value={currentAnswer.isCorrect}\r\n                            />\r\n                            }\r\n                            label=\"Is Correct\"\r\n                        /> \r\n                    }\r\n                    </div>\r\n                    <AnswerOptions choices={model.choices} />\r\n                </ExpansionPanelDetails>\r\n                <Divider />\r\n                <ExpansionPanelActions>\r\n                <Button variant=\"outlined\" size=\"small\" color=\"primary\" onClick={ () => onAnswerAdd(currentAnswer) } >\r\n                    Add\r\n                </Button>\r\n                </ExpansionPanelActions>\r\n            </ExpansionPanel>\r\n        );\r\n}\r\nexport default AddAnswerOption;\r\nconst styles = {\r\n    formControl: {\r\n        width: '70%'\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst experienceLevel = [\r\n    0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20\r\n];\r\n\r\nclass SelectExperience extends Component{\r\n\r\n    state = {\r\n        open: false,\r\n        min: '',\r\n    };\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        open: false,\r\n        min: 0,\r\n        max: 10\r\n      };\r\n    }\r\n\r\n    // handleChange = (name, event) => {\r\n      handleChange = name => event => {\r\n        // this.setState({ [name]: Number(event.target.value) });\r\n        switch(name)\r\n        {\r\n          case 'min':\r\n          {\r\n            this.setState({\r\n              min: event.target.value\r\n            });\r\n            break;\r\n          }\r\n          case 'max':\r\n          {\r\n            this.setState({\r\n              max: event.target.value\r\n            });\r\n            break;\r\n          }\r\n          default:{}\r\n        }\r\n    };\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n      console.log('submit called');\r\n      this.handleClose();\r\n      this.props.onSubmitExperience(this.state.min, this.state.max);\r\n    }\r\n\r\n    render = () => {\r\n    return (\r\n        <div>\r\n        <Button variant=\"outlined\" onClick={this.handleClickOpen}>Experience Level: {this.state.min} - {this.state.max}</Button>\r\n        <Dialog\r\n          disableBackdropClick\r\n          disableEscapeKeyDown\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n        >\r\n          <DialogTitle>Select Experience Level</DialogTitle>\r\n          <DialogContent>\r\n            <form >\r\n                <br></br>\r\n                <br></br>\r\n              <FormControl style={styles.formControl} variant=\"outlined\" >\r\n                <InputLabel htmlFor=\"min-simple\">Minimum</InputLabel>\r\n                <Select\r\n                  value={this.state.min}\r\n                  onChange={this.handleChange('min')}\r\n                  input={<Input id=\"min-simple\" />}\r\n                >\r\n                {experienceLevel.map((item, index) => {\r\n                  return <MenuItem key={index} value={item}>{item}</MenuItem>\r\n                })}\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl style={styles.formControl} variant=\"outlined\" >\r\n                <InputLabel htmlFor=\"max-simple\">Maximum</InputLabel>\r\n                <Select\r\n                  value={this.state.max}\r\n                  onChange={this.handleChange('max')}\r\n                  input={<Input id=\"max-simple\" />}\r\n                >\r\n                {experienceLevel.map((item, index) => {\r\n                  return <MenuItem key={index} value={item}>{item}</MenuItem>\r\n                })}\r\n                </Select>\r\n              </FormControl>\r\n            </form>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleSubmit} color=\"primary\">\r\n              Ok\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    )\r\n    }\r\n}\r\nconst styles = {\r\n    \r\n      formControl: {\r\n        width:\"45%\", \r\n        marginLeft:\"5%\"\r\n      }\r\n    \r\n};\r\nexport default SelectExperience;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AddAnswerOptionComponent from './AddAnswerOption';\r\nimport SelectExperience from './SelectExperience';\r\nimport LoadingComponent from '../lib/LoadingComponent';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n// import { withRouter } from 'react-router-dom';\r\nimport { KeyboardBackspace } from '@material-ui/icons';\r\n\r\nconst AddMcq = (props) => {\r\n        let { model, editMode } = props;\r\n\r\n        const onSubmitExperience = (min, max) => {\r\n            console.log('add mcq handler for experience called');\r\n            props.onFieldChange(min, 'minimumExperience', props.model)\r\n            props.onFieldChange(max, 'maximumExperience', props.model)\r\n        }\r\n\r\n        return (\r\n            <Card>\r\n        {!model && <LoadingComponent />} \r\n        {model &&    \r\n                        <form  noValidate autoComplete=\"off\">\r\n                            <CardHeader avatar={\r\n                                <Avatar aria-label=\"Recipe\" style={styles.avatar}>\r\n                                    <AddIcon />\r\n                                </Avatar>\r\n                            }\r\n                            action={\r\n                                <Button color=\"primary\" size=\"large\" variant=\"outlined\"\r\n                                        onClick={() => props.history.goBack() }>\r\n                                    <KeyboardBackspace />\r\n                                </Button>\r\n                            }\r\n                            title={editMode ? \"Edit MCQ\" : \"Add MCQ\"}\r\n                            subheader=\"Multiple Choice Question\">\r\n                            </CardHeader>\r\n                            <CardContent>\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <InputLabel htmlFor=\"outlined-category-simple\">\r\n                                        Category\r\n                                    </InputLabel>\r\n                                    <Select\r\n                                        onChange={(e) => props.onFieldChange(e.target.value, 'category', props.model)}\r\n                                        value={model.category}\r\n                                        input={\r\n                                        <OutlinedInput\r\n                                            labelWidth={65}\r\n                                            name=\"category\"\r\n                                            id=\"outlined-category-simple\"\r\n                                        />\r\n                                        }>\r\n                                        <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                        </MenuItem>\r\n                                        {props.categories && props.categories.length > 0 &&\r\n                                            props.categories.map((item, index) => {\r\n                                            return (\r\n                                                <MenuItem key={index} value={item.title}>{item.title}</MenuItem>\r\n                                            )\r\n                                        })}\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <TextField\r\n                                        id=\"outlined-name\"\r\n                                        label=\"Title\"\r\n                                        className={styles.dense}\r\n                                        value={model.question}\r\n                                        onChange={(e) => props.onFieldChange(e.target.value, 'question', props.model)}\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <InputLabel\r\n                                        htmlFor=\"outlined-skill-simple\">\r\n                                        Skill\r\n                                    </InputLabel>\r\n                                    <Select\r\n                                        onChange={(e) => props.onFieldChange(e.target.value, 'skill', props.model)}\r\n                                        value={model.skill}\r\n                                        input={\r\n                                        <OutlinedInput\r\n                                            labelWidth={30}\r\n                                            name=\"skill\"\r\n                                            id=\"outlined-skill-simple\"\r\n                                        />\r\n                                        }>\r\n                                        <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                        </MenuItem>\r\n                                        {props.skills && props.skills.map((item, index) => {\r\n                                            return (\r\n                                                <MenuItem key={index} value={item.skill}>{item.skill}</MenuItem>\r\n                                            )\r\n                                        })}\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <SelectExperience \r\n                                        onSubmitExperience={ (min, max) => onSubmitExperience(min, max) } />\r\n                                </FormControl>\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <TextField\r\n                                        id=\"outlined-name\"\r\n                                        label=\"Question Description\"\r\n                                        multiline\r\n                                        rows=\"4\"\r\n                                        value={model.description}\r\n                                        className={styles.dense}\r\n                                        onChange={(e) => props.onFieldChange(e.target.value, 'description', props.model)}\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </FormControl>\r\n                                <AddAnswerOptionComponent>\r\n                                    {props}\r\n                                </AddAnswerOptionComponent>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                            <Button variant=\"contained\" size=\"large\" color=\"primary\" \r\n                                    onClick={ () => props.onSubmit(props.model)}>\r\n                                Submit\r\n                            </Button>\r\n                            </CardActions>\r\n                        </form>\r\n        }\r\n                    </Card>\r\n                   \r\n        );\r\n}\r\nconst styles = {\r\n    formControl: {\r\n        width: '70%',\r\n        marginBottom: '1%'\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n};\r\nexport default AddMcq;","import axios from 'axios';\r\nimport config from '../config';\r\nimport repository from '../repository';\r\nimport { FETCH_CATEGORIES_SUCCESS, FETCH_CATEGORIES_FAIL } from './CategoryActions';\r\n\r\nexport const ADD_MCQ_BEGIN = 'ADD_MCQ_BEGIN';\r\nexport const ADD_MCQ_SUCCESS = 'ADD_MCQ_SUCCESS';\r\nexport const ADD_MCQ_FAIL = 'ADD_MCQ_FAIL';\r\nexport const MCQ_SEARCH_END = 'MCQ_SEARCH_END';\r\nexport const MCQ_SEARCH_BEGIN = 'MCQ_SEARCH_BEGIN';\r\nexport const MCQ_SEARCH_SUCCESS = 'MCQ_SEARCH_SUCCESS';\r\nexport const UPDATE_MCQ_BEGIN = 'UPDATE_MCQ_BEGIN';\r\nexport const UPDATE_MCQ_SUCCESS = 'UPDATE_MCQ_SUCCESS';\r\nexport const UPDATE_MCQ_FAIL = 'UPDATE_MCQ_FAIL';\r\nexport const DELETE_MCQ_SUCCESS = 'DELETE_MCQ_SUCCESS';\r\nexport const DELETE_MCQ_FAIL = 'DELETE_MCQ_FAIL';\r\nexport const SELECT_MCQ = 'SELECT_MCQ';\r\nexport const CURRENT_MCQ_FIELD_CHANGE = 'CURRENT_MCQ_FIELD_CHANGE';\r\nexport const CURRENT_MCQ_FIELD_CHANGE_END = 'CURRENT_MCQ_FIELD_CHANGE_END';\r\nexport const CURRENT_ANSWER_FIELD_CHANGE = 'CURRENT_ANSWER_FIELD_CHANGE';\r\nexport const CURRENT_ANSWER_FIELD_CHANGE_END = 'CURRENT_ANSWER_FIELD_CHANGE_END';\r\nexport const CHOICE_ADDED_TO_MCQ = 'CHOICE_ADDED_TO_MCQ';\r\nexport const FETCH_MCQ_BEGIN = 'FETCH_MCQ_BEGIN';\r\nexport const FETCH_MCQ_SUCCESS = 'FETCH_MCQ_SUCCESS';\r\nexport const FETCH_MCQ_FAIL = 'FETCH_MCQ_FAIL';\r\nexport const FETCH_SKILLS_SUCCESS = 'FETCH_SKILLS_SUCCESS';\r\nexport const FETCH_SKILLS_FAIL = 'FETCH_SKILLS_FAIL';\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\r\nexport const OPEN_SNACKBAR = 'OPEN_SNACKBAR';\r\n\r\nexport const CurrentMcqFieldChange = (val, field, model) => dispatch => {\r\n    console.log('mcq field change: ' + field);\r\n    console.log(val);\r\n    switch(field)\r\n    {\r\n        case 'question':\r\n        {\r\n            model.question = val;\r\n            dispatch({\r\n                type: CURRENT_MCQ_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'description':\r\n        {\r\n            model.description = val;\r\n            dispatch({\r\n                type: CURRENT_MCQ_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'category':\r\n        {\r\n            model.category = val;\r\n            dispatch({\r\n                type: CURRENT_MCQ_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'skill':\r\n        {\r\n            model.skill = val;\r\n            dispatch({\r\n                type: CURRENT_MCQ_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'minimumExperience':\r\n        {\r\n            model.minimumExperience = val;\r\n            dispatch({\r\n                type: CURRENT_MCQ_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'maximumExperience':\r\n        {\r\n            model.maximumExperience = val;\r\n            dispatch({\r\n                type: CURRENT_MCQ_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        default:\r\n        {\r\n        }\r\n    }\r\n    dispatch({\r\n        type: CURRENT_MCQ_FIELD_CHANGE_END\r\n    });\r\n}\r\n\r\nexport const CurrentAnswerFieldChange = (val, field, model) => dispatch => {\r\n    console.log('mcq answer field change: ' + field);\r\n    console.log(val);\r\n    switch(field)\r\n    {\r\n        case 'content':\r\n        {\r\n            model.content = val;\r\n            dispatch({\r\n                type: CURRENT_ANSWER_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'isCorrect':\r\n        {\r\n            model.isCorrect = val;\r\n            dispatch({\r\n                type: CURRENT_ANSWER_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        default:\r\n        {\r\n        }\r\n    }\r\n    dispatch({\r\n        type: CURRENT_ANSWER_FIELD_CHANGE_END\r\n    });\r\n}\r\n\r\nexport const AddAnswerChoice = (answerModel, mcqModel) => dispatch => {\r\n    if(mcqModel) {\r\n        if(!mcqModel.choices) {\r\n            mcqModel.choices = [];\r\n        }\r\n        mcqModel.choices.push(answerModel);\r\n    }\r\n    dispatch({\r\n        type: CHOICE_ADDED_TO_MCQ,\r\n        payload: mcqModel\r\n    })\r\n}\r\n\r\nexport const AddMcq = (mcqModel, editMode) => dispatch => {\r\n    dispatch({\r\n        type: ADD_MCQ_BEGIN\r\n    });\r\n    let url = config.adminApiUrl + 'mcq';\r\n    console.log('action model');\r\n    console.log(mcqModel);\r\n    if(!editMode) {\r\n        repository.saveData(url, mcqModel)\r\n            .then((res) => {\r\n                console.log('mcq saved: ' + res);\r\n                dispatch({\r\n                    type: ADD_MCQ_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({\r\n                    type: ADD_MCQ_FAIL,\r\n                    payload: err\r\n                });\r\n            });\r\n    }\r\n    else {\r\n        dispatch(UpdateMcq(mcqModel));\r\n    }\r\n}\r\n\r\nexport const UpdateMcq = (mcqModel) => dispatch => {\r\n    dispatch({\r\n        type: UPDATE_MCQ_BEGIN\r\n    });\r\n    let url = config.adminApiUrl + 'mcq';\r\n    repository.updateData(url, mcqModel)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: UPDATE_MCQ_SUCCESS\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: UPDATE_MCQ_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const DeleteMcq = (mcqModel) => dispatch => {\r\n    let url = config.adminApiUrl + 'mcq';\r\n    repository.deleteData(url, mcqModel)\r\n        .then((res) => {\r\n            dispatch(FetchMcqs(true));\r\n            // dispatch({\r\n            //     type: DELETE_MCQ_SUCCESS\r\n            // });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: DELETE_MCQ_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const BeginSearch = () => dispatch => {\r\n    dispatch({\r\n        type: MCQ_SEARCH_BEGIN\r\n    });\r\n}\r\n\r\nexport const EndSearch = () => dispatch => {\r\n    dispatch({\r\n        type: MCQ_SEARCH_END\r\n    });\r\n}\r\n\r\n export const SearchMcq = (searchTerm, mcqList) => dispatch => {\r\n    console.log(`search term: ${searchTerm}, list length: ${mcqList ? mcqList.length : 0}`);\r\n    if(mcqList && mcqList.length > 0) {\r\n        let filteredCategories = mcqList.filter((item) => {\r\n            return (\r\n                    item.question &&\r\n                    item.question.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1\r\n                    ) ||\r\n                    (\r\n                        item.description &&\r\n                        item.description.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1);\r\n        });\r\n        if(filteredCategories && filteredCategories.length > 0) {\r\n            dispatch({\r\n                type: MCQ_SEARCH_SUCCESS,\r\n                payload: {\r\n                    filteredCategories,\r\n                    searchTerm\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            dispatch({\r\n                type: MCQ_SEARCH_SUCCESS,\r\n                payload: {\r\n                    filteredCategories: [],\r\n                    searchTerm\r\n                }\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        dispatch({\r\n            type: MCQ_SEARCH_SUCCESS,\r\n            payload: {\r\n                filteredCategories: [],\r\n                searchTerm\r\n            }\r\n        });\r\n    }\r\n }\r\n\r\n export const FetchCategories = () => dispatch => {\r\n    // dispatch({\r\n    //     type: FETCH_CATEGORIES_BEGIN\r\n    // });\r\n    let url = config.adminApiUrl + 'getAllCategories';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            console.log('categories fetched');\r\n            dispatch({\r\n                type: FETCH_CATEGORIES_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_CATEGORIES_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const FetchSkills = () => dispatch => {\r\n    let url = config.adminApiUrl + 'getAllSkills';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            console.log('skills fetched');\r\n            dispatch({\r\n                type: FETCH_SKILLS_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_SKILLS_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const SelectMcq = (mcqModel) => dispatch => {\r\n    dispatch({\r\n        type: SELECT_MCQ,\r\n        payload: mcqModel\r\n    })\r\n}\r\n\r\n\r\nexport const FetchMcqs = (isDeleted) => dispatch => {\r\n    dispatch({\r\n        type: FETCH_MCQ_BEGIN\r\n    });\r\n    let url = config.adminApiUrl + 'getAllMcqs';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            console.log('MCQ fetched');\r\n            let payload = {\r\n                data: res.data,\r\n                message: 'MCQs fetched successfully'\r\n            };\r\n            if(isDeleted) {\r\n                payload.message = 'MCQ deleted successfully';\r\n            }\r\n            dispatch({\r\n                type: FETCH_MCQ_SUCCESS,\r\n                payload: payload\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_MCQ_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n    // repository.getData(url)\r\n    //     .then((res) => {\r\n    //         console.log('MCQ fetched');\r\n    //         dispatch({\r\n    //             type: FETCH_MCQ_SUCCESS,\r\n    //             payload: res.data\r\n    //         });\r\n    //     })\r\n    //     .catch((err) => {\r\n    //         dispatch({\r\n    //             type: FETCH_MCQ_FAIL,\r\n    //             payload: err\r\n    //         });\r\n    //     });\r\n}\r\n\r\nexport const CloseSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: CLOSE_SNACKBAR\r\n    });\r\n}\r\nexport const OpenSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: OPEN_SNACKBAR\r\n    });\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AddMcqComponent from '../components/Mcq/AddMcq';\r\nimport {    AddMcq, FetchMcqs, UpdateMcq, FetchCategories, FetchSkills, \r\n            CloseSnackbar, CurrentMcqFieldChange, CurrentAnswerFieldChange,\r\n            OpenSnackbar, SelectMcq, AddAnswerChoice,\r\n            BeginSearch, SearchMcq } from '../actions/McqActions';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SnackbarComponent from '../components/lib/SnackbarComponent';\r\n// import McqList from '../components/Mcq/McqList';\r\n\r\nclass McqContainer extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        this.reload();\r\n    }\r\n\r\n    componentWillUpdate = () => {\r\n        if(this.props.success_message !== '') {\r\n            this.props.FetchCategories();\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (newprops, oldprops) => {\r\n        // console.log('mcq container: receiving props');\r\n        if(newprops.success_message !== '') {\r\n            setTimeout(() => {\r\n                this.props.history.push('/mcqs');\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    reload = () => {\r\n        this.props.FetchCategories();\r\n        this.props.FetchSkills();\r\n    }\r\n\r\n    onAddMcq = (model) => {\r\n        let { state } = this.props.location;\r\n        let editMode = false;\r\n        if(state && state.mcq) {\r\n            editMode = true;\r\n        }\r\n        this.props.AddMcq(model, editMode);\r\n    }\r\n\r\n    render = () => {\r\n        let { state } = this.props.location;\r\n        let mcq = null;\r\n        if(state && state.mcq) {\r\n            mcq = state.mcq;\r\n        }\r\n        console.log('mcq container render snack open: ' + this.props.snack_open);\r\n        return(\r\n            <Grid container spacing={16}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <AddMcqComponent \r\n                        onSubmit={ (model) => this.onAddMcq(model) }\r\n                        onAnswerAdd={ (model) => this.props.AddAnswerChoice(model, this.props.current_mcq) }\r\n                        // model={this.props.current_mcq}\r\n                        model={mcq ? mcq : this.props.current_mcq}\r\n                        categories={this.props.categories}\r\n                        skills={this.props.skills}\r\n                        currentAnswer={this.props.currentAnswer}\r\n                        editMode={mcq ? true : false}\r\n                        onFieldChange={ (val, field, model) => this.props.CurrentMcqFieldChange(val, field, model) } \r\n                        onAnswerFieldChange={ (val, field, model) => this.props.CurrentAnswerFieldChange(val, field, model) } \r\n                        history={this.props.history}\r\n                        />\r\n                    <SnackbarComponent \r\n                        openSnack={this.props.snack_open} handleClose={() => this.props.CloseSnackbar()} \r\n                        snackMessage={\"Data Saved Successfully!\"} \r\n                    /> \r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.mcqReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    AddMcq: (model, editMode) => dispatch(AddMcq(model, editMode)),\r\n    AddAnswerChoice: (model, mcqModel) => dispatch(AddAnswerChoice(model, mcqModel)),\r\n    UpdateMcq: (model) => dispatch(UpdateMcq(model)),\r\n    SelectMcq: (model) => dispatch(SelectMcq(model)),\r\n    FetchCategories: () => dispatch(FetchCategories()),\r\n    FetchSkills: () => dispatch(FetchSkills()),\r\n    FetchMcqs: () => dispatch(FetchMcqs()),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    BeginSearch: () => dispatch(BeginSearch()),\r\n    SearchMcq: (searchTerm, mcqList) => dispatch(SearchMcq(searchTerm, mcqList)),\r\n    CurrentMcqFieldChange: (val, field, model) => dispatch(CurrentMcqFieldChange(val, field, model)),\r\n    CurrentAnswerFieldChange: (val, field, model) => dispatch(CurrentAnswerFieldChange(val, field, model))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(McqContainer);","import React from 'react';\r\nimport CSVReader from 'react-csv-reader';\r\nimport { Typography, Button } from '@material-ui/core';\r\nimport repository from '../../repository';\r\nimport config from '../../config';\r\n\r\nclass BulkUpload extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: \"\",\r\n            finalJson: {}\r\n        };\r\n    }\r\n\r\n    handleFileLoaded = (content, fileName) => {\r\n        console.log('fileName', fileName);\r\n        console.log('content', content);\r\n        let matrixArray = content;\r\n        let finalJson = {\r\n            mcqs: []\r\n        };\r\n        let headers = [];\r\n        let firstRow = matrixArray[0];\r\n        firstRow.map((item, columnIndex) => {\r\n            headers.push(item);\r\n        });\r\n        if (!this.validateHeaders(headers)) {\r\n            console.log(\"invalid headers\");\r\n            this.setState({\r\n                message: \"Invalid Headers. Please check the file format and try again.\"\r\n            });\r\n            return;\r\n        }\r\n        if (!this.validCount(matrixArray)) {\r\n            console.log(\"Invalid number of records\");\r\n            this.setState({\r\n                message: `Invalid number of records. Min: ${config.minBulkCount}, Max: ${config.maxBulkCount}`\r\n            });\r\n            return;\r\n        }\r\n        matrixArray.map((itemArray, rowIndex) => {\r\n            if (rowIndex === 0) {\r\n\r\n            }\r\n            else {\r\n                let mcq = {};\r\n                mcq.choices = [];\r\n                let correctAnswer = \"\";\r\n                itemArray.map((colValue, colIndex) => {\r\n                    let filteredHeaders = config.validHeaders.filter((item) => {\r\n                        return item.name === headers[colIndex];\r\n                    });\r\n\r\n                    if(filteredHeaders && filteredHeaders.length > 0) {\r\n                        let prop = filteredHeaders[0].prop;\r\n                        if(prop.startsWith(\"choice\")) {\r\n                            if(colValue) {\r\n                                mcq.choices.push({\r\n                                    content: colValue,\r\n                                    isCorrect: correctAnswer \r\n                                });\r\n                            }\r\n                        }\r\n                        // else if(prop === \"correctAnswer\") {\r\n                        //     mcq['answer'] = colValue;\r\n                        // }\r\n                        else {\r\n                            mcq[prop] = colValue;\r\n                        }\r\n                        //mcq[filteredHeaders[0].prop] = colValue;\r\n                    }\r\n                    // mcq[headers[colIndex]] = colValue;\r\n                });\r\n                if(mcq.question && mcq.question !== '') {\r\n                    finalJson.mcqs.push(mcq);\r\n                }\r\n            }\r\n        });\r\n        this.setState({\r\n            finalJson: finalJson\r\n        });\r\n    }\r\n\r\n    onUpload = () => {\r\n        let { finalJson } = this.state;\r\n        let url = config.adminApiUrl + 'bulkMcq';\r\n        repository.saveData(url, finalJson)\r\n            .then((res) => {\r\n                this.setState({\r\n                    message: \"Successfully uploaded.\",\r\n                    finalJson: {}\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    message: \"Error in uploading file. Please try again.\"\r\n                });\r\n            })\r\n    }\r\n\r\n    validateHeaders = (headers) => {\r\n        \r\n        let isValid = true;\r\n        headers.map((item, idx) => {\r\n            let filteredHeaders = config.validHeaders.filter((vh) => {\r\n                return vh.name === item;\r\n            });\r\n            if(filteredHeaders && filteredHeaders.length > 0) {\r\n            } else {\r\n                isValid = false;\r\n            }\r\n        });\r\n        return isValid;\r\n    }\r\n    \r\n    validCount = (matrix) => {\r\n        let matrixLength = matrix.length;\r\n        if(matrixLength < config.minBulkCount || matrixLength > config.maxBulkCount) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleError = (error) => {\r\n        console.log('error on upload', error);\r\n    }\r\n\r\n    render = () => {\r\n        const { message, finalJson } = this.state;\r\n        return (\r\n            <div>\r\n                <CSVReader\r\n                    cssClass=\"csv-reader-input\"\r\n                    label=\"Select CSV with Multiple Choice Questions\"\r\n                    onFileLoaded={this.handleFileLoaded}\r\n                    onError={this.handleError}\r\n                    inputId=\"bulkmcq\"\r\n                    inputStyle={{color: 'red'}}\r\n                />\r\n                <br></br>\r\n                <Typography color=\"primary\" variant=\"subtitle1\">{message}</Typography>\r\n                {finalJson && finalJson.mcqs && finalJson.mcqs.length > 0 &&\r\n                <Button color=\"primary\" variant=\"contained\" \r\n                        size=\"large\"\r\n                        onClick={this.onUpload}\r\n                        >Upload</Button>\r\n                }\r\n                {message === \"Successfully uploaded.\" && \r\n                    <Button color=\"primary\" variant=\"contained\" \r\n                    size=\"small\"\r\n                    onClick={() => this.props.history.goBack()}\r\n                    >Go Back</Button>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BulkUpload;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AddCandidateComponent from '../components/Candidates/AddCandidate';\r\nimport {    AddCandidate, UpdateCandidate, FetchSkills,  \r\n            CloseSnackbar, CurrentCandidateFieldChange,\r\n            OpenSnackbar } from '../actions/CandidateActions';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SnackbarComponent from '../components/lib/SnackbarComponent';\r\n\r\nclass CandidateContainer extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        this.reload();\r\n    }\r\n\r\n    componentWillReceiveProps = (newprops, oldprops) => {\r\n        if(newprops.success_message !== '' && newprops.success_message !== undefined) {\r\n            console.log('newprops.success_message');\r\n            console.log(newprops.success_message);\r\n            this.props.OpenSnackbar();\r\n            setTimeout(() => {\r\n                this.props.history.push('/candidates');\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    reload = () => {\r\n        this.props.FetchSkills();\r\n    }\r\n\r\n    onAddCandidate = (model) => {\r\n        this.props.AddCandidate(model, this.props.editMode);\r\n    }\r\n\r\n    render = () => {\r\n        console.log('this.props.current_candidate');\r\n        console.log(this.props.snack_open);\r\n        return(\r\n            <Grid container spacing={16}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <AddCandidateComponent \r\n                        onSubmit={ (model) => this.onAddCandidate(model) }\r\n                        model={this.props.current_candidate}\r\n                        skills={this.props.skills}\r\n                        editMode={this.props.editMode}\r\n                        onFieldChange={ (val, field, model) => this.props.CurrentCandidateFieldChange(val, field, model) } \r\n                        />\r\n                    \r\n                <SnackbarComponent \r\n                    openSnack={this.props.snack_open} handleClose={() => this.props.CloseSnackbar()} \r\n                    snackMessage={\"Data Saved Successfully!\"} \r\n                    /> \r\n            </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.candidateReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    AddCandidate: (model, editMode) => dispatch(AddCandidate(model, editMode)),\r\n    UpdateCandidate: (model) => dispatch(UpdateCandidate(model)),\r\n    FetchSkills: () => dispatch(FetchSkills()),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    CurrentCandidateFieldChange: (val, field, model) => dispatch(CurrentCandidateFieldChange(val, field, model))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CandidateContainer);","import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader, DialogContent, Dialog, DialogTitle, DialogActions, Divider } from '@material-ui/core';\r\nimport { MenuItem, OutlinedInput, Select, InputLabel, IconButton } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport SelectCandidateExperience from '../Candidates/SelectCandidateExperience';\r\nimport LoadingComponent from '../lib/LoadingComponent';\r\nimport { Close  } from '@material-ui/icons';\r\n\r\nclass AddTest extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n        \r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        console.log('handle close');\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n      console.log('submit called');\r\n      this.props.onSubmit(this.props.model);\r\n      this.handleClose();\r\n    }\r\n    \r\n    onSubmitExperience = (years, months) => {\r\n        this.props.onFieldChange(years, 'experienceLevel', this.props.model)\r\n    }\r\n\r\n    render = () => {\r\n        let { model } = this.props;\r\n        console.log('current_test');\r\n        console.log(model);\r\n        return (\r\n            <div>\r\n            {!model && <LoadingComponent /> } \r\n            {model && \r\n            <Card>   \r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>Create Test</Button>\r\n                \r\n                <Dialog\r\n                fullWidth={true}\r\n                open={this.state.open}\r\n                onClose={this.handleClose}\r\n                >\r\n                <DialogTitle onClose={this.handleClose}>Create a New Test</DialogTitle>\r\n                <Divider />\r\n                <DialogContent style={{padding: '4%'}}>\r\n                    <form  noValidate autoComplete=\"off\">\r\n                            <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                <InputLabel htmlFor=\"outlined-skill-simple\">\r\n                                    Skill\r\n                                </InputLabel>\r\n                                <Select\r\n                                    onChange={(e) => this.props.onFieldChange(e.target.value, 'skill', this.props.model)}\r\n                                    value={model.skill}\r\n                                    input={\r\n                                    <OutlinedInput\r\n                                        labelWidth={65}\r\n                                        name=\"skill\"\r\n                                        id=\"outlined-skill-simple\"\r\n                                    />\r\n                                    }>\r\n                                    <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                    </MenuItem>\r\n                                    {this.props.skills && this.props.skills.length > 0 &&\r\n                                        this.props.skills.map((item, index) => {\r\n                                        return (\r\n                                            <MenuItem key={index} value={item.skill}>{item.skill}</MenuItem>\r\n                                        )\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                <TextField\r\n                                    id=\"outlined-testname\"\r\n                                    label=\"Test Name\"\r\n                                    className={styles.dense}\r\n                                    value={model.testName}\r\n                                    onChange={(e) => this.props.onFieldChange(e.target.value, 'testName', this.props.model)}\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                <TextField\r\n                                    id=\"outlined-email\"\r\n                                    label=\"Test Duration (mins)\"\r\n                                    className={styles.dense}\r\n                                    value={model.duration}\r\n                                    onChange={(e) => this.props.onFieldChange(e.target.value, 'duration', this.props.model)}\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                <SelectCandidateExperience \r\n                                        isTestAdmin={true}\r\n                                        onSubmitExperience={ (years, months) => this.onSubmitExperience(years, months) } />\r\n                            </FormControl>\r\n                    </form>\r\n                    </DialogContent>\r\n                    <Divider />\r\n                    <DialogActions>\r\n                        <Button variant=\"contained\" size=\"large\" color=\"primary\"\r\n                                        onClick={ () => this.handleSubmit(this.props.model)}>\r\n                            Create Test\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Card>}\r\n        \r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst styles = {\r\n    formControl: {\r\n        width: '80%',\r\n        marginBottom: '4%'\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n};\r\nexport default AddTest;","import axios from 'axios';\r\nimport config from '../config';\r\nimport repository from '../repository';\r\n\r\nimport { FETCH_SKILLS_BEGIN, FETCH_SKILLS_FAIL, FETCH_SKILLS_SUCCESS } from './SkillActions';\r\n\r\nexport const ADD_CANDIDATE_BEGIN = 'ADD_CANDIDATE_BEGIN';\r\nexport const ADD_CANDIDATE_SUCCESS = 'ADD_CANDIDATE_SUCCESS';\r\nexport const ADD_CANDIDATE_FAIL = 'ADD_CANDIDATE_FAIL';\r\nexport const CANDIDATE_SEARCH_BEGIN = 'CANDIDATE_SEARCH_BEGIN';\r\nexport const CANDIDATE_SEARCH_SUCCESS = 'CANDIDATE_SEARCH_SUCCESS';\r\nexport const UPDATE_CANDIDATE_BEGIN = 'UPDATE_CANDIDATE_BEGIN';\r\nexport const UPDATE_CANDIDATE_SUCCESS = 'UPDATE_CANDIDATE_SUCCESS';\r\nexport const UPDATE_CANDIDATE_FAIL = 'UPDATE_CANDIDATE_FAIL';\r\nexport const SELECT_CANDIDATE = 'SELECT_CANDIDATE';\r\nexport const CURRENT_CANDIDATE_FIELD_CHANGE = 'CURRENT_CANDIDATE_FIELD_CHANGE';\r\nexport const CURRENT_CANDIDATE_FIELD_CHANGE_END = 'CURRENT_CANDIDATE_FIELD_CHANGE_END';\r\nexport const CURRENT_ANSWER_FIELD_CHANGE = 'CURRENT_ANSWER_FIELD_CHANGE';\r\nexport const CURRENT_ANSWER_FIELD_CHANGE_END = 'CURRENT_ANSWER_FIELD_CHANGE_END';\r\nexport const CHOICE_ADDED_TO_CANDIDATE = 'CHOICE_ADDED_TO_CANDIDATE';\r\nexport const FETCH_CANDIDATE_BEGIN = 'FETCH_CANDIDATE_BEGIN';\r\nexport const FETCH_CANDIDATE_SUCCESS = 'FETCH_CANDIDATE_SUCCESS';\r\nexport const FETCH_CANDIDATE_FAIL = 'FETCH_CANDIDATE_FAIL';\r\n// export const FETCH_SKILLS_SUCCESS = 'FETCH_SKILLS_SUCCESS';\r\n// export const FETCH_SKILLS_FAIL = 'FETCH_SKILLS_FAIL';\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\r\nexport const OPEN_SNACKBAR = 'OPEN_SNACKBAR';\r\n\r\nexport const CurrentCandidateFieldChange = (val, field, model) => dispatch => {\r\n    console.log('CANDIDATE field change: ' + field);\r\n    console.log(val);\r\n    switch(field)\r\n    {\r\n        case 'fullName':\r\n        {\r\n            model.fullName = val;\r\n            dispatch({\r\n                type: CURRENT_CANDIDATE_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'email':\r\n        {\r\n            model.email = val;\r\n            dispatch({\r\n                type: CURRENT_CANDIDATE_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'contactno':\r\n        {\r\n            model.contactno = val;\r\n            dispatch({\r\n                type: CURRENT_CANDIDATE_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'experienceYears':\r\n        {\r\n            model.experienceYears = val;\r\n            dispatch({\r\n                type: CURRENT_CANDIDATE_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'experienceMonths':\r\n        {\r\n            model.experienceMonths = val;\r\n            dispatch({\r\n                type: CURRENT_CANDIDATE_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        default:\r\n        {\r\n        }\r\n    }\r\n    dispatch({\r\n        type: CURRENT_CANDIDATE_FIELD_CHANGE_END\r\n    });\r\n}\r\n\r\nexport const AddCandidate = (candidateModel, editMode) => dispatch => {\r\n    dispatch({\r\n        type: ADD_CANDIDATE_BEGIN\r\n    });\r\n    let url = config.adminApiUrl + 'candidate';\r\n    console.log('action model');\r\n    console.log(candidateModel);\r\n    // if(!editMode) {\r\n        repository.saveData(url, candidateModel)\r\n            .then((res) => {\r\n                console.log('CANDIDATE saved: ' + res);\r\n                dispatch({\r\n                    type: ADD_CANDIDATE_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({\r\n                    type: ADD_CANDIDATE_FAIL,\r\n                    payload: err\r\n                });\r\n            });\r\n}\r\n\r\nexport const BeginSearch = () => dispatch => {\r\n    dispatch({\r\n        type: CANDIDATE_SEARCH_BEGIN\r\n    });\r\n}\r\n\r\n export const SearchCandidate = (searchTerm, candidateList) => dispatch => {\r\n//     console.log(`search term: ${searchTerm}, list length: ${CANDIDATEList ? CANDIDATEList.length : 0}`);\r\n//     if(CANDIDATEList && CANDIDATEList.length > 0) {\r\n//         let filteredCANDIDATES = CANDIDATEList.filter((item) => {\r\n//             return (\r\n//                     item.title &&\r\n//                     item.title.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1\r\n//                     ) ||\r\n//                     (\r\n//                         item.description &&\r\n//                         item.description.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1);\r\n//         });\r\n//         if(filteredCANDIDATES && filteredCANDIDATES.length > 0) {\r\n//             dispatch({\r\n//                 type: CANDIDATE_SEARCH_SUCCESS,\r\n//                 payload: {\r\n//                     filteredCANDIDATES,\r\n//                     searchTerm\r\n//                 }\r\n//             });\r\n//         }\r\n//         else {\r\n//             dispatch({\r\n//                 type: CANDIDATE_SEARCH_SUCCESS,\r\n//                 payload: {\r\n//                     filteredCANDIDATES: [],\r\n//                     searchTerm\r\n//                 }\r\n//             });\r\n//         }\r\n//     }\r\n//     else {\r\n//         dispatch({\r\n//             type: CANDIDATE_SEARCH_SUCCESS,\r\n//             payload: {\r\n//                 filteredCANDIDATES: [],\r\n//                 searchTerm\r\n//             }\r\n//         });\r\n//     }\r\n }\r\n\r\n export const FetchCandidates = () => dispatch => {\r\n    // dispatch({\r\n    //     type: FETCH_CANDIDATES_BEGIN\r\n    // });\r\n    let url = config.adminApiUrl + 'getAllCandidates';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            console.log('CANDIDATES fetched');\r\n            dispatch({\r\n                type: FETCH_CANDIDATE_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_CANDIDATE_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const FetchSkills = () => dispatch => {\r\n    dispatch({\r\n        type: FETCH_SKILLS_BEGIN\r\n    });\r\n    let url = config.adminApiUrl + 'getAllSkills';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            console.log('skills fetched');\r\n            dispatch({\r\n                type: FETCH_SKILLS_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_SKILLS_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const SelectCandidate = (candidateModel) => dispatch => {\r\n    dispatch({\r\n        type: SELECT_CANDIDATE,\r\n        payload: candidateModel\r\n    })\r\n}\r\n\r\nexport const UpdateCandidate = (candidateModel) => dispatch => {\r\n    dispatch({\r\n        type: UPDATE_CANDIDATE_BEGIN\r\n    });\r\n    let url = config.adminApiUrl + 'candidate';\r\n    repository.updateData(url, candidateModel)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: UPDATE_CANDIDATE_SUCCESS\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: UPDATE_CANDIDATE_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const CloseSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: CLOSE_SNACKBAR\r\n    });\r\n}\r\nexport const OpenSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: OPEN_SNACKBAR\r\n    });\r\n}\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { PersonAdd } from '@material-ui/icons';\r\nimport LoadingComponent from '../lib/LoadingComponent';\r\nimport { Typography } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst TestList = (props) => {\r\n    let { tests } = props;\r\n    return (\r\n        <div>\r\n        {!tests && <LoadingComponent /> }\r\n        {tests && tests.length === 0 && <Typography align=\"center\" variant=\"subtitle1\">No Tests Found </Typography> }\r\n        {tests && tests.length > 0 && \r\n        <Table>\r\n            <TableHead>\r\n            <TableRow>\r\n                <CustomTableCell>Test</CustomTableCell>\r\n                <CustomTableCell align=\"left\">Status</CustomTableCell>\r\n                <CustomTableCell align=\"right\">Not Attempted</CustomTableCell>\r\n                <CustomTableCell align=\"right\">Completed</CustomTableCell>\r\n                <CustomTableCell align=\"right\">To Evaluate</CustomTableCell>\r\n                <CustomTableCell align=\"right\"></CustomTableCell>\r\n            </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n            {tests.map((test, index) => (\r\n                <TableRow key={index}>\r\n                <CustomTableCell component=\"th\" scope=\"row\">\r\n                    <Link to={ {pathname: \"/testConsole\", state: { testId: test.$loki } }}>\r\n                        {test.testName}\r\n                    </Link>\r\n                </CustomTableCell>\r\n                <CustomTableCell align=\"left\"><Typography variant=\"subtitle2\" >{test.status.toUpperCase()}</Typography></CustomTableCell>\r\n                <CustomTableCell align=\"right\">{test.pendingAttempt}</CustomTableCell>\r\n                <CustomTableCell align=\"right\">{test.completed}</CustomTableCell>\r\n                <CustomTableCell align=\"right\">{test.toEvaluate}</CustomTableCell>\r\n                <CustomTableCell align=\"right\" scope=\"row\" component=\"th\">\r\n                    <Link to={ {pathname: \"/inviteConsole\", state: { testId: test.$loki } }}>\r\n                        <PersonAdd />\r\n                    </Link>\r\n                </CustomTableCell>\r\n                </TableRow>\r\n            ))}\r\n            </TableBody>\r\n        </Table>\r\n        }\r\n        </div>\r\n    );\r\n}\r\nconst CustomTableCell = withStyles(theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nexport default TestList;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AddTestComponent from '../components/AdminTest/AddTest';\r\nimport {    AddTest, UpdateTest, FetchSkills, FetchTests,  \r\n            CloseSnackbar, CurrentTestFieldChange,\r\n            OpenSnackbar } from '../actions/AdminTestActions';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SnackbarComponent from '../components/lib/SnackbarComponent';\r\nimport { Button, Card, CardHeader } from '@material-ui/core';\r\nimport TestList from '../components/AdminTest/TestList';\r\n\r\nclass AdminTestContainer extends React.Component {\r\n    \r\n    componentDidMount = () => {\r\n        this.reload();\r\n    }\r\n\r\n    componentWillReceiveProps = (newprops, oldprops) => {\r\n        console.log('adm in test container: component will receive');\r\n        // if(newprops.success_message !== '' && newprops.success_message !== undefined &&\r\n        //     newprops.success_message !== oldprops.success_message) {\r\n        if(newprops.snack_open) {\r\n            console.log('snack_open: component will update');\r\n            // this.props.OpenSnackbar();\r\n            // console.log('added successfully, testId: ');\r\n            // console.log(newprops.current_test.$loki);\r\n            // this.props.history.push({\r\n            //     pathName:  '/testConsole',\r\n            //     state: {\r\n            //         testId: newprops.current_test.$loki\r\n            //     }\r\n            // });\r\n        }\r\n    }\r\n\r\n    componentWillUpdate = () => {\r\n        console.log('adm in test container: component will update', this.props);\r\n        if(this.props.error) {\r\n                console.log('error status 401 - 11');\r\n                if(this.props.error.errorStatus === '401') {\r\n                console.log('error status 401 - 22');\r\n                this.props.history.push({\r\n                    pathname: '/dashboard'\r\n                });\r\n            }\r\n        }\r\n        if(this.props.snack_open) {\r\n            console.log('snack_open: component will update');\r\n            // this.props.history.push('/testConsole');\r\n            this.props.history.push({\r\n                pathname:  '/testConsole',\r\n                state: {\r\n                    testId: this.props.current_test.$loki\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    reload = () => {\r\n        // this.props.FetchSkills();\r\n        this.props.FetchTests();\r\n    }\r\n\r\n    onAddTest = (model) => {\r\n        this.props.AddTest(model, this.props.editMode)\r\n    }\r\n\r\n    render = () => {\r\n        console.log('render admin test container');\r\n        return(\r\n            <Grid container spacing={16}>\r\n                <Grid item xs={12} sm={12}>\r\n                <Card>\r\n                    <CardHeader action={\r\n                    <AddTestComponent \r\n                        onSubmit={ (model) => this.onAddTest(model) }\r\n                        model={this.props.current_test}\r\n                        skills={this.props.skills}\r\n                        editMode={this.props.editMode}\r\n                        onFieldChange={ (val, field, model) => this.props.CurrentTestFieldChange(val, field, model) } \r\n                        />\r\n                    }\r\n                    title=\"Tests\" />\r\n                <TestList tests={this.props.tests} />\r\n                </Card>\r\n                <SnackbarComponent \r\n                    openSnack={this.props.snack_open} handleClose={() => this.props.CloseSnackbar()} \r\n                    snackMessage={\"Data Saved Successfully!\"} \r\n                    /> \r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.adminTestReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    AddTest: (model, editMode) => dispatch(AddTest(model, editMode)),\r\n    UpdateTest: (model) => dispatch(UpdateTest(model)),\r\n    FetchSkills: () => dispatch(FetchSkills()),\r\n    FetchTests: () => dispatch(FetchTests()),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    CurrentTestFieldChange: (val, field, model) => dispatch(CurrentTestFieldChange(val, field, model))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminTestContainer);","import axios from 'axios';\r\nimport config from '../config';\r\nimport repository from '../repository';\r\nimport { FETCH_CATEGORIES_SUCCESS, FETCH_CATEGORIES_FAIL } from './CategoryActions';\r\n\r\nexport const ADD_TEST_BEGIN = 'ADD_TEST_BEGIN';\r\nexport const ADD_TEST_SUCCESS = 'ADD_TEST_SUCCESS';\r\nexport const ADD_TEST_FAIL = 'ADD_TEST_FAIL';\r\nexport const TEST_SEARCH_BEGIN = 'TEST_SEARCH_BEGIN';\r\nexport const TEST_SEARCH_SUCCESS = 'TEST_SEARCH_SUCCESS';\r\nexport const UPDATE_TEST_BEGIN = 'UPDATE_TEST_BEGIN';\r\nexport const UPDATE_TEST_SUCCESS = 'UPDATE_TEST_SUCCESS';\r\nexport const UPDATE_TEST_FAIL = 'UPDATE_TEST_FAIL';\r\nexport const SELECT_TEST = 'SELECT_TEST';\r\nexport const CURRENT_TEST_FIELD_CHANGE = 'CURRENT_TEST_FIELD_CHANGE';\r\nexport const CURRENT_TEST_FIELD_CHANGE_END = 'CURRENT_TEST_FIELD_CHANGE_END';\r\nexport const CURRENT_ANSWER_FIELD_CHANGE = 'CURRENT_ANSWER_FIELD_CHANGE';\r\nexport const CURRENT_ANSWER_FIELD_CHANGE_END = 'CURRENT_ANSWER_FIELD_CHANGE_END';\r\nexport const CHOICE_ADDED_TO_TEST = 'CHOICE_ADDED_TO_TEST';\r\nexport const FETCH_TEST_BEGIN = 'FETCH_TEST_BEGIN';\r\nexport const FETCH_TESTS_SUCCESS = 'FETCH_TESTS_SUCCESS';\r\nexport const FETCH_TESTS_FAIL = 'FETCH_TESTS_FAIL';\r\nexport const FETCH_SKILLS_SUCCESS = 'FETCH_SKILLS_SUCCESS';\r\nexport const FETCH_SKILLS_FAIL = 'FETCH_SKILLS_FAIL';\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\r\nexport const OPEN_SNACKBAR = 'OPEN_SNACKBAR';\r\n\r\nexport const CurrentTestFieldChange = (val, field, model) => dispatch => {\r\n    console.log('test field change: ' + field);\r\n    console.log(val);\r\n    switch(field)\r\n    {\r\n        case 'testName':\r\n        {\r\n            model.testName = val;\r\n            dispatch({\r\n                type: CURRENT_TEST_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'skill':\r\n        {\r\n            model.skill = val;\r\n            dispatch({\r\n                type: CURRENT_TEST_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'duration':\r\n        {\r\n            model.duration = val;\r\n            dispatch({\r\n                type: CURRENT_TEST_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'experienceYears':\r\n        {\r\n            model.experienceYears = val;\r\n            dispatch({\r\n                type: CURRENT_TEST_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        default:\r\n        {\r\n        }\r\n    }\r\n    dispatch({\r\n        type: CURRENT_TEST_FIELD_CHANGE_END\r\n    });\r\n}\r\n\r\nexport const CurrentAnswerFieldChange = (val, field, model) => dispatch => {\r\n    console.log('test answer field change: ' + field);\r\n    console.log(val);\r\n    switch(field)\r\n    {\r\n        case 'content':\r\n        {\r\n            model.content = val;\r\n            dispatch({\r\n                type: CURRENT_ANSWER_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'isCorrect':\r\n        {\r\n            model.isCorrect = val;\r\n            dispatch({\r\n                type: CURRENT_ANSWER_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        default:\r\n        {\r\n        }\r\n    }\r\n    dispatch({\r\n        type: CURRENT_ANSWER_FIELD_CHANGE_END\r\n    });\r\n}\r\n\r\nexport const AddAnswerChoice = (answerModel, testModel) => dispatch => {\r\n    if(testModel) {\r\n        if(!testModel.choices) {\r\n            testModel.choices = [];\r\n        }\r\n        testModel.choices.push(answerModel);\r\n    }\r\n    dispatch({\r\n        type: CHOICE_ADDED_TO_TEST,\r\n        payload: testModel\r\n    })\r\n}\r\n\r\nexport const AddTest = (testModel, editMode) => dispatch => {\r\n    dispatch({\r\n        type: ADD_TEST_BEGIN\r\n    });\r\n    let url = config.adminApiUrl + 'test';\r\n    console.log('action model');\r\n    console.log(testModel);\r\n    testModel.status = 'draft';\r\n    repository.saveData(url, testModel)\r\n        .then((res) => {\r\n            console.log('test saved: ' + res);\r\n            dispatch({\r\n                type: ADD_TEST_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: ADD_TEST_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n    \r\n}\r\n\r\n export const FetchCategories = () => dispatch => {\r\n    // dispatch({\r\n    //     type: FETCH_CATEGORIES_BEGIN\r\n    // });\r\n    let url = config.adminApiUrl + 'getAllCategories';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            console.log('categories fetched');\r\n            dispatch({\r\n                type: FETCH_CATEGORIES_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_CATEGORIES_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const FetchSkills = () => dispatch => {\r\n    let url = config.adminApiUrl + 'getAllSkills';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            console.log('skills fetched');\r\n            dispatch({\r\n                type: FETCH_SKILLS_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_SKILLS_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\n// export const SelectMcq = (testModel) => dispatch => {\r\n//     dispatch({\r\n//         type: SELECT_TEST,\r\n//         payload: testModel\r\n//     })\r\n// }\r\n\r\nexport const UpdateTest = (testModel) => dispatch => {\r\n    dispatch({\r\n        type: UPDATE_TEST_BEGIN\r\n    });\r\n    let url = config.adminApiUrl + 'test';\r\n    repository.updateData(url, testModel)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: UPDATE_TEST_SUCCESS\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: UPDATE_TEST_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const FetchTests = () => dispatch => {\r\n    dispatch({\r\n        type: FETCH_TEST_BEGIN\r\n    });\r\n    let url = config.adminApiUrl + 'getAllTests';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            console.log('promise resolved');\r\n            dispatch({\r\n                type: FETCH_TESTS_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log('promise rejected');\r\n            dispatch({\r\n                type: FETCH_TESTS_FAIL,\r\n                payload: { errorStatus: '401' }\r\n            });\r\n        });\r\n    // let accessToken = localStorage.getItem(\"auth-token\");\r\n    // let options = {\r\n    //     headers: {\r\n    //       \"x-access-token\": accessToken\r\n    //     }\r\n    // };\r\n    // let url = config.adminApiUrl + 'getAllTests';\r\n    // repository.getData(url, options)\r\n    //     .then((res) => {\r\n    //         console.log('TEST fetched');\r\n    //         dispatch({\r\n    //             type: FETCH_TESTS_SUCCESS,\r\n    //             payload: res.data\r\n    //         });\r\n    //     })\r\n    //     .catch((err) => {\r\n    //         dispatch({\r\n    //             type: FETCH_TESTS_FAIL,\r\n    //             payload: err\r\n    //         });\r\n    //     });\r\n}\r\n\r\nexport const CloseSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: CLOSE_SNACKBAR\r\n    });\r\n}\r\nexport const OpenSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: OPEN_SNACKBAR\r\n    });\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {    FetchMcqs, DeleteMcq,\r\n            CloseSnackbar,\r\n            OpenSnackbar, \r\n            BeginSearch, EndSearch, SearchMcq } from '../../actions/McqActions';\r\nimport { Link } from 'react-router-dom';\r\nimport { FormControl, Grid, Card, CardHeader, Button, CardContent, \r\n         List, ListItem, ListItemText, ListItemSecondaryAction,\r\n         Checkbox, TextField } from '@material-ui/core';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport AnswerOptions from './AnswerOptions';\r\nimport McqItem from '../../Containers/TestConsole/McqItem';\r\nimport SnackbarComponent from '../lib/SnackbarComponent';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { Add, Search, Cancel } from '@material-ui/icons';\r\n\r\nclass McqList extends Component {\r\n\r\n    constructor (props) {\r\n       super(props);\r\n       this.state = {\r\n          selectedMcqs: []\r\n       }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.FetchMcqs();\r\n    }\r\n\r\n    onAddMcqToTest = (mcqId) => {\r\n        this.props.AddMcqToTest(mcqId);\r\n    }\r\n\r\n    onEditClick = (mcq) => {\r\n        this.props.history.push({\r\n            pathname:  '/addMcq',\r\n            state: {\r\n                mcq: mcq\r\n            }\r\n        });\r\n    }\r\n\r\n    onDeleteMcq = (mcq) => {\r\n        this.props.DeleteMcq(mcq);\r\n        // this.props.FetchMcqs();\r\n    }\r\n\r\n    bulkDeleteMcq = () => {\r\n        let { selectedMcqs } = this.state;\r\n        if(selectedMcqs && selectedMcqs.length > 0) {\r\n            console.log('deleting mcqs', selectedMcqs);\r\n            selectedMcqs.map((item, index) => {\r\n                this.onDeleteMcq(item);\r\n            });\r\n        }        \r\n    }\r\n\r\n    markForDeletion = (mcq) => {\r\n        let { selectedMcqs } = this.state;\r\n        let filteredMcqs = selectedMcqs.filter((item)=>{\r\n            return item.id === mcq.id;\r\n        });\r\n        if(filteredMcqs && filteredMcqs.length > 0) {\r\n        } else {\r\n            selectedMcqs.push(mcq);\r\n            this.setState({selectedMcqs});\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        let { mcqs, search_term, filteredCategories, search_enabled } = this.props;\r\n        let { selectedMcqs } = this.state;\r\n        let mcqToDisplay = filteredCategories ? filteredCategories : mcqs;\r\n        return (\r\n            <Card>\r\n                <CardHeader\r\n                    action={\r\n                        <div>\r\n                            {selectedMcqs && selectedMcqs.length > 0 &&\r\n                            <Button color=\"primary\" onClick={() => this.bulkDeleteMcq()} size=\"small\">\r\n                                Delete\r\n                            </Button>}\r\n                            {!search_enabled &&\r\n                            <Button color=\"primary\" onClick={() => this.props.BeginSearch()} size=\"small\">\r\n                                <Search />\r\n                            </Button>}\r\n                            <Link to=\"/bulkMcq\" >\r\n                                <Button variant=\"contained\" color=\"primary\">Bulk Upload Mcq</Button>\r\n                            </Link>\r\n                        </div>\r\n                    }\r\n                    title=\"MCQ List\"\r\n                    subheader=\"Multiple Choice Questions\">\r\n                </CardHeader>\r\n                <CardContent>\r\n                    {search_enabled && \r\n                    <div>\r\n                        <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                        <TextField\r\n                                            id=\"outlined-name\"\r\n                                            label=\"Search\"\r\n                                            value={search_term}\r\n                                            className={styles.dense}\r\n                                            onChange={(e) => this.props.SearchMcq(e.target.value, mcqs)}\r\n                                            margin=\"normal\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                        </FormControl>\r\n                        <FormControl variant=\"outlined\" style={{width: '10%', marginTop: '2%'}}>\r\n                            <Button  color=\"primary\" size=\"small\" onClick={() => this.props.EndSearch()} >\r\n                                Hide Search\r\n                            </Button>\r\n                        </FormControl>\r\n                    </div>\r\n                    }\r\n                    {mcqToDisplay && \r\n                                    <Typography variant=\"caption\">\r\n                                        {mcqToDisplay.length} MCQs found\r\n                                    </Typography>}\r\n                    <Link to=\"/addMcq\" >\r\n                        <Fab color=\"primary\" aria-label=\"Add\" style={{right: 20, position: 'fixed', bottom: 20}}>\r\n                            <Add />\r\n                        </Fab>\r\n                    </Link>\r\n                    <List dense={true}>\r\n                        { mcqToDisplay && mcqToDisplay.length > 0 &&\r\n                          mcqToDisplay.map((item, index) => {\r\n                            return (\r\n                                <McqItem    mcq={item} key={index}\r\n                                            onEditClick={(mcq) => this.onEditClick(mcq)}\r\n                                            onDeleteMcq={() => this.onDeleteMcq(item)}\r\n                                            markForDeletion={(mcq) => this.markForDeletion(mcq)}\r\n                                            isSelectable={false} \r\n                                            isEditable={true} />\r\n                            )\r\n                        } )}\r\n                    </List>\r\n                    <SnackbarComponent \r\n                        openSnack={this.props.snack_open} handleClose={() => this.props.CloseSnackbar()} \r\n                        snackMessage={this.props.success_message}\r\n                        />\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state.mcqReducer,\r\n    // ...state.testConsoleReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    FetchMcqs: () => dispatch(FetchMcqs()),\r\n    DeleteMcq: (mcq) => dispatch(DeleteMcq(mcq)),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    BeginSearch: () => dispatch(BeginSearch()),\r\n    EndSearch: () => dispatch(EndSearch()),\r\n    SearchMcq: (searchTerm, mcqList) => dispatch(SearchMcq(searchTerm, mcqList)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(McqList);\r\nconst styles = {\r\n    formControl: {\r\n        width: '70%'\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {    FetchCandidates, \r\n            CloseSnackbar,\r\n            OpenSnackbar, \r\n            BeginSearch, SearchCandidate } from '../../actions/CandidateActions';\r\nimport { Link } from 'react-router-dom';\r\nimport { FormControl, Grid, Card, CardHeader, Button, CardContent, List, ListItem } from '@material-ui/core';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nclass CandidateList extends Component {\r\n\r\n    componentDidMount = () => {\r\n        this.props.FetchCandidates();\r\n    }\r\n\r\n    render = () => {\r\n        let { candidates } = this.props;\r\n        return (\r\n            <Card>\r\n                <CardHeader\r\n                    action={\r\n                        <Link to=\"/addCandidate\" >\r\n                            <Button variant=\"contained\" color=\"primary\">Add Candidate</Button>\r\n                        </Link>\r\n                    }\r\n                    title=\"Candidate List\"\r\n                    subheader={\"For current recruiter\"}>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <List>\r\n                        { candidates && candidates.length > 0 &&\r\n                          candidates.map((item, index) => {\r\n                            return (\r\n                                <ListItem divider={false} key={index} >\r\n                                    <ExpansionPanel style={{width:'100%'}}>\r\n                                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                                        <Grid container spacing={16}>\r\n                                            <Grid item xs={6} sm={6}>\r\n                                                <Typography variant=\"h6\">{item.fullName}</Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={3} sm={3}>\r\n                                                <Typography variant=\"subtitle1\" >{item.email}</Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={2} sm={2}>\r\n                                                <Typography variant=\"subtitle1\" >\r\n                                                    {item.experienceYears} years {item.experienceMonths} months\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                            <div style={styles.formControl}>\r\n                                                {item.description && \r\n                                                    <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                                        <Typography variant=\"subtitle1\">\r\n                                                            No description\r\n                                                        </Typography>\r\n                                                    </FormControl>\r\n                                                }\r\n                                            </div>\r\n                                        </ExpansionPanelDetails>\r\n                                        <ExpansionPanelActions>\r\n                                        <Button variant=\"outlined\" size=\"small\" color=\"primary\" >\r\n                                            Edit\r\n                                        </Button>\r\n                                        </ExpansionPanelActions>\r\n                                    </ExpansionPanel>\r\n                                </ListItem>\r\n                            )\r\n                        } )}\r\n                    </List>\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state.candidateReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    FetchCandidates: () => dispatch(FetchCandidates()),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    BeginSearch: () => dispatch(BeginSearch()),\r\n    SearchCandidate: (searchTerm, candidateList) => dispatch(SearchCandidate(searchTerm, candidateList)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CandidateList);\r\nconst styles = {\r\n    formControl: {\r\n        width: '70%'\r\n    }\r\n}","import React from 'react';\r\nimport { FormControl,\r\n         TextField, \r\n         Button,\r\n         Typography,\r\n         Divider} from '@material-ui/core';\r\n// import { EditorState, convertToRaw, ContentState } from 'draft-js';\r\n// import { Editor } from 'react-draft-wysiwyg';\r\n// import draftToHtml from 'draftjs-to-html';\r\n// import htmlToDraft from 'html-to-draftjs';\r\nimport '../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport 'draft-js/dist/Draft.css';\r\n\r\n\r\nconst SendTestInvite = (props) => {\r\n    let { currentTest, inviteInfo } = props;\r\n    \r\n    return (\r\n        // <Card>\r\n        //     <CardContent>\r\n        <div>\r\n                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                    <TextField\r\n                        id=\"outlined-name\"\r\n                        label=\"To\"\r\n                        value={inviteInfo.emailTo}\r\n                        onChange={(e) => props.onFieldChange(e.target.value, 'emailTo')}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        helperText=\"e.g. john@hotmail.com (to invite multiple candidates, enter multiple email ids separated by ';')\"\r\n                    />\r\n                </FormControl>\r\n                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                    <TextField\r\n                        id=\"outlined-name\"\r\n                        label=\"Subject\"\r\n                        value={inviteInfo.emailSubject}\r\n                        onChange={(e) => props.onFieldChange(e.target.value, 'emailSubject')}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                </FormControl>\r\n                    <Typography align=\"center\" variant=\"subtitle1\">\r\n                    You have been invited to attend the {currentTest.testName} challenge. We wish you all the best!\r\n                    </Typography>\r\n\r\n                    <div style={styles.margintop}>\r\n                    <Typography variant=\"button\" align=\"center\">\r\n                    Duration: {currentTest.duration} mins\r\n                    <br></br><br></br>\r\n                    <a href=\"#\" style={styles.margintop}>\r\n                    <Button variant=\"contained\" align=\"center\" size=\"large\" color=\"secondary\">\r\n                                Start Challenge\r\n                    </Button>\r\n                    </a>\r\n                    </Typography>\r\n                    </div>\r\n                    <Divider style={styles.margintop}/>\r\n                    <Typography gutterBottom align=\"center\" variant=\"subtitle2\" style={styles.margintop}>\r\n                        For any technical queries, please refer to <a href=\"#\">FAQ</a> or email us at support@techassessment.com\r\n                    </Typography>\r\n        </div>\r\n    );\r\n}\r\nexport default SendTestInvite;\r\nconst styles ={\r\n    container: {\r\n        marginLeft: '15%'\r\n    },\r\n    formControl: {\r\n        width: '70%',\r\n        marginBottom: '1%',\r\n        marginLeft: '15%'\r\n    },\r\n    margintop: {\r\n        marginTop: '2%',\r\n        // marginLeft: '30%'\r\n    },\r\n    duration: {\r\n        marginTop: '4%',\r\n    },\r\n    editorControl: {\r\n        height: '100%'\r\n        // width: '70%',\r\n        // padding: '1%',\r\n        // borderRadius: '5px',\r\n        // border: '1px solid #ccc'\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {    FetchTest, AddMcqToTest, PublishTest, CloseSnackbar,\r\n            OpenSnackbar } from '../../actions/TestConsoleActions';            \r\nimport {    SendInvite,\r\n            InviteInfoFieldChange } from '../../actions/InviteConsoleActions';            \r\nimport Grid from '@material-ui/core/Grid';\r\nimport SnackbarComponent from '../../components/lib/SnackbarComponent';\r\nimport { Button, Card, CardHeader, CardContent, CardActions } from '@material-ui/core';\r\nimport LoadingComponent from '../../components/lib/LoadingComponent';\r\nimport SendTestInvite from './SendTestInvite';\r\nimport { KeyboardBackspace } from '@material-ui/icons';\r\n\r\nclass InviteConsoleContainer extends React.Component {\r\n    \r\n    componentDidMount = () => {\r\n        this.reload();\r\n    }\r\n\r\n    componentWillReceiveProps = (newprops, oldprops) => {\r\n        if(newprops.success_message !== '' && newprops.success_message !== undefined) {\r\n            // this.props.OpenSnackbar();\r\n        }\r\n        if(newprops.inviteAdded === 'yes') {\r\n            this.props.history.push({\r\n                pathname:  '/tests'\r\n            });\r\n        }\r\n    }\r\n\r\n    reload = () => {\r\n        // this.props.FetchSkills();\r\n        let { state } = this.props.location;\r\n        console.log('reload: location state');\r\n        console.log(state);\r\n        if(state){\r\n            this.props.FetchTest(state.testId);\r\n        }\r\n    }\r\n\r\n    onSendInvite = () => {\r\n        let { current_test, inviteInfo } = this.props;\r\n        this.props.SendInvite(current_test, inviteInfo);\r\n        this.props.history.push({\r\n            pathname: '/testConsole', state: { testId: current_test.testId }\r\n        })\r\n    }\r\n\r\n    render = () => {\r\n        let { current_test, inviteInfo, inviteAdded } = this.props;\r\n        console.log('invite container: render');\r\n        console.log(current_test);\r\n        if(current_test && current_test.selectedMcqs) {\r\n            console.log(current_test.selectedMcqs);\r\n        }\r\n        return(\r\n            <Grid container spacing={16}>\r\n                <Grid item xs={12} sm={12} md={8}>\r\n                {!current_test && <LoadingComponent />}\r\n                {current_test &&\r\n                <Card>\r\n                    <CardHeader \r\n                        action={\r\n                        <Button color=\"primary\" size=\"large\" variant=\"outlined\"\r\n                                onClick={() => this.props.history.goBack() }>\r\n                            <KeyboardBackspace />\r\n                        </Button>\r\n                        }\r\n                        title=\"Send Test Invites\"\r\n                        subheader={current_test.testName}\r\n                    />\r\n                    <CardContent>\r\n                        <SendTestInvite\r\n                            // onSendInvite={(testInfo, inviteInfo) => this.onSendInvite(testInfo, inviteInfo) }\r\n                            selectedMcqs={current_test.selectedMcqs} \r\n                            currentTest={current_test}\r\n                            inviteInfo={inviteInfo}\r\n                            onFieldChange={(val, field) => this.props.InviteInfoFieldChange(val, field, inviteInfo)}\r\n                        />\r\n                    </CardContent>\r\n                    <CardActions style={styles.actionButton}>\r\n                        <Button variant=\"contained\" size=\"large\" color=\"primary\"\r\n                                onClick={() => this.onSendInvite() }>\r\n                            Send Invite\r\n                        </Button>\r\n                    </CardActions>\r\n                </Card>\r\n                }\r\n                <SnackbarComponent \r\n                    openSnack={this.props.snack_open} handleClose={() => this.props.CloseSnackbar()} \r\n                    snackMessage={\"Data Saved Successfully!\"} \r\n                /> \r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.inviteConsoleReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    // AddTest: (model, editMode) => dispatch(AddTest(model, editMode)),\r\n    // UpdateTest: (model) => dispatch(UpdateTest(model)),\r\n    // FetchSkills: () => dispatch(FetchSkills()),\r\n    SendInvite: (inviteInfo, testModel) => dispatch(SendInvite(inviteInfo, testModel)),\r\n    // PublishTest: (testModel) => dispatch(PublishTest(testModel)),\r\n    FetchTest: (testId) => dispatch(FetchTest(testId)),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    InviteInfoFieldChange: (val, field, inviteInfo) => dispatch(InviteInfoFieldChange(val, field, inviteInfo))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InviteConsoleContainer);\r\nconst styles = {\r\n    actionButton: {\r\n        marginLeft: '80%'\r\n    }\r\n}","import axios from 'axios';\r\nimport config from '../config';\r\nimport repository from '../repository';\r\n\r\nexport const SEND_TEST_INVITE = 'SEND_TEST_INVITE';\r\n// export const ADD_QUESTION_SUCCESS = 'ADD_QUESTION_SUCCESS';\r\n// export const ADD_QUESTION_FAIL = 'ADD_QUESTION_FAIL';\r\n// export const TEST_SEARCH_BEGIN = 'TEST_SEARCH_BEGIN';\r\n// export const TEST_SEARCH_SUCCESS = 'TEST_SEARCH_SUCCESS';\r\n// export const UPDATE_QUESTION_BEGIN = 'UPDATE_QUESTION_BEGIN';\r\n// export const UPDATE_QUESTION_SUCCESS = 'UPDATE_QUESTION_SUCCESS';\r\n// export const UPDATE_QUESTION_FAIL = 'UPDATE_QUESTION_FAIL';\r\n// export const SELECT_TEST = 'SELECT_TEST';\r\n// export const CURRENT_QUESTION_FIELD_CHANGE = 'CURRENT_QUESTION_FIELD_CHANGE';\r\n// export const CURRENT_QUESTION_FIELD_CHANGE_END = 'CURRENT_QUESTION_FIELD_CHANGE_END';\r\n// export const CURRENT_ANSWER_FIELD_CHANGE = 'CURRENT_ANSWER_FIELD_CHANGE';\r\n// export const CURRENT_ANSWER_FIELD_CHANGE_END = 'CURRENT_ANSWER_FIELD_CHANGE_END';\r\n// export const CHOICE_ADDED_TO_TEST = 'CHOICE_ADDED_TO_TEST';\r\n// export const FETCH_QUESTION_BEGIN = 'FETCH_QUESTION_BEGIN';\r\n// export const FETCH_QUESTION_SUCCESS = 'FETCH_QUESTION_SUCCESS';\r\n// export const FETCH_QUESTION_FAIL = 'FETCH_QUESTION_FAIL';\r\nexport const SEND_TEST_INVITE_SUCCESS = 'SEND_TEST_INVITE_SUCCESS';\r\nexport const SEND_TEST_INVITE_FAIL = 'SEND_TEST_INVITE_FAIL';\r\nexport const INVITE_INFO_FIELD_CHANGE = 'INVITE_INFO_FIELD_CHANGE';\r\n\r\nexport const SendInvite = (testModel, inviteInfo) => dispatch => {\r\n    let url = config.candidateApiUrl + 'sendInvite';\r\n    \r\n    if(!testModel.invitations){\r\n        testModel.invitations = [];\r\n    }\r\n    testModel.invitations.push(inviteInfo);\r\n    console.log('testmodel invite sent', testModel);\r\n    repository.saveData(url, testModel)\r\n        .then((res) => {\r\n            console.log('invitation sent');\r\n            console.log(res);\r\n            dispatch({\r\n                type: SEND_TEST_INVITE_SUCCESS,\r\n                // payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            dispatch({\r\n                type: SEND_TEST_INVITE_FAIL,\r\n                // payload: err\r\n            });\r\n        });\r\n    \r\n}\r\nexport const InviteInfoFieldChange = (val, field, model) => dispatch => {\r\n    switch(field)\r\n    {\r\n        case 'emailTo':\r\n        {\r\n            model.emailTo = val;\r\n            dispatch({\r\n                type: INVITE_INFO_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'emailSubject':\r\n        {\r\n            model.emailSubject = val;\r\n            dispatch({\r\n                type: INVITE_INFO_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { Typography, Card, CardHeader, CardContent, FormControl,\r\n         FormLabel, CardActions,\r\n         Button } from '@material-ui/core';\r\nimport AuthHelper from '../../AuthHelper';\r\nimport LoadingComponent from '../../components/lib/LoadingComponent';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\n\r\nclass QuestionSimulatorConsoleContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let userInfo = AuthHelper.GetUserInfo();\r\n        console.log('userInfo', userInfo);\r\n        this.state = {\r\n            mcq: {},\r\n            selectedAnswers : []\r\n        };\r\n    }\r\n\r\n    handleAnswerSelect = (event, itemIndex) => {\r\n        let { selectedAnswers } = this.state;\r\n        if(selectedAnswers && selectedAnswers.indexOf(itemIndex) !== -1) {\r\n            let tempAnswers = [];\r\n            selectedAnswers.map((item, idx) => {\r\n                tempAnswers.push(item);\r\n            });\r\n            tempAnswers.push(itemIndex);\r\n            this.setState({\r\n                selectedAnswers: tempAnswers\r\n            })\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        let { model } = this.props;\r\n        console.log('question simulator', model);\r\n        let { selectedAnswers } = this.state;\r\n        let qEntity = {};\r\n        if(model && model.selectedMcqs && model.selectedMcqs.length > 0) {\r\n            qEntity = model.selectedMcqs[0];\r\n        }\r\n        else {\r\n            return (\r\n                <LoadingComponent />\r\n            )\r\n        }\r\n        // let itemIndex = 0;\r\n        return (\r\n            <Card>\r\n                <CardHeader \r\n                            title={qEntity.question}\r\n                            subheader={qEntity.category}>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <Typography variant=\"subtitle1\">\r\n                        {qEntity.description}\r\n                    </Typography>\r\n                    <FormControl component=\"fieldset\">\r\n                        <FormLabel component=\"legend\">Options</FormLabel>\r\n                        {qEntity.choices && qEntity.choices.length > 0 &&\r\n                        <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                            {qEntity.choices.map((choiceItem, choiceIndex) => {\r\n                                return (\r\n                                    <ListItem\r\n                                    button\r\n                                    selected={selectedAnswers.indexOf(choiceIndex) > -1}\r\n                                    onClick={event => this.handleAnswerSelect(event, choiceIndex)}>\r\n                                    <ListItemIcon>\r\n                                        <InboxIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={choiceItem.content} />\r\n                                    </ListItem>\r\n                                )\r\n                            })}\r\n                        </List>\r\n                        }\r\n                    </FormControl>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button variant=\"contained\" size=\"small\">Previous</Button>\r\n                    <Button variant=\"contained\" size=\"small\" color=\"primary\">Next</Button>\r\n                </CardActions>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\n// const mapStateToProps = state => ({\r\n//     ...state.simulatorConsoleReducer\r\n// });\r\n// const mapDispatchToProps = dispatch => ({\r\n//     // LoadExamSimulator: () => dispatch(LoadExamSimulator())\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(QuestionSimulatorConsoleContainer);\r\nexport default QuestionSimulatorConsoleContainer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport QuestionSimulatorConsoleContainer from './QuestionSimulatorConsoleContainer';\r\nimport { LoadExamSimulator } from '../../actions/QuestionSimulatorConsoleActions';\r\nimport LoadingComponent from '../../components/lib/LoadingComponent';\r\n\r\nclass SimulatorConsoleContainer extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        this.props.LoadExamSimulator();\r\n    }\r\n\r\n    render = () => {\r\n        let { candidateTestObject } = this.props;\r\n        console.log('test simulator', this.props);\r\n        if(!candidateTestObject) {\r\n            return <LoadingComponent />\r\n        }\r\n        return (\r\n        <div>\r\n            <QuestionSimulatorConsoleContainer model={candidateTestObject.data} />\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state.questionSimulatorConsoleReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    LoadExamSimulator: () => dispatch(LoadExamSimulator())\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SimulatorConsoleContainer);\r\n","import config from '../config';\r\nimport repository from '../repository';\r\nimport AuthHelper from '../AuthHelper';\r\n\r\nexport const LOAD_EXAM_SIMULATOR_SUCCESS = 'LOAD_EXAM_SIMULATOR_SUCCESS';\r\n\r\nexport const LoadExamSimulator = () => dispatch => {\r\n    let userInfo = AuthHelper.GetUserInfo();\r\n    let url = config.candidateApiUrl + 'startTest';\r\n    let testModel = {\r\n        testId: 1\r\n    };\r\n    repository.saveData(url, testModel)\r\n            .then((res) => {\r\n                console.log('exam simulator loaded', res);\r\n                dispatch({\r\n                    type: LOAD_EXAM_SIMULATOR_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            })\r\n}","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader, Typography } from '@material-ui/core';\r\n\r\n\r\nconst RmaCustomerDetails = (props) => {\r\n    let { model } = props;\r\n    // console.log('rmacustomermodel', model);\r\n    // console.log('model.telephone ? model.telephone : ',model.telephone ? model.telephone : '');\r\n    return (\r\n        <div>\r\n            {model && \r\n        <Card style={{padding: \"1%\"}}>\r\n            <CardHeader \r\n                title={<Typography variant=\"body2\">Customer Details</Typography>}>\r\n            </CardHeader>\r\n            <CardContent>\r\n                    <form  noValidate autoComplete=\"off\">\r\n                \r\n                    <FormControl variant=\"outlined\" style={styles.fullWidth}>\r\n                        <TextField\r\n                            id=\"outlined-name\"\r\n                            label=\"Customer Name\"\r\n                            value={model.customerName ? model.customerName : ''}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'customerName')}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl variant=\"outlined\" style={styles.fullWidth}>\r\n                        <TextField\r\n                            id=\"outlined-address\"\r\n                            label=\"Address\"\r\n                            value={model.address ? model.address : ''}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'address')}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl variant=\"outlined\" style={styles.width50}>\r\n                        <TextField\r\n                            id=\"outlined-tel\"\r\n                            label=\"Tel\"\r\n                            value={model.telephone ? model.telephone : ''}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'telephone')}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl variant=\"outlined\" style={styles.width50}>\r\n                        <TextField\r\n                            id=\"outlined-fax\"\r\n                            label=\"Fax\"\r\n                            value={model.fax ? model.fax : ''}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'fax')}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl variant=\"outlined\" style={styles.width50}>\r\n                        <TextField\r\n                            id=\"outlined-email\"\r\n                            label=\"Email\"\r\n                            value={model.email ? model.email : ''}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'email')}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl variant=\"outlined\" style={styles.width50}>\r\n                        <TextField\r\n                            id=\"outlined-contact\"\r\n                            label=\"Contact Person\"\r\n                            value={model.contactPerson ? model.contactPerson : ''}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'contactPerson')}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n            </form>\r\n            </CardContent>\r\n        </Card>}\r\n        </div>\r\n    );\r\n}\r\nexport default RmaCustomerDetails;\r\n\r\nconst styles={\r\n    fullWidth: {\r\n        width: '100%',\r\n        paddingLeft: '2%',\r\n        // paddingRight: '2%'\r\n    },\r\n    width50: {\r\n        width: '40%',\r\n        paddingLeft: '2%',\r\n        paddingRight: '2%'\r\n    },\r\n    actionButton: {\r\n        marginLeft: '70%'\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader, DialogContent, Dialog, DialogTitle, DialogActions, Divider } from '@material-ui/core';\r\nimport { MenuItem, OutlinedInput, Select, InputLabel, IconButton } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Close, Add } from '@material-ui/icons';\r\n\r\nclass AddRmaProduct extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n        \r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n      this.props.onSubmit(this.props.model);\r\n      this.handleClose();\r\n    }\r\n    \r\n    render = () => {\r\n        let { model } = this.props;\r\n        // console.log('current_product', model);\r\n        return (\r\n            <div>\r\n            {model && \r\n            <Card>   \r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}><Add /></Button>\r\n                <Dialog\r\n                fullWidth={true}\r\n                open={this.state.open}\r\n                onClose={this.handleClose}\r\n                >\r\n                <DialogTitle onClose={this.handleClose}>Add product to RMA</DialogTitle>\r\n                <Divider />\r\n                <DialogContent style={{padding: '4%'}}>\r\n                    <form  noValidate autoComplete=\"off\">\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <TextField\r\n                                        id=\"outlined-modelNo\"\r\n                                        label=\"Model No\"\r\n                                        className={styles.dense}\r\n                                        value={model.modelNo ? model.modelNo : ''}\r\n                                        onChange={(e) => this.props.onFieldChange(e.target.value, 'modelNo')}\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <TextField\r\n                                        id=\"outlined-desc\"\r\n                                        label=\"Description\"\r\n                                        className={styles.dense}\r\n                                        value={model.description ? model.description : ''}\r\n                                        onChange={(e) => this.props.onFieldChange(e.target.value, 'description')}\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <TextField\r\n                                        id=\"outlined-qty\"\r\n                                        label=\"Qty\"\r\n                                        className={styles.dense}\r\n                                        value={model.quantity ? model.quantity : 0}\r\n                                        onChange={(e) => this.props.onFieldChange(e.target.value, 'quantity')}\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <TextField\r\n                                        id=\"outlined-invoice\"\r\n                                        label=\"Invoice#\"\r\n                                        className={styles.dense}\r\n                                        value={model.invoiceNo ? model.invoiceNo : ''}\r\n                                        onChange={(e) => this.props.onFieldChange(e.target.value, 'invoiceNo')}\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <TextField\r\n                                        id=\"outlined-deliveryChallanNo\"\r\n                                        label=\"Delivery Challan#\"\r\n                                        className={styles.dense}\r\n                                        value={model.deliveryChallanNo ? model.deliveryChallanNo : ''}\r\n                                        onChange={(e) => this.props.onFieldChange(e.target.value, 'deliveryChallanNo')}\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <TextField\r\n                                        id=\"outlined-serialNo\"\r\n                                        label=\"Serial#\"\r\n                                        className={styles.dense}\r\n                                        value={model.serialNo ? model.serialNo : ''}\r\n                                        onChange={(e) => this.props.onFieldChange(e.target.value, 'serialNo')}\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <TextField\r\n                                        id=\"outlined-productUseAddress\"\r\n                                        label=\"Location of product use\"\r\n                                        className={styles.dense}\r\n                                        value={model.productUseAddress ? model.productUseAddress : ''}\r\n                                        onChange={(e) => this.props.onFieldChange(e.target.value, 'productUseAddress')}\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <TextField\r\n                                        id=\"outlined-failureDescription\"\r\n                                        label=\"Failure Description\"\r\n                                        multiline\r\n                                        rows=\"4\"\r\n                                        className={styles.dense}\r\n                                        value={model.failureDescription ? model.failureDescription : ''}\r\n                                        onChange={(e) => this.props.onFieldChange(e.target.value, 'failureDescription')}\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </FormControl>\r\n                    </form>\r\n                    </DialogContent>\r\n                    <Divider />\r\n                    <DialogActions>\r\n                        <Button variant=\"contained\" size=\"small\" color=\"default\"\r\n                                        onClick={ () => this.handleSubmit(this.props.model)}>\r\n                            Add Product\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Card>}\r\n        \r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst styles = {\r\n    formControl: {\r\n        width: '80%',\r\n        marginBottom: '4%'\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n};\r\nexport default AddRmaProduct;","import React, { Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport { CardHeader, CardContent, Typography } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport AddRmaProduct from './AddRmaProduct';\r\n\r\nconst RmaProductList = (props) => {\r\n    return (\r\n        <Card style={{padding: \"1%\"}}>\r\n            <CardHeader \r\n                action={\r\n                    <AddRmaProduct\r\n                        onSubmit={ (product) => props.onAddRmaProduct(product) }\r\n                        model={props.current_product}\r\n                        onFieldChange={ (val, field) => props.onProductFieldChange(val, field) } \r\n                        />\r\n                }         \r\n            title={<Typography variant=\"body2\">{`Products ${props.productList ? \"(\"+props.productList.length+\")\" : \"\" }`}</Typography>}>\r\n            </CardHeader>\r\n            <CardContent>\r\n                <Table>\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <CustomTableCell>Model No.</CustomTableCell>\r\n                        <CustomTableCell>Description</CustomTableCell>\r\n                        <CustomTableCell>Qty</CustomTableCell>\r\n                        <CustomTableCell>Invoice#</CustomTableCell>\r\n                        <CustomTableCell>Delivery Challan#</CustomTableCell>\r\n                        <CustomTableCell>Serial#</CustomTableCell>\r\n                        <CustomTableCell>Location of product use (complete address)</CustomTableCell>\r\n                        <CustomTableCell>Failure Description</CustomTableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {props.productList.map((product, index) => (\r\n                        <Fragment key={index}>\r\n                        <TableRow >\r\n                            <CustomTableCell>{product.modelNo}</CustomTableCell>\r\n                            <CustomTableCell>{product.description}</CustomTableCell>\r\n                            <CustomTableCell>{product.quantity}</CustomTableCell>\r\n                            <CustomTableCell>{product.invoiceNo}</CustomTableCell>\r\n                            <CustomTableCell>{product.deliveryChallanNo}</CustomTableCell>\r\n                            <CustomTableCell>{product.serialNo}</CustomTableCell>\r\n                            <CustomTableCell>{product.productUseAddress}</CustomTableCell>\r\n                            <CustomTableCell>{product.failureDescription}</CustomTableCell>\r\n                        </TableRow>\r\n                        </Fragment>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>\r\n            {(!props.productList || props.productList.length === 0) &&\r\n            <Typography variant=\"subtitle1\" align=\"center\">\r\n                Please add product details\r\n            </Typography>}\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\nconst CustomTableCell = withStyles(theme => ({\r\n    head: {\r\n    //   backgroundColor: theme.palette.common.black,\r\n    //   color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nexport default RmaProductList;\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader, Typography } from '@material-ui/core';\r\n\r\n\r\nconst RmaVendorDetails = (props) => {\r\n    let { model } = props;\r\n    return (\r\n        <div>\r\n            {model && \r\n        <Card style={{padding: \"1%\"}}>\r\n            <CardHeader \r\n                title={<Typography variant=\"caption\">If the product was not bought from us, please mention the details of purchase-</Typography>}>\r\n            </CardHeader>\r\n            <CardContent>\r\n                    <form  noValidate autoComplete=\"off\">\r\n                <FormControl variant=\"outlined\" style={styles.halfWidth}>\r\n                    <TextField\r\n                        id=\"outlined-purchaseDate\"\r\n                        label=\"Date of Purchase\"\r\n                        className={styles.dense}\r\n                        value={model.purchaseDate ? model.purchaseDate : ''}\r\n                        onChange={(e) => props.onFieldChange(e.target.value, 'purchaseDate')}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                </FormControl>\r\n                <FormControl variant=\"outlined\" style={styles.halfWidth}>\r\n                    <TextField\r\n                        id=\"outlined-vendorName\"\r\n                        label=\"Vendor / Supplier Name\"\r\n                        className={styles.dense}\r\n                        value={model.vendorName ? model.vendorName : ''}\r\n                        onChange={(e) => props.onFieldChange(e.target.value, 'vendorName')}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                </FormControl>\r\n                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                    <TextField\r\n                        id=\"outlined-address\"\r\n                        label=\"Location / Address\"\r\n                        multiline\r\n                        rows=\"4\"\r\n                        className={styles.dense}\r\n                        value={model.address ? model.address : ''}\r\n                        onChange={(e) => props.onFieldChange(e.target.value, 'address')}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                </FormControl>\r\n            </form>\r\n            </CardContent>\r\n        </Card>}\r\n        </div>\r\n    );\r\n}\r\nexport default RmaVendorDetails;\r\n\r\nconst styles = {\r\n    formControl: {\r\n        width: '90%',\r\n        marginLeft: '2%'\r\n    },\r\n    halfWidth: {\r\n        width: '40%',\r\n        marginLeft: '2%'\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n};","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst RmaTermsAndConditions = (props) => {\r\n    return (\r\n        <div className=\"divContainer\">\r\n        <Typography variant=\"body1\">1) All Accessories including cables &amp; power supply must only be returned back along with the product unless otherwise specified by us. </Typography>\r\n        <Typography variant=\"body1\">2) Warranty claim may be rejected if product is physically damaged. </Typography>\r\n        <Typography variant=\"body1\">3) All road tax, Octroi or any entry tax is payable by customer. </Typography>\r\n        <Typography variant=\"body1\">4) Customer should send the product to our warehouse address mentioned below on freight prepaid basis. </Typography>\r\n        </div>\r\n    );\r\n}\r\nexport default RmaTermsAndConditions;","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst HiTechAddress = (props) => {\r\n    return (\r\n        <div className=\"divContainer\">\r\n            <Typography variant=\"caption\">\r\n            Highness Microelectronics Pvt. Ltd.<br></br>\r\n            RMA Department (RMA#XXXXXXXX)</Typography>\r\n            <Typography variant=\"body2\">\r\n            8-C, 1 st Floor, New Tejpal Industrial Estate.,<br></br>\r\n            Kurla Andheri Road, Sakinaka, Mumbai - 400072.</Typography><br></br>\r\n        </div>\r\n    );\r\n}\r\nexport default HiTechAddress;\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader, Typography } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Loading from '../components/lib/LoadingComponent';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport RmaCustomerDetails from './RmaCustomerDetails';\r\nimport RmaProductList from './RmaProductList';\r\nimport RmaVendorDetails from './RmaVendorDetails';\r\nimport RmaTermsAndConditions from './RmaTermsAndConditions';\r\nimport HiTechAddress from './HiTechAddress';\r\nimport Book from '@material-ui/icons/Book';\r\n\r\nconst AddRmaRequestComponent = (props) => {\r\n    let { model } = props;\r\n    model.customerDetails = !model.customerDetails ? {} : model.customerDetails;\r\n    model.productList = !model.productList ? [] : model.productList;\r\n    model.current_product = !model.current_product ? {} : model.current_product;\r\n    model.vendorDetails = !model.vendorDetails ? {} : model.vendorDetails;\r\n    \r\n    let display = (props) ? 'block' : 'none';\r\n    return (\r\n        <Card style={{padding: \"1%\"}}>\r\n                    <CardHeader \r\n                        avatar={\r\n                            <Avatar aria-label=\"Recipe\" style={styles.avatar}>\r\n                                <Book />\r\n                            </Avatar>\r\n                            }\r\n                            title=\"Create RMA Request\">\r\n                    </CardHeader>\r\n                <CardContent>\r\n                    <RmaCustomerDetails\r\n                        model={model.customerDetails}\r\n                        onFieldChange={(val, field) => props.onFieldChange(val, field, model)}\r\n                    />\r\n                    <br></br>\r\n                    <RmaProductList\r\n                        current_product={model.current_product}\r\n                        productList={model.productList}\r\n                        onProductFieldChange={(val, field) => props.onProductFieldChange(val, field, model)}\r\n                        onAddRmaProduct={(productItem) => props.onAddRmaProduct(productItem, model)}\r\n                        />\r\n                    <br></br>\r\n                    <RmaVendorDetails\r\n                        model={model.vendorDetails}\r\n                        onFieldChange={(val, field) => props.onVendorDetailsFieldChange(val, field, model)}\r\n                        />\r\n                    <RmaTermsAndConditions />\r\n                    <HiTechAddress />\r\n                </CardContent>\r\n                <CardActions style={styles.actionButton}>\r\n                    <Button variant=\"contained\" size=\"large\" color=\"primary\" \r\n                                onClick={ () => props.onSubmit(model) }>\r\n                                Submit\r\n                    </Button>\r\n                </CardActions>\r\n        </Card>\r\n    );\r\n}\r\nexport default AddRmaRequestComponent;\r\nconst styles={\r\n    fullWidth: {\r\n        width: '100%',\r\n        paddingLeft: '2%',\r\n        // paddingRight: '2%'\r\n    },\r\n    width50: {\r\n        width: '40%',\r\n        paddingLeft: '2%',\r\n        paddingRight: '2%'\r\n    },\r\n    actionButton: {\r\n        // marginLeft: '70%'\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n}","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport { CardHeader, CardContent, Typography, Button } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst RmaRequestList = (props) => {\r\n    let { rmaRequests } = props;\r\n    let requestList = rmaRequests;\r\n    if(rmaRequests && rmaRequests.length > 0) {\r\n        requestList = rmaRequests.reverse();\r\n    }\r\n    return (\r\n        <Card style={{padding: \"1%\"}}>\r\n            <CardHeader \r\n                action={\r\n                    <Link to={ { pathname: \"/createRma\" }}>\r\n                        <Button variant=\"contained\" size=\"large\" color=\"primary\" >\r\n                                Create RMA Request\r\n                        </Button>\r\n                    </Link>\r\n                }         \r\n            title={<Typography variant=\"body2\">{`RMA Requests ${props.rmaRequests ? \"(\"+props.rmaRequests.length+\")\" : \"\" }`}</Typography>}>\r\n            </CardHeader>\r\n            <CardContent>\r\n                <Table>\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <CustomTableCell>Customer Name</CustomTableCell>\r\n                        <CustomTableCell>Email</CustomTableCell>\r\n                        <CustomTableCell>Contact Person</CustomTableCell>\r\n                        <CustomTableCell>Telephone</CustomTableCell>\r\n                        <CustomTableCell></CustomTableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {requestList && requestList.map((rmaRequest, index) => (\r\n                        <Fragment key={index}>\r\n                        <TableRow >\r\n                            <CustomTableCell>{rmaRequest.customerDetails.customerName}</CustomTableCell>\r\n                            <CustomTableCell>{rmaRequest.customerDetails.email}</CustomTableCell>\r\n                            <CustomTableCell>{rmaRequest.customerDetails.contactPerson}</CustomTableCell>\r\n                            <CustomTableCell>{rmaRequest.customerDetails.telephone}</CustomTableCell>\r\n                            <CustomTableCell align=\"right\" scope=\"row\" component=\"th\">\r\n                                <Button color=\"primary\" onClick={() => props.onViewRma(rmaRequest)}>View</Button>\r\n                            </CustomTableCell>\r\n                        </TableRow>\r\n                        </Fragment>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>\r\n            {(!props.rmaRequests || props.rmaRequests.length === 0) &&\r\n            <Typography variant=\"subtitle1\" align=\"center\">\r\n                No RMA requests found\r\n            </Typography>}\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\nconst CustomTableCell = withStyles(theme => ({\r\n    head: {\r\n    //   backgroundColor: theme.palette.common.black,\r\n    //   color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nexport default RmaRequestList;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AddRmaRequestComponent from './AddRmaRequest';\r\nimport RmaRequestList from './RmaRequestList';\r\nimport {    AddRmaRequest, FetchRmaRequests, \r\n            CloseSnackbar, CurrentRmaRequestFieldChange,\r\n            ProductFieldChange, VendorDetailsFieldChange,\r\n            AddProductToRma, InitializeRmaFields,\r\n            OpenSnackbar } from './RmaRequestActions';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SnackbarComponent from '../components/lib/SnackbarComponent';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nclass AddRmaRequestContainer extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        this.reload();\r\n    }\r\n\r\n    reload = () => {\r\n        this.props.InitializeRmaFields();\r\n    }\r\n\r\n    componentWillUpdate = () => {\r\n        console.log('component updated');\r\n        if(this.props.success_message) {\r\n            console.log('this.props.success_message');\r\n            this.props.history.push({\r\n                pathname: '/rmaRequests'\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = () => {\r\n        console.log('component will receive props');\r\n        if(this.props.success_message) {\r\n            console.log('receive props this.props.success_message');\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        return(\r\n            <div>\r\n                {this.props.current_rma_request && \r\n                    <AddRmaRequestComponent \r\n                        onSubmit={ (model) => this.props.AddRmaRequest(model) }\r\n                        model={this.props.current_rma_request}\r\n                        onFieldChange={ (val, field, model) => this.props.CurrentRmaRequestFieldChange(val, field, model) } \r\n                        onVendorDetailsFieldChange={ (val, field, model) => this.props.VendorDetailsFieldChange(val, field, model) } \r\n                        onAddRmaProduct={(productItem, model) => this.props.AddProductToRma(productItem, model) }\r\n                        onProductFieldChange={(val, field, model) => this.props.ProductFieldChange(val, field, model)}\r\n                        />\r\n                }\r\n                {this.props.success_message && !this.props.saving && \r\n                    <SnackbarComponent \r\n                        openSnack={true} handleClose={() => this.props.CloseSnackbar()} \r\n                        snackMessage={\"RMA request Saved Successfully!\"} /> \r\n                }\r\n                {this.props.saving && \r\n                    <SnackbarComponent \r\n                        openSnack={true} handleClose={() => this.props.CloseSnackbar()} \r\n                        snackMessage={\"Saving...\"} /> \r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.rmaReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    AddRmaRequest: (model) => dispatch(AddRmaRequest(model)),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    CurrentRmaRequestFieldChange: (val, field, model) => dispatch(CurrentRmaRequestFieldChange(val, field, model)),\r\n    ProductFieldChange: (val, field, model) => dispatch(ProductFieldChange(val, field, model)),\r\n    VendorDetailsFieldChange: (val, field, model) => dispatch(VendorDetailsFieldChange(val, field, model)),\r\n    AddProductToRma: (productItem, model) => dispatch(AddProductToRma(productItem, model)),\r\n    InitializeRmaFields: () => dispatch(InitializeRmaFields())\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddRmaRequestContainer);\r\nconst styles={\r\n    fullWidth: {\r\n        width: '100%',\r\n        paddingLeft: '2%',\r\n        paddingRight: '2%'\r\n    },\r\n    width50: {\r\n        width: '50%',\r\n        paddingLeft: '2%',\r\n        paddingRight: '2%'\r\n    },\r\n    actionButton: {\r\n        marginLeft: '70%'\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n}","import axios from 'axios';\r\nimport config from '../config';\r\nimport repository from '../repository';\r\n\r\nexport const INITIALIZE_RMA_FIELDS = 'INITIALIZE_RMA_FIELDS';\r\nexport const ADD_RMAREQUESTS_BEGIN = 'ADD_RMAREQUESTS_BEGIN';\r\nexport const ADD_RMAREQUESTS_SUCCESS = 'ADD_RMAREQUESTS_SUCCESS';\r\nexport const ADD_RMAREQUESTS_FAIL = 'ADD_RMAREQUESTS_FAIL';\r\nexport const FETCH_RMAREQUESTS_BEGIN = 'FETCH_RMAREQUESTS_BEGIN';\r\nexport const FETCH_RMAREQUESTS_SUCCESS = 'FETCH_RMAREQUESTS_SUCCESS';\r\nexport const FETCH_RMAREQUEST_SUCCESS = 'FETCH_RMAREQUEST_SUCCESS';\r\nexport const FETCH_RMAREQUEST_FAIL = 'FETCH_RMAREQUEST_FAIL';\r\nexport const SELECT_RMA_REQUEST = 'SELECT_RMA_REQUEST';\r\nexport const GOBACK_TO_ALL_REQUESTS = 'GOBACK_TO_ALL_REQUESTS';\r\nexport const FETCH_RMAREQUESTS_FAIL = 'FETCH_RMAREQUESTS_FAIL';\r\nexport const UPDATE_RMAREQUESTS_BEGIN = 'UPDATE_RMAREQUESTS_BEGIN';\r\nexport const UPDATE_RMAREQUESTS_SUCCESS = 'UPDATE_RMAREQUESTS_SUCCESS';\r\nexport const UPDATE_RMAREQUESTS_FAIL = 'UPDATE_RMAREQUESTS_FAIL';\r\nexport const CURRENT_RMAREQUESTS_FIELD_CHANGE = 'CURRENT_RMAREQUESTS_FIELD_CHANGE';\r\nexport const CURRENT_RMAREQUESTS_FIELD_CHANGE_END = 'CURRENT_RMAREQUESTS_FIELD_CHANGE_END';\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\r\nexport const OPEN_SNACKBAR = 'OPEN_SNACKBAR';\r\n\r\nexport const InitializeRmaFields = () => dispatch => {\r\n    dispatch({\r\n        type: INITIALIZE_RMA_FIELDS\r\n    })\r\n} \r\n\r\nexport const CurrentRmaRequestFieldChange = (val, field, model) => dispatch => {\r\n    /*switch(field)\r\n    {\r\n        case 'customerName':\r\n        {\r\n            model.customerName = val;\r\n            break;\r\n        }\r\n        case 'address':\r\n        {\r\n            model.address = val;\r\n            break;\r\n        }\r\n        case 'telephone':\r\n        {\r\n            model.telephone = val;\r\n            break;\r\n        }\r\n        case 'fax':\r\n        {\r\n            model.fax = val;\r\n            break;\r\n        }\r\n        case 'email':\r\n        {\r\n            model.email = val;\r\n            break;\r\n        }\r\n        case 'address':\r\n        {\r\n            model.contactPerson = val;\r\n            break;\r\n        }\r\n    }*/\r\n    if(!model.customerDetails) model.customerDetails = {};\r\n    model.customerDetails[field] = val;\r\n    model.field_version = model.field_version++;\r\n    dispatch({\r\n        type: CURRENT_RMAREQUESTS_FIELD_CHANGE,\r\n        payload: model\r\n    });\r\n}\r\n\r\nexport const AddProductToRma = (productItem, model) => dispatch => {\r\n    if(!model.productList) model.productList = [];\r\n    model.productList.push(productItem);\r\n    console.log('model.productList', model.productList.length);\r\n    dispatch({\r\n        type: CURRENT_RMAREQUESTS_FIELD_CHANGE,\r\n        payload: model\r\n    });\r\n}\r\n\r\nexport const VendorDetailsFieldChange = (val, field, model) => dispatch => {\r\n    if(!model.vendorDetails) model.vendorDetails = {};\r\n    model.vendorDetails[field] = val;\r\n    dispatch({\r\n        type: CURRENT_RMAREQUESTS_FIELD_CHANGE,\r\n        payload: model\r\n    });\r\n}\r\n\r\nexport const ProductFieldChange = (val, field, model) => dispatch => {\r\n    if(!model.current_product) model.current_product = {};\r\n    model.current_product[field] = val;\r\n    dispatch({\r\n        type: CURRENT_RMAREQUESTS_FIELD_CHANGE,\r\n        payload: model\r\n    });\r\n}\r\n\r\nexport const AddRmaRequest = (rmaRequestModel) => dispatch => {\r\n    dispatch({\r\n        type: ADD_RMAREQUESTS_BEGIN\r\n    });\r\n    let url = config.hitechApiUrl + 'rmaRequest';\r\n    console.log('action model');\r\n    console.log(rmaRequestModel);\r\n    rmaRequestModel.emailTo = 'alok.coolaj@gmail.com';\r\n    repository.saveData(url, rmaRequestModel)\r\n        .then((res) => {\r\n            console.log('rma request saved: ' + res);\r\n            dispatch({\r\n                type: ADD_RMAREQUESTS_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: ADD_RMAREQUESTS_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const UpdateRmaRequest = (rmaRequestModel) => dispatch => {\r\n    dispatch({\r\n        type: UPDATE_RMAREQUESTS_BEGIN\r\n    });\r\n    let url = config.hitechApiUrl + 'rmaRequest';\r\n    repository.updateData(url, rmaRequestModel)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: UPDATE_RMAREQUESTS_SUCCESS\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: UPDATE_RMAREQUESTS_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const FetchRmaRequests = () => dispatch => {\r\n    dispatch({\r\n        type: FETCH_RMAREQUESTS_BEGIN\r\n    });\r\n    let url = config.hitechApiUrl + 'rmaRequests';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            console.log('rma requests fetched');\r\n            dispatch({\r\n                type: FETCH_RMAREQUESTS_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_RMAREQUESTS_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const FetchRmaRequest = (rmaRequestId) => dispatch => {\r\n    \r\n    let url = config.hitechApiUrl + 'rmaRequest/' + rmaRequestId;\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            console.log('rma single request fetched');\r\n            dispatch({\r\n                type: FETCH_RMAREQUEST_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_RMAREQUEST_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const SelectRmaRequest = (rmaRequest) => dispatch => {\r\n    dispatch({\r\n        type: SELECT_RMA_REQUEST,\r\n        payload: rmaRequest\r\n    })\r\n}\r\n\r\nexport const GoBackToAllRequests = () => dispatch => {\r\n    dispatch({\r\n        type: GOBACK_TO_ALL_REQUESTS\r\n    })\r\n}\r\n\r\nexport const CloseSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: CLOSE_SNACKBAR\r\n    });\r\n}\r\nexport const OpenSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: OPEN_SNACKBAR\r\n    });\r\n}\r\n","import React from 'react';\r\nimport { Card, CardHeader, CardContent, Grid, Paper, Button, Divider } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom';\r\nimport RmaProductList from './RmaProductList';\r\nimport RmaVendorDetails from './RmaVendorDetails';\r\n\r\nclass ViewRmaRequest extends React.Component {\r\n    \r\n    renderCustomerDetails = (customerDetails) => {\r\n        return (\r\n            <Grid container spacing={16} style={styles.group}>\r\n                        <Grid item sm={3}>\r\n                            Customer Name\r\n                        </Grid>\r\n                        <Grid item sm={3}>\r\n                            <strong>{customerDetails.customerName}</strong>\r\n                        </Grid>\r\n                        <Grid item sm={3}>\r\n                            Contact Person\r\n                        </Grid>\r\n                        <Grid item sm={3}>\r\n                            <strong>{customerDetails.contactPerson}</strong>\r\n                        </Grid>\r\n                        <Grid item sm={3}>\r\n                            Telephone\r\n                        </Grid>\r\n                        <Grid item sm={3}>\r\n                            <strong>{customerDetails.telephone}</strong>\r\n                        </Grid>\r\n                        <Grid item sm={3}>\r\n                            Email\r\n                        </Grid>\r\n                        <Grid item sm={3}>\r\n                            <strong>{customerDetails.email}</strong>\r\n                        </Grid>\r\n\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    renderVendorDetails = (vendorDetails) => {\r\n        return (\r\n            <Grid container spacing={16} style={styles.group}> \r\n            <Grid item sm={3}>\r\n            Purchase Date\r\n        </Grid>\r\n        <Grid item sm={3}>\r\n            <strong>{vendorDetails.purchaseDate}</strong>\r\n        </Grid>\r\n        <Grid item sm={3}>\r\n            Vendor Name\r\n        </Grid>\r\n        <Grid item sm={3}>\r\n            <strong>{vendorDetails.vendorName}</strong>\r\n        </Grid>\r\n        <Grid item sm={3}>\r\n            Location\r\n        </Grid>\r\n        <Grid item sm={3}>\r\n            <strong>{vendorDetails.address}</strong>\r\n        </Grid>\r\n        </Grid>\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        let { model } = this.props;\r\n        console.log('view rma', model);\r\n        return (\r\n            <Card>\r\n                <CardHeader\r\n                    action={\r\n                        // <Link to={ { pathname: \"/rmaRequests\" }}>\r\n                            <Button color=\"primary\" size=\"small\" \r\n                                onClick={() => this.props.onBackToAllRequests()}>\r\n                                    Back to all requests\r\n                            </Button>\r\n                        // </Link>\r\n                    }         \r\n                    title={`RMA Request # ${model['$loki']}`}\r\n                />\r\n                <CardContent>\r\n                    <Grid container spacing={16}>\r\n                        {this.renderCustomerDetails(model.customerDetails)}\r\n                        <br></br>\r\n                        {this.renderVendorDetails(model.vendorDetails)}\r\n                        <RmaProductList\r\n                            productList={model.productList}\r\n                        />\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\nexport default ViewRmaRequest;\r\nconst styles = {\r\n    group: {\r\n        padding: '2%'\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AddRmaRequestComponent from './AddRmaRequest';\r\nimport RmaRequestList from './RmaRequestList';\r\nimport {    FetchRmaRequests, SelectRmaRequest, \r\n            CloseSnackbar, GoBackToAllRequests,\r\n            OpenSnackbar } from './RmaRequestActions';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SnackbarComponent from '../components/lib/SnackbarComponent';\r\nimport { Link } from 'react-router-dom';\r\nimport ViewRmaRequest from './ViewRmaRequest';\r\n\r\nclass RmaRequestListContainer extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        console.log('did mount');\r\n        this.reload();\r\n    }\r\n\r\n    componentWillUpdate = () => {\r\n        if(this.props.success_message !== '') {\r\n            this.props.FetchRmaRequests();\r\n        }\r\n    }\r\n\r\n    reload = () => {\r\n        this.props.FetchRmaRequests();\r\n    }\r\n\r\n    render = () => {\r\n        let rmaRequests = [];\r\n        rmaRequests = this.props.rmaRequests;\r\n        if(rmaRequests)console.log('rmaRequests length', rmaRequests.length);\r\n        return(\r\n            <div>\r\n                {this.props.selectedRmaRequestModel === null &&\r\n                <RmaRequestList \r\n                    rmaRequests={rmaRequests}\r\n                    onViewRma={(rmaRequest) => this.props.SelectRmaRequest(rmaRequest)} \r\n                />}\r\n                {this.props.selectedRmaRequestModel &&\r\n                <ViewRmaRequest\r\n                    model={this.props.selectedRmaRequestModel}\r\n                    onBackToAllRequests={() => this.props.GoBackToAllRequests()}\r\n                />}\r\n                <SnackbarComponent \r\n                    openSnack={this.props.snack_open} handleClose={() => this.props.CloseSnackbar()} \r\n                    snackMessage={\"Data fetched Successfully!\"} /> \r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.rmaReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    FetchRmaRequests: () => dispatch(FetchRmaRequests()),\r\n    SelectRmaRequest: (rmaRequest) => dispatch(SelectRmaRequest(rmaRequest)),\r\n    GoBackToAllRequests: () => dispatch(GoBackToAllRequests()),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RmaRequestListContainer);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ component: Component, authed, ...rest}) => {\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            render={(props) => isLoggedIn() === true\r\n                ? <Component {...props} />\r\n                : <Redirect to={{pathname: '/login'}} />}\r\n        />\r\n    );\r\n}\r\nconst isLoggedIn = () => {\r\n    let token = localStorage.getItem('auth-token');\r\n    if(token) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport default PrivateRoute;","import React from 'react';\r\nimport AddCategoryComponent from './Categories/AddCategory';\r\nimport AddCandidateComponent from './Candidates/AddCandidate';\r\nimport DashboardComponent from './Dashboard';\r\n// import UsersComponent from './Users';\r\nimport UsersComponent from '../Containers/User/UserContainer';\r\nimport LoginComponent from './lib/LoginComponent';\r\nimport User401 from '../Containers/User/User401';\r\nimport UserForbidden from '../Containers/User/UserForbidden';\r\nimport ResourceNotFound from '../Containers/User/ResourceNotFound';\r\nimport { Route } from 'react-router-dom'\r\nimport CategoriesContainer from '../Containers/CategoryContainer';\r\nimport SkillsContainer from '../Containers/SkillContainer';\r\nimport TestConsoleContainer from '../Containers/TestConsole/TestConsoleContainer';\r\nimport McqContainer from '../Containers/McqContainer';\r\nimport BulkMcq from '../components/Mcq/BulkUpload';\r\nimport CandidatesContainer from '../Containers/CandidateContainer';\r\nimport AdminTestContainer from '../Containers/AdminTestContainer';\r\nimport McqList from '../components/Mcq/McqList';\r\nimport CandidateList from '../components/Candidates/CandidateList';\r\nimport InviteConsoleContainer from '../Containers/InviteConsole/InviteConsoleContainer';\r\nimport SimulatorConsoleContainer from '../Containers/Simulator/SimulatorConsoleContainer';\r\n\r\nimport AddRmaRequest from '../HiTech/AddRmaRequestContainer';\r\nimport RmaRequestList from '../HiTech/RmaRequestListContainer';\r\nimport ViewRmaRequest from '../HiTech/ViewRmaRequest';\r\n\r\nimport PrivateRoute from '../components/lib/PrivateRoute';\r\n\r\nconst Routes = (props) => {\r\n    return (\r\n        <div>\r\n            <PrivateRoute exact path=\"/\" component={DashboardComponent} />\r\n            <Route path=\"/login\" component={LoginComponent} />\r\n            <Route path=\"/unauthorizedUser\" component={User401} />\r\n            <Route path=\"/userForbidden\" component={UserForbidden} />\r\n            <Route path=\"/notFound\" component={ResourceNotFound} />\r\n            <PrivateRoute path=\"/dashboard\" component={DashboardComponent} />\r\n            <PrivateRoute path=\"/tests\" component={AdminTestContainer} />\r\n            {/* <Route path=\"/testConsole\" component={TestConsoleContainer} /> */}\r\n            <PrivateRoute path=\"/testConsole\" component={TestConsoleContainer} />\r\n            <PrivateRoute path=\"/inviteConsole\" component={InviteConsoleContainer} />\r\n            <PrivateRoute path=\"/mcqs\" component={McqList} />\r\n            <PrivateRoute path=\"/addMcq\" component={McqContainer} />\r\n            <PrivateRoute path=\"/bulkMcq\" component={BulkMcq} />\r\n            <PrivateRoute path=\"/categories\" component={CategoriesContainer} />\r\n            <PrivateRoute path=\"/skills\" component={SkillsContainer} />\r\n            <PrivateRoute path=\"/addCategory\" component={AddCategoryComponent} />\r\n            {/* <Route path=\"/candidates\" component={CandidateList} /> */}\r\n            {/* <Route path=\"/addCandidate\" component={CandidatesContainer} /> */}\r\n            <PrivateRoute path=\"/users\" component={UsersComponent} />\r\n\r\n            <PrivateRoute path=\"/simulator\" component={SimulatorConsoleContainer} />\r\n\r\n            {/* Routes for HiTech*/}\r\n            <Route path=\"/rmaRequests\" component={RmaRequestList} />\r\n            <Route path=\"/createRma\" component={AddRmaRequest} />\r\n            <Route path=\"/viewRma\" component={ViewRmaRequest} />\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Routes;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { SetUserInfo, LogoutCurrentUser } from '../actions/UserActions';\r\n\r\nimport Header from './layouts/Header';\r\nimport SideDrawer from './layouts/SideDrawer';\r\n\r\n// import McqComponent from './Mcq/McqList';\r\n// import AddMcqComponent from './Mcq/AddMcq';\r\n// import CategoriesComponent from './Categories/CategoryList';\r\n// import AddCategoryComponent from './Categories/AddCategory';\r\n// import DashboardComponent from './Dashboard';\r\n// import UsersComponent from './Users';\r\nimport Routes from './Routes';\r\nimport AuthHelper from '../AuthHelper';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing.unit * 7 + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing.unit * 9 + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 3,\r\n  },\r\n});\r\n\r\nclass Shell extends React.Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n  \r\n  componentDidMount = () => {\r\n    console.log('shell userinfo', AuthHelper.GetUserInfo());\r\n    // this.props.SetUserInfo(AuthHelper.GetUserInfo());\r\n  }\r\n  Logout = () => {\r\n    this.props.LogoutCurrentUser();\r\n    AuthHelper.GetHistory().push({\r\n      pathname: '/login'\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n    console.log('shell props', this.props);\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <Header classes={classes} \r\n                openState={this.state.open} \r\n                onDrawerOpen={this.handleDrawerOpen}\r\n                onLogout={() => this.Logout()}\r\n                />\r\n        <Router>\r\n          <SideDrawer classes={classes} \r\n                  openState={this.state.open} \r\n                  onDrawerClose={this.handleDrawerClose}\r\n                  theme={theme}\r\n                  />\r\n          <main className={classes.content}>\r\n            <div className={classes.toolbar} />\r\n                <Routes />\r\n          </main>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nShell.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state.userReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  SetUserInfo: (userInfo) => dispatch(SetUserInfo(userInfo)),\r\n  LogoutCurrentUser: () => dispatch(LogoutCurrentUser())\r\n  // AddTest: (model, editMode) => dispatch(AddTest(model, editMode)),\r\n  // UpdateTest: (model) => dispatch(UpdateTest(model)),\r\n  // FetchSkills: () => dispatch(FetchSkills()),\r\n  // FetchTests: () => dispatch(FetchTests()),\r\n  // CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n  // OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n  // CurrentTestFieldChange: (val, field, model) => dispatch(CurrentTestFieldChange(val, field, model))\r\n});\r\nexport default withStyles(styles, { withTheme: true })(connect(mapStateToProps, mapDispatchToProps)(Shell));\r\n// export default withStyles(styles, { withTheme: true })(Shell);\r\n","import { ADD_CATEGORY_SUCCESS, ADD_CATEGORY_FAIL, SELECT_CATEGORY,\r\n         UPDATE_CATEGORY_SUCCESS, UPDATE_CATEGORY_FAIL,\r\n         FETCH_CATEGORIES_SUCCESS, \r\n         FETCH_CATEGORIES_FAIL,\r\n         OPEN_SNACKBAR, \r\n         CLOSE_SNACKBAR, \r\n         CURRENT_CATEGORY_FIELD_CHANGE,\r\n         CURRENT_CATEGORY_FIELD_CHANGE_END, \r\n         CATEGORY_SEARCH_BEGIN,\r\n         CATEGORY_SEARCH_SUCCESS} from \"../actions/CategoryActions\";\r\n\r\nconst initial_current_Category = {\r\n    title: '',\r\n    description: ''\r\n}\r\n\r\nexport default (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ADD_CATEGORY_SUCCESS:\r\n        {\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                current_category: {title:'',description:''},\r\n                success_message: 'Category added successfully'\r\n            }\r\n        }\r\n        case UPDATE_CATEGORY_FAIL:\r\n        case ADD_CATEGORY_FAIL:\r\n        {\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        }\r\n        case SELECT_CATEGORY:\r\n        {\r\n            return {\r\n                ...state,\r\n                field_updated: !state.field_updated,\r\n                editMode: true,\r\n                current_category: action.payload\r\n            }\r\n        }\r\n        case UPDATE_CATEGORY_SUCCESS:\r\n        {\r\n            return {\r\n                ...state,\r\n                editMode: false,\r\n                current_category: {title:'',description:''},\r\n                success_message: 'Category Updated Successfully'\r\n            }\r\n        }\r\n        case CURRENT_CATEGORY_FIELD_CHANGE:\r\n        {\r\n            console.log('field change reducer');\r\n            console.log(action.payload);\r\n            \r\n            return {\r\n                ...state,\r\n                field_updated: true,\r\n                current_category: action.payload\r\n            }\r\n        }\r\n        case CURRENT_CATEGORY_FIELD_CHANGE_END:\r\n        {\r\n            return {\r\n                ...state,\r\n                field_updated: false\r\n            }\r\n        }\r\n        case FETCH_CATEGORIES_SUCCESS:\r\n        {\r\n            console.log('fetch categories reducer');\r\n            console.log(action.payload);\r\n            \r\n            return {\r\n                ...state,\r\n                error: null,\r\n                editMode: false,\r\n                current_category: {title:'',description:''},\r\n                success_message: '',\r\n                search_enabled: false,\r\n                categoryList: action.payload\r\n            }\r\n        }\r\n        case CATEGORY_SEARCH_BEGIN:\r\n        {\r\n            return {\r\n                ...state,\r\n                search_enabled: !state.search_enabled,\r\n                search_term: '',\r\n                filteredCategories: state.categoryList\r\n            }\r\n        }\r\n        // case CATEGORY_SEARCH_TERM_CHANGE:\r\n        // {\r\n        //     console.log('search term change reducer');\r\n        //     console.log(action.payload);\r\n            \r\n        //     return {\r\n        //         ...state,\r\n        //         search_term: action.payload\r\n        //     }\r\n        // }\r\n        case CATEGORY_SEARCH_SUCCESS:\r\n        {   \r\n            return {\r\n                ...state,\r\n                search_term: action.payload.searchTerm,\r\n                // search_enabled: false,\r\n                filteredCategories: action.payload.filteredCategories\r\n            }\r\n        }\r\n        case FETCH_CATEGORIES_FAIL:\r\n        {\r\n            return {\r\n                ...state,\r\n                current_category: initial_current_Category,\r\n                error: action.payload\r\n            }\r\n        }\r\n        case OPEN_SNACKBAR:\r\n        {\r\n            return {\r\n                ...state,\r\n                snack_open: true\r\n            }\r\n        }\r\n        case CLOSE_SNACKBAR:\r\n        {\r\n            return {\r\n                ...state,\r\n                snack_open: false\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import { ADD_RMAREQUESTS_BEGIN, ADD_RMAREQUESTS_SUCCESS, ADD_RMAREQUESTS_FAIL, SELECT_CATEGORY,\r\n    UPDATE_RMAREQUESTS_SUCCESS, UPDATE_RMAREQUESTS_FAIL,\r\n    FETCH_RMAREQUESTS_SUCCESS, \r\n    FETCH_RMAREQUESTS_FAIL,\r\n    FETCH_RMAREQUEST_SUCCESS,\r\n    OPEN_SNACKBAR, \r\n    CLOSE_SNACKBAR, \r\n    CURRENT_RMAREQUESTS_FIELD_CHANGE,\r\n    CURRENT_RMAREQUESTS_FIELD_CHANGE_END, \r\n    INITIALIZE_RMA_FIELDS,\r\n    SELECT_RMA_REQUEST, GOBACK_TO_ALL_REQUESTS\r\n    } from '../HiTech/RmaRequestActions'\r\n\r\nconst initial_state = {\r\n    customerDetails: {},\r\n    productList: [],\r\n    current_product: {},\r\n    vendorDetails: {},\r\n    field_version: 0\r\n}\r\n\r\nexport default (state = {}, action) => {\r\nswitch(action.type) {\r\n    case INITIALIZE_RMA_FIELDS:\r\n    {\r\n        return {\r\n            current_rma_request: initial_state\r\n        }\r\n    }\r\n    case ADD_RMAREQUESTS_BEGIN:\r\n    {\r\n        return {\r\n            ...state,\r\n            error: null,\r\n            saving: true\r\n        }\r\n    }\r\n   case ADD_RMAREQUESTS_SUCCESS:\r\n   {\r\n       return {\r\n           ...state,\r\n           error: null,\r\n           current_rma_request: {},\r\n           success_message: 'RMA Request submitted successfully',\r\n           saving: false\r\n       }\r\n   }\r\n   case UPDATE_RMAREQUESTS_FAIL:\r\n   case ADD_RMAREQUESTS_FAIL:\r\n   {\r\n       return {\r\n           ...state,\r\n           error: action.payload\r\n       }\r\n   }\r\n   case UPDATE_RMAREQUESTS_SUCCESS:\r\n   {\r\n       return {\r\n           ...state,\r\n           success_message: 'Category Updated Successfully'\r\n       }\r\n   }\r\n   case CURRENT_RMAREQUESTS_FIELD_CHANGE:\r\n   {\r\n    //    console.log('rma field change reducer');\r\n    //    console.log(action.payload);\r\n       let newState = action.payload;\r\n       \r\n       return {\r\n           ...state,\r\n           current_rma_request: {\r\n               ...state.current_rma_request,\r\n               customerDetails: newState.customerDetails,\r\n               productList: newState.productList,\r\n               current_product: newState.current_product,\r\n               vendorDetails: newState.vendorDetails\r\n           }\r\n       }\r\n    //    return {\r\n    //        ...state,\r\n    //        field_updated: true,\r\n    //        current_rma_request: action.payload\r\n    //    }\r\n   }\r\n   case FETCH_RMAREQUESTS_SUCCESS:\r\n   {\r\n       console.log('fetch rma requests reducer');\r\n       console.log(action.payload);\r\n       \r\n       return {\r\n           ...state,\r\n           error: null,\r\n           success_message: '',\r\n           selectedRmaRequestModel: null,\r\n           rmaRequests: action.payload\r\n       }\r\n   }\r\n   case SELECT_RMA_REQUEST: \r\n   {\r\n       return {\r\n           ...state,\r\n           selectedRmaRequestModel: action.payload\r\n       }\r\n   }\r\n   case GOBACK_TO_ALL_REQUESTS:\r\n   {\r\n       return {\r\n           ...state,\r\n           selectedRmaRequestModel: null\r\n       }\r\n   }\r\n   case FETCH_RMAREQUEST_SUCCESS:\r\n   {\r\n    console.log('fetch single rma requests reducer');\r\n    console.log(action.payload);\r\n        \r\n        return {\r\n            ...state,\r\n            error: null,\r\n            success_message: '',\r\n            viewRmaRequestModel: action.payload\r\n        }\r\n   }\r\n   case FETCH_RMAREQUESTS_FAIL:\r\n   {\r\n       return {\r\n           ...state,\r\n           error: action.payload\r\n       }\r\n   }\r\n   case OPEN_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: true\r\n       }\r\n   }\r\n   case CLOSE_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: false\r\n       }\r\n   }\r\n   default: {\r\n       return state;\r\n   }\r\n}\r\n}","import { combineReducers } from 'redux';\r\nimport categoryReducer from \"./categoryReducer\";\r\nimport skillReducer from \"./skillReducer\";\r\nimport mcqReducer from \"./mcqReducer\";\r\nimport candidateReducer from './candidateReducer';\r\nimport adminTestReducer from './adminTestReducer';\r\nimport testConsoleReducer from './testConsoleReducer';\r\nimport inviteConsoleReducer from './inviteConsoleReducer';\r\nimport userReducer from './userReducer';\r\nimport questionSimulatorConsoleReducer from './questionSimulatorConsoleReducer';\r\n\r\nimport rmaReducer from '../HiTech/rmaReducer';\r\n\r\nexport default combineReducers({\r\n    categoryReducer,\r\n    skillReducer,\r\n    mcqReducer,\r\n    candidateReducer,\r\n    adminTestReducer,\r\n    testConsoleReducer,\r\n    inviteConsoleReducer,\r\n    userReducer,\r\n    questionSimulatorConsoleReducer,\r\n    rmaReducer\r\n});","import { ADD_SKILL_SUCCESS, ADD_SKILL_FAIL,\r\n    FETCH_SKILLS_SUCCESS, \r\n    FETCH_SKILLS_FAIL,\r\n    OPEN_SNACKBAR, \r\n    CLOSE_SNACKBAR, \r\n    CURRENT_SKILL_FIELD_CHANGE,\r\n    CURRENT_SKILL_FIELD_CHANGE_END, \r\n    SKILL_SEARCH_BEGIN,\r\n    SKILL_SEARCH_SUCCESS} from \"../actions/SkillActions\";\r\n\r\n\r\nexport default (state = {}, action) => {\r\nswitch(action.type) {\r\n   case ADD_SKILL_SUCCESS:\r\n   {\r\n       return {\r\n           ...state,\r\n           error: null,\r\n           current_skill: {skill:''},\r\n           success_message: 'Skill added successfully'\r\n       }\r\n   }\r\n   case ADD_SKILL_FAIL:\r\n   {\r\n       return {\r\n           ...state,\r\n           error: action.payload\r\n       }\r\n   }\r\n   case CURRENT_SKILL_FIELD_CHANGE:\r\n   {\r\n       console.log('field change reducer');\r\n       console.log(action.payload);\r\n       \r\n       return {\r\n           ...state,\r\n           field_updated: true,\r\n           current_skill: action.payload\r\n       }\r\n   }\r\n   case CURRENT_SKILL_FIELD_CHANGE_END:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: false\r\n       }\r\n   }\r\n   case FETCH_SKILLS_SUCCESS:\r\n   {\r\n       console.log('fetch skills reducer');\r\n       console.log(action.payload);\r\n       \r\n       return {\r\n           ...state,\r\n           error: null,\r\n           current_skill: {skill:''},\r\n           editMode: false,\r\n           success_message: '',\r\n           search_enabled: false,\r\n           skillList: action.payload\r\n       }\r\n   }\r\n   case SKILL_SEARCH_BEGIN:\r\n   {\r\n       return {\r\n           ...state,\r\n           search_enabled: !state.search_enabled,\r\n           search_term: '',\r\n           filteredSkills: state.skillList\r\n       }\r\n   }\r\n   case SKILL_SEARCH_SUCCESS:\r\n   {   \r\n       return {\r\n           ...state,\r\n           search_term: action.payload.searchTerm,\r\n           filteredSkills: action.payload.filteredSkills\r\n       }\r\n   }\r\n   case FETCH_SKILLS_FAIL:\r\n   {\r\n        console.log('fail skill fetch: ' + action.payload);\r\n        return {\r\n           ...state,\r\n           current_skill: {skill:''},\r\n           error: action.payload\r\n       }\r\n   }\r\n   case OPEN_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: true\r\n       }\r\n   }\r\n   case CLOSE_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: false\r\n       }\r\n   }\r\n   default: {\r\n       return state;\r\n   }\r\n}\r\n}","import { ADD_MCQ_SUCCESS, ADD_MCQ_FAIL, SELECT_MCQ,\r\n    UPDATE_MCQ_SUCCESS, UPDATE_MCQ_FAIL, FETCH_MCQ_FAIL,\r\n    DELETE_MCQ_SUCCESS, DELETE_MCQ_FAIL,\r\n    FETCH_MCQ_SUCCESS, \r\n    OPEN_SNACKBAR, \r\n    CLOSE_SNACKBAR, \r\n    CURRENT_MCQ_FIELD_CHANGE,\r\n    CURRENT_MCQ_FIELD_CHANGE_END, \r\n    MCQ_SEARCH_BEGIN, MCQ_SEARCH_END,\r\n    MCQ_SEARCH_SUCCESS,\r\n    CHOICE_ADDED_TO_MCQ, \r\n    CURRENT_ANSWER_FIELD_CHANGE\r\n} from \"../actions/McqActions\";\r\nimport { FETCH_CATEGORIES_SUCCESS } from '../actions/CategoryActions'; \r\nimport { FETCH_SKILLS_SUCCESS } from \"../actions/SkillActions\";\r\n\r\nexport default (state = {}, action) => {\r\nswitch(action.type) {\r\n   case ADD_MCQ_SUCCESS:\r\n   {\r\n       return {\r\n            ...state,\r\n            error: null,\r\n            current_mcq: { \r\n                question:'',\r\n                description:'',\r\n                category: '',\r\n                skill: '',\r\n                minimumExperience: 0,\r\n                maximumExperience: 10,\r\n                choices: []\r\n                },\r\n            snack_open: true,\r\n            success_message: 'MCQ added successfully'\r\n       }\r\n   }\r\n   case DELETE_MCQ_FAIL:\r\n   case UPDATE_MCQ_FAIL:\r\n   case ADD_MCQ_FAIL:\r\n   {\r\n       return {\r\n           ...state,\r\n           error: action.payload\r\n       }\r\n   }\r\n   case SELECT_MCQ:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: !state.field_updated,\r\n           editMode: true,\r\n           current_MCQ: action.payload\r\n       }\r\n   }\r\n   case UPDATE_MCQ_SUCCESS:\r\n   {\r\n       return {\r\n           ...state,\r\n           editMode: false,\r\n           current_mcq: { \r\n                question:'',\r\n                description:'',\r\n                category: '',\r\n                skill: '',\r\n                minimumExperience: 0,\r\n                maximumExperience: 10,\r\n                choices: []\r\n           },\r\n           success_message: 'MCQ Updated Successfully'\r\n       }\r\n   }\r\n   case DELETE_MCQ_SUCCESS:\r\n   {\r\n       return {\r\n           ...state,\r\n           editMode: false,\r\n           snack_open: true,\r\n           current_mcq: { \r\n                question:'',\r\n                description:'',\r\n                category: '',\r\n                skill: '',\r\n                minimumExperience: 0,\r\n                maximumExperience: 10,\r\n                choices: []\r\n           },\r\n           success_message: 'MCQ Deleted Successfully'\r\n       }\r\n   }\r\n   case CURRENT_MCQ_FIELD_CHANGE:\r\n   {\r\n       console.log('field change reducer');\r\n       console.log(action.payload);\r\n       \r\n       return {\r\n           ...state,\r\n           field_updated: true,\r\n           current_mcq: action.payload\r\n       }\r\n   }\r\n   case CURRENT_MCQ_FIELD_CHANGE_END:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: false\r\n       }\r\n   }\r\n   case CURRENT_ANSWER_FIELD_CHANGE:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: !state.field_updated,\r\n           currentAnswer: action.payload\r\n       }\r\n   }\r\n   case FETCH_MCQ_SUCCESS:\r\n   {\r\n       console.log('fetch mcq reducer');\r\n       console.log(action.payload);\r\n       \r\n       return {\r\n            ...state,\r\n            error: null,\r\n            current_mcq: { \r\n                    question:'',\r\n                    description:'',\r\n                    category: '',\r\n                    skill: '',\r\n                    minimumExperience: 0,\r\n                    maximumExperience: 10,\r\n                    choices: []\r\n            },\r\n            snack_open: true,\r\n            success_message: action.payload.message,\r\n            mcqs: action.payload.data\r\n       }\r\n   }\r\n   case FETCH_SKILLS_SUCCESS:\r\n   {\r\n        console.log('fetch skills reducer');\r\n        console.log(action.payload);\r\n        \r\n        return {\r\n            ...state,\r\n            skills: action.payload\r\n        }\r\n   }\r\n   case FETCH_CATEGORIES_SUCCESS:\r\n   {\r\n       console.log('fetch categories reducer');\r\n       console.log(action.payload);\r\n       \r\n       return {\r\n           ...state,\r\n           error: null,\r\n           current_mcq: { \r\n                question:'',\r\n                description:'',\r\n                category: '',\r\n                skill: '',\r\n                choices: []\r\n           },\r\n           currentAnswer: {\r\n                content: '',\r\n                isCorrect: false\r\n           },\r\n           success_message: '',\r\n           search_enabled: false,\r\n           categories: action.payload\r\n       }\r\n   }\r\n   case CHOICE_ADDED_TO_MCQ: \r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: !state.field_updated,\r\n           current_mcq: action.payload,\r\n           currentAnswer: {\r\n               content: '',\r\n               isCorrect: false\r\n           }\r\n       }\r\n   }\r\n   case MCQ_SEARCH_BEGIN:\r\n   {\r\n       return {\r\n           ...state,\r\n           search_enabled: !state.search_enabled,\r\n           search_term: '',\r\n           //filteredCategories: state.categoryList\r\n       }\r\n   }\r\n   case MCQ_SEARCH_END:\r\n   {\r\n       return {\r\n           ...state,\r\n           search_enabled: !state.search_enabled,\r\n           search_term: '',\r\n           //filteredCategories: state.categoryList\r\n       }\r\n   }\r\n   case MCQ_SEARCH_SUCCESS:\r\n   {   \r\n       return {\r\n           ...state,\r\n           search_term: action.payload.searchTerm,\r\n           filteredCategories: action.payload.filteredCategories\r\n       }\r\n   }\r\n   case FETCH_MCQ_FAIL:\r\n   {\r\n       return {\r\n           ...state,\r\n           current_mcq: { \r\n                question:'',\r\n                description:'',\r\n                category: '',\r\n                skill: '',\r\n                answerId: 0,\r\n                choices: []\r\n            },\r\n           error: action.payload\r\n       }\r\n   }\r\n   case OPEN_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: true\r\n       }\r\n   }\r\n   case CLOSE_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: false\r\n       }\r\n   }\r\n   default: {\r\n       return state;\r\n   }\r\n}\r\n}","import { ADD_CANDIDATE_SUCCESS, ADD_CANDIDATE_FAIL, SELECT_CANDIDATE,\r\n    UPDATE_CANDIDATE_SUCCESS, UPDATE_CANDIDATE_FAIL, FETCH_CANDIDATE_FAIL,\r\n    FETCH_CANDIDATE_SUCCESS, \r\n    OPEN_SNACKBAR, \r\n    CLOSE_SNACKBAR, \r\n    CURRENT_CANDIDATE_FIELD_CHANGE,\r\n    CURRENT_CANDIDATE_FIELD_CHANGE_END, \r\n    CANDIDATE_SEARCH_BEGIN,\r\n    CANDIDATE_SEARCH_SUCCESS\r\n} from \"../actions/CandidateActions\";\r\nimport { FETCH_SKILLS_SUCCESS } from \"../actions/SkillActions\";\r\n\r\nexport default (state = {}, action) => {\r\nswitch(action.type) {\r\n   case ADD_CANDIDATE_SUCCESS:\r\n   {\r\n       return {\r\n           ...state,\r\n           error: null,\r\n           current_candidate: { \r\n               fullName:'',\r\n               email:'',\r\n               contactno: '',\r\n               experienceYears: 0,\r\n               experienceMonths: 10\r\n            },\r\n           success_message: 'CANDIDATE added successfully'\r\n       }\r\n   }\r\n   case UPDATE_CANDIDATE_FAIL:\r\n   case ADD_CANDIDATE_FAIL:\r\n   {\r\n       return {\r\n           ...state,\r\n           error: action.payload\r\n       }\r\n   }\r\n   case SELECT_CANDIDATE:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: !state.field_updated,\r\n           editMode: true,\r\n           current_CANDIDATE: action.payload\r\n       }\r\n   }\r\n   case UPDATE_CANDIDATE_SUCCESS:\r\n   {\r\n       return {\r\n           ...state,\r\n           editMode: false,\r\n           current_candidate: { \r\n                fullName:'',\r\n                email:'',\r\n                contactno: '',\r\n                skill: '',\r\n                experienceYears: 0,\r\n                experienceMonths: 10\r\n           },\r\n           success_message: 'CANDIDATE Updated Successfully'\r\n       }\r\n   }\r\n   case CURRENT_CANDIDATE_FIELD_CHANGE:\r\n   {\r\n       console.log('field change reducer');\r\n       console.log(action.payload);\r\n       \r\n       return {\r\n           ...state,\r\n           field_updated: true,\r\n           current_candidate: action.payload\r\n       }\r\n   }\r\n   case CURRENT_CANDIDATE_FIELD_CHANGE_END:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: false\r\n       }\r\n   }\r\n   case FETCH_CANDIDATE_SUCCESS:\r\n   {\r\n       console.log('fetch candidate reducer');\r\n       console.log(action.payload);\r\n       \r\n       return {\r\n           ...state,\r\n           error: null,\r\n           editMode: false,\r\n           current_candidate: { \r\n                fullName:'',\r\n                email:'',\r\n                contactno: '',\r\n                experienceYears: 0,\r\n                experienceMonths: 10\r\n           },\r\n           success_message: '',\r\n           search_enabled: false,\r\n           candidates: action.payload\r\n       }\r\n   }\r\n   case FETCH_SKILLS_SUCCESS:\r\n   {\r\n        console.log('fetch skills reducer');\r\n        console.log(action.payload);\r\n        \r\n        return {\r\n            ...state,\r\n            current_candidate: { \r\n                 fullName:'',\r\n                 email:'',\r\n                 contactno: '',\r\n                 experienceYears: 0,\r\n                 experienceMonths: 10\r\n            },\r\n            skills: action.payload\r\n        }\r\n   }\r\n   case CANDIDATE_SEARCH_BEGIN:\r\n   {\r\n       return {\r\n           ...state,\r\n           search_enabled: !state.search_enabled,\r\n           search_term: '',\r\n           filteredCandidates: state.contactnoList\r\n       }\r\n   }\r\n   case CANDIDATE_SEARCH_SUCCESS:\r\n   {   \r\n       return {\r\n           ...state,\r\n           search_term: action.payload.searchTerm,\r\n           filteredCandidates: action.payload.filteredCandidates\r\n       }\r\n   }\r\n   case FETCH_CANDIDATE_FAIL:\r\n   {\r\n       return {\r\n           ...state,\r\n           current_candidate: { \r\n                fullName:'',\r\n                email:'',\r\n                contactno: '',\r\n                experienceYears: 0,\r\n                experienceMonths: 10\r\n            },\r\n           error: action.payload\r\n       }\r\n   }\r\n   case OPEN_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: true\r\n       }\r\n   }\r\n   case CLOSE_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: false\r\n       }\r\n   }\r\n   default: {\r\n       return state;\r\n   }\r\n}\r\n}","import { ADD_TEST_SUCCESS, ADD_TEST_FAIL, SELECT_TEST,\r\n    UPDATE_TEST_SUCCESS, UPDATE_TEST_FAIL, FETCH_TESTS_FAIL,\r\n    FETCH_TESTS_SUCCESS, \r\n    OPEN_SNACKBAR, \r\n    CLOSE_SNACKBAR, \r\n    CURRENT_TEST_FIELD_CHANGE,\r\n    CURRENT_TEST_FIELD_CHANGE_END, \r\n    TEST_SEARCH_BEGIN,\r\n    TEST_SEARCH_SUCCESS,\r\n    CHOICE_ADDED_TO_TEST, \r\n    CURRENT_ANSWER_FIELD_CHANGE\r\n} from \"../actions/AdminTestActions\";\r\nimport { FETCH_CATEGORIES_SUCCESS } from '../actions/CategoryActions'; \r\nimport { FETCH_SKILLS_SUCCESS } from \"../actions/SkillActions\";\r\n\r\nexport default (state = {}, action) => {\r\nswitch(action.type) {\r\n   case ADD_TEST_SUCCESS:\r\n   {\r\n       console.log('add test success reducer');\r\n       return {\r\n           ...state,\r\n           error: null,\r\n           current_test: action.payload,\r\n           success_message: 'Test added successfully',\r\n           snack_open: true\r\n       }\r\n   }\r\n   case UPDATE_TEST_FAIL:\r\n   case ADD_TEST_FAIL:\r\n   {\r\n       return {\r\n           ...state,\r\n           error: action.payload\r\n       }\r\n   }\r\n   case SELECT_TEST:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: !state.field_updated,\r\n           editMode: true,\r\n           current_TEST: action.payload\r\n       }\r\n   }\r\n   case UPDATE_TEST_SUCCESS:\r\n   {\r\n       return {\r\n           ...state,\r\n           editMode: false,\r\n           current_mcq: { \r\n                question:'',\r\n                description:'',\r\n                category: '',\r\n                skill: '',\r\n                minimumExperience: 0,\r\n                maximumExperience: 10,\r\n                choices: []\r\n           },\r\n           success_message: 'TEST Updated Successfully'\r\n       }\r\n   }\r\n   case CURRENT_TEST_FIELD_CHANGE:\r\n   {\r\n       console.log('field change reducer');\r\n       console.log(action.payload);\r\n       \r\n       return {\r\n           ...state,\r\n           field_updated: true,\r\n           current_mcq: action.payload\r\n       }\r\n   }\r\n   case CURRENT_TEST_FIELD_CHANGE_END:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: false\r\n       }\r\n   }\r\n   case CURRENT_ANSWER_FIELD_CHANGE:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: !state.field_updated,\r\n           currentAnswer: action.payload\r\n       }\r\n   }\r\n   case FETCH_TESTS_SUCCESS:\r\n   {\r\n       console.log('fetch tests reducer');\r\n       console.log(action.payload);\r\n       let arr = [];\r\n       if(action.payload && action.payload.length > 0) {\r\n           action.payload.map((item, index) => {\r\n               arr.push(item);\r\n           })\r\n       }\r\n       return {\r\n           ...state,\r\n           error: null,\r\n           editMode: !state.editMode,\r\n           current_test: { \r\n                skill:'',\r\n                testName:'',\r\n                duration: 90,\r\n                experienceYears: 5,\r\n                status: 'draft',\r\n                search_enabled: !state.search_enabled,\r\n            },\r\n           success_message: '',\r\n           search_enabled: !state.search_enabled,\r\n           tests: arr\r\n       }\r\n   }\r\n   case FETCH_SKILLS_SUCCESS:\r\n   {\r\n        console.log('fetch skills reducer');\r\n        console.log(action.payload);\r\n        \r\n        return {\r\n            ...state,\r\n            skills: action.payload\r\n        }\r\n   }\r\n   case FETCH_CATEGORIES_SUCCESS:\r\n   {\r\n       console.log('fetch categories reducer');\r\n       console.log(action.payload);\r\n       \r\n       return {\r\n           ...state,\r\n           error: null,\r\n           current_test: { \r\n                question:'',\r\n                description:'',\r\n                category: '',\r\n                skill: '',\r\n                choices: []\r\n           },\r\n           currentAnswer: {\r\n                content: '',\r\n                isCorrect: false\r\n           },\r\n           success_message: '',\r\n           search_enabled: false,\r\n           categories: action.payload\r\n       }\r\n   }\r\n   case CHOICE_ADDED_TO_TEST: \r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: !state.field_updated,\r\n           current_mcq: action.payload,\r\n           currentAnswer: {\r\n               content: '',\r\n               isCorrect: false\r\n           }\r\n       }\r\n   }\r\n   case TEST_SEARCH_BEGIN:\r\n   {\r\n       return {\r\n           ...state,\r\n           search_enabled: !state.search_enabled,\r\n           search_term: '',\r\n           filteredCategories: state.categoryList\r\n       }\r\n   }\r\n   case TEST_SEARCH_SUCCESS:\r\n   {   \r\n       return {\r\n           ...state,\r\n           search_term: action.payload.searchTerm,\r\n           filteredCategories: action.payload.filteredCategories\r\n       }\r\n   }\r\n   case FETCH_TESTS_SUCCESS:\r\n   {\r\n       console.log('fetch tests reducer');\r\n       console.log(action.payload);\r\n       let arr = [];\r\n       if(action.payload && action.payload.length > 0) {\r\n           action.payload.map((item, index) => {\r\n               arr.push(item);\r\n           })\r\n       }\r\n       return {\r\n           ...state,\r\n           error: null,\r\n           editMode: !state.editMode,\r\n           current_test: { \r\n                skill:'',\r\n                testName:'',\r\n                duration: 90,\r\n                experienceYears: 5,\r\n                status: 'draft',\r\n                search_enabled: !state.search_enabled,\r\n            },\r\n           success_message: '',\r\n           search_enabled: !state.search_enabled,\r\n           tests: arr\r\n       }\r\n   }\r\n   case FETCH_TESTS_FAIL:\r\n   {\r\n        console.log('fetch test fail', action.payload);       \r\n        let payload = action.payload;\r\n        if(payload && payload.errorStatus === '401') {\r\n            console.log('return fetch test fail', action.payload);       \r\n            return {\r\n                ...state,\r\n                tests: [],\r\n                skills: [],\r\n                state_changed: !state.state_changed,\r\n                error: payload\r\n            }\r\n        }\r\n       return {\r\n           ...state,\r\n           current_mcq: { \r\n                question:'',\r\n                description:'',\r\n                category: '',\r\n                skill: '',\r\n                answerId: 0,\r\n                choices: []\r\n            },\r\n           error: null\r\n       }\r\n   }\r\n   case OPEN_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: true\r\n       }\r\n   }\r\n   case CLOSE_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: false\r\n       }\r\n   }\r\n   default: {\r\n       return state;\r\n   }\r\n}\r\n}","import { \r\n    FETCH_TEST_SUCCESS, \r\n    OPEN_SNACKBAR, \r\n    CLOSE_SNACKBAR,\r\n    PUBLISH_TEST_SUCCESS\r\n} from \"../actions/TestConsoleActions\";\r\nimport { ADD_QUESTION_TO_TEST } from \"../actions/TestConsoleActions\";\r\nimport { stat } from \"fs\";\r\n\r\nexport default (state = {}, action) => {\r\nswitch(action.type) {\r\n   case FETCH_TEST_SUCCESS:\r\n   {\r\n       console.log('fetch test reducer');\r\n       console.log(action.payload);\r\n       let test = action.payload;\r\n       return {\r\n           ...state,\r\n           current_test: action.payload,\r\n       }\r\n   }\r\n   case ADD_QUESTION_TO_TEST:\r\n   {\r\n       let mcqToAdd = action.payload;\r\n    //    if(!state.current_test.selectedMcqs){\r\n    //     state.current_test.selectedMcqs = [];\r\n    //    }\r\n    //    console.log('test console add mcq to test reducer');\r\n    //    let mcqList = state.current_test.selectedMcqs;\r\n    //    let filterIndex = state.current_test.selectedMcqs.findIndex(item => item.$loki === mcqToAdd.$loki);\r\n    //    if(filterIndex !== undefined && filterIndex > -1) {\r\n    //         mcqList.splice(filterIndex, 1);\r\n    //         mcqToAdd.selected = false;\r\n    //    }\r\n    //    else {\r\n    //        console.log('mcq added in reducer');\r\n    //         mcqToAdd.selected = true;\r\n    //         mcqList.push(mcqToAdd);\r\n    //    }\r\n    //    console.log(state.current_test.selectedMcqs);\r\n    //    console.log(mcqList);\r\n       return {\r\n            ...state,\r\n            mcqAdded: !state.mcqAdded,\r\n            current_test: action.payload\r\n            // current_test: {\r\n            //     ...state.current_test,\r\n            //     selectedMcqs: mcqList\r\n            // }\r\n        }\r\n   }\r\n//    case PUBLISH_TEST_SUCCESS: {\r\n//        return {\r\n//            ...state,\r\n//            m\r\n//        }\r\n//    }\r\n   case OPEN_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: true\r\n       }\r\n   }\r\n   case CLOSE_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: false\r\n       }\r\n   }\r\n   default: {\r\n       return state;\r\n   }\r\n}\r\n}","import { \r\n    SEND_TEST_INVITE_SUCCESS,\r\n    INVITE_INFO_FIELD_CHANGE\r\n} from \"../actions/InviteConsoleActions\";\r\nimport { FETCH_TEST_SUCCESS, OPEN_SNACKBAR, CLOSE_SNACKBAR } from '../actions/TestConsoleActions';\r\n\r\nexport default (state = {}, action) => {\r\nswitch(action.type) {\r\n   case SEND_TEST_INVITE_SUCCESS:\r\n   {\r\n       return {\r\n            ...state,\r\n            inivteAdded: 'yes',\r\n            current_test: action.payload\r\n        }\r\n   }\r\n   case FETCH_TEST_SUCCESS:\r\n   {\r\n        console.log('fetch test reducer');\r\n        console.log(action.payload);\r\n        let test = action.payload;\r\n        return {\r\n           ...state,\r\n           current_test: {\r\n               testId: (action.payload) ? action.payload.$loki : 0,\r\n               ...action.payload\r\n           },\r\n           inivteAdded: 'no',\r\n           inviteInfo: {}\r\n       }\r\n   }\r\n   case INVITE_INFO_FIELD_CHANGE:\r\n   {\r\n       console.log('invite field change reducer');\r\n       console.log(action.payload);\r\n       \r\n       return {\r\n           ...state,\r\n           field_updated: !state.field_updated,\r\n           inviteInfo: action.payload\r\n       }\r\n   }\r\n  case OPEN_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: true\r\n       }\r\n   }\r\n   case CLOSE_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: false\r\n       }\r\n   }\r\n   default: {\r\n       return state;\r\n   }\r\n}\r\n}","import { \r\n    ADD_USER_SUCCESS, \r\n    ADD_USER_FAIL, \r\n    SELECT_USER,\r\n    UPDATE_USER_SUCCESS, UPDATE_USER_FAIL, FETCH_USER_FAIL,\r\n    FETCH_USER_SUCCESS, \r\n    OPEN_SNACKBAR, \r\n    CLOSE_SNACKBAR, \r\n    CURRENT_USER_FIELD_CHANGE,\r\n    CURRENT_USER_FIELD_CHANGE_END, \r\n    USER_SEARCH_BEGIN,\r\n    USER_SEARCH_SUCCESS,\r\n    SET_USER_INFO_LOCAL,\r\n    LOGOUT_CURRENT_USER\r\n} from \"../actions/UserActions\";\r\n// import { FETCH_SKILLS_SUCCESS } from \"../actions/SkillActions\";\r\n// import { UNAUTHORIZED_ACCESS } from \"../actions/TestConsoleActions\";\r\n// import { stat } from \"fs\";\r\n\r\nexport default (state = {}, action) => {\r\nswitch(action.type) {\r\n   case ADD_USER_SUCCESS:\r\n   {\r\n       return {\r\n            ...state,\r\n            error: null,\r\n            current_USER: { \r\n               emailId:'',\r\n               role: 'guest'\r\n            },\r\n            snack_open: true,\r\n            success_message: 'User added successfully'\r\n       }\r\n   }\r\n   case UPDATE_USER_FAIL:\r\n   case ADD_USER_FAIL:\r\n   {\r\n       return {\r\n           ...state,\r\n           error: action.payload\r\n       }\r\n   }\r\n   case SELECT_USER:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: !state.field_updated,\r\n           editMode: true,\r\n           current_USER: action.payload\r\n       }\r\n   }\r\n   case UPDATE_USER_SUCCESS:\r\n   {\r\n       console.log('user updated successfully');\r\n       return {\r\n           ...state,\r\n           editMode: false,\r\n           current_user: { \r\n                emailId:'',\r\n                role: 'guest'\r\n           },\r\n           snack_open: true,\r\n           success_message: 'User Updated Successfully'\r\n       }\r\n   }\r\n   case CURRENT_USER_FIELD_CHANGE:\r\n   {\r\n       console.log('field change reducer');\r\n       console.log(action.payload);\r\n       \r\n       return {\r\n           ...state,\r\n           field_updated: true,\r\n           current_user: action.payload\r\n       }\r\n   }\r\n   case CURRENT_USER_FIELD_CHANGE_END:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: false\r\n       }\r\n   }\r\n   case FETCH_USER_SUCCESS:\r\n   {\r\n       console.log('fetch candidate reducer');\r\n       console.log(action.payload);\r\n       \r\n       return {\r\n           ...state,\r\n           error: null,\r\n           editMode: false,\r\n           current_user: { \r\n                emailId: '',\r\n                role: 'guest'\r\n           },\r\n           success_message: '',\r\n           search_enabled: false,\r\n           users: action.payload\r\n       }\r\n   }\r\n   case USER_SEARCH_BEGIN:\r\n   {\r\n       return {\r\n           ...state,\r\n           search_enabled: !state.search_enabled,\r\n           search_term: '',\r\n           filteredCandidates: state.contactnoList\r\n       }\r\n   }\r\n   case USER_SEARCH_SUCCESS:\r\n   {   \r\n       return {\r\n           ...state,\r\n           search_term: action.payload.searchTerm,\r\n           filteredCandidates: action.payload.filteredCandidates\r\n       }\r\n   }\r\n   case FETCH_USER_FAIL:\r\n   {\r\n       return {\r\n           ...state,\r\n           current_USER: { \r\n                fullName:'',\r\n                email:'',\r\n                contactno: '',\r\n                experienceYears: 0,\r\n                experienceMonths: 10\r\n            },\r\n           error: action.payload\r\n       }\r\n   }\r\n   case SET_USER_INFO_LOCAL:\r\n   {\r\n       return {\r\n           ...state,\r\n           currentUserLocal: action.payload\r\n       }\r\n   }\r\n   case LOGOUT_CURRENT_USER:\r\n   {\r\n       return {\r\n           ...state,\r\n           currentUserLocal: null\r\n       }\r\n   }\r\n   case OPEN_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: true\r\n       }\r\n   }\r\n   case CLOSE_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: false\r\n       }\r\n   }\r\n   default: {\r\n       return state;\r\n   }\r\n}\r\n}","import { LOAD_EXAM_SIMULATOR_SUCCESS } from '../actions/QuestionSimulatorConsoleActions';\r\n\r\nexport default (state = {}, action) => {\r\n    switch(action.type) {\r\n       case LOAD_EXAM_SIMULATOR_SUCCESS:\r\n       {\r\n           console.log('LOAD_EXAM_SIMULATOR_SUCCESS reducer');\r\n           return {\r\n               ...state,\r\n               candidateTestObject: action.payload\r\n           }\r\n       }\r\n       default: {\r\n           return state;\r\n       }    \r\n    }\r\n}","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport { GoogleLogin } from 'react-google-login';\nimport axios from 'axios';\n\nimport Shell from './components/Shell';\nimport SimulatorShell from './Containers/Simulator/SimulatorShell';\n\nimport './App.css';\n\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store\";\nimport config from './config';\nimport AuthHelper from './AuthHelper';\nimport { Paper, Grid, Button, IconButton, Typography } from '@material-ui/core';\nimport { DeveloperMode } from '@material-ui/icons';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAuthenticated: true,\n      user: null,\n      token: ''\n    };\n  }\n\n\n  googleResponse = (response) => {\n    console.log('response', response);\n    const tokenBlob = new Blob([JSON.stringify({access_token: response.accessToken}, null, 2)], {type : 'application/json'});\n    const options = {\n        method: 'POST',\n        body: tokenBlob,\n        mode: 'cors',\n        cache: 'default'\n    };\n    let url = config.adminApiUrl + 'auth/google';\n    console.log('url', url);\n    console.log('access_token', response.access_token);\n    axios.get(url, {\n      headers: {\n        access_token: response.accessToken\n      }\n    }).then((res) => {\n      console.log('res',res);\n      const token = res.headers['x-auth-token'];\n      localStorage.setItem(\"auth-token\", token);\n      this.setState({\n        isAuthenticated: true,\n        user: res.data\n      });\n    });\n    // axios.post(url, tokenBlob)\n    //       .then(r => {\n    //         console.log('internal server response', r);\n    //         const token = r.headers.get('x-auth-token');\n    //         r.json().then(user => {\n    //             if (token) {\n    //                 this.setState({\n    //                   isAuthenticated: true,\n    //                   user,\n    //                   token\n    //                 });\n    //             }\n    //         });\n    //       });\n  };\n/*\nclient_id=\"350931387343-l9s3gs4fnmbj4rk4r4nfvh5siega0s5g.apps.googleusercontent.com\",\nclient_secret=\"nMaeSsEr8e9-j26dstZ6VAJc\"\n*/\n  render() {\n    const { isAuthenticated, user } = this.state;\n    console.log('user', user);\n    return (\n      //(!isAuthenticated || !user) &&\n      // <div style={styles.grid}>\n      // <Grid container spacing={16} >\n      //   <Grid item sm={6} xs={6} md={6}>\n      //       <DeveloperMode className=\"large-svg\"/>\n      //   </Grid>\n      //   <Grid style={styles.rightGrid} item sm={6} xs={6} md={6}>\n      //       <div style={{textAlign: 'center'}}>\n      //           <Typography variant=\"h6\" noWrap style={{color: '#831057'}} >Tech Assessment</Typography>\n      //       </div>\n      //     <div style={{marginBottom: '0%', textAlign: 'center'}}>\n      //         <GoogleLogin\n      //                           clientId=\"350931387343-l9s3gs4fnmbj4rk4r4nfvh5siega0s5g.apps.googleusercontent.com\"\n      //                           buttonText=\"Login with Google\"\n      //                           onSuccess={this.googleResponse}\n      //                           onFailure={this.googleResponse}\n      //                           cookiePolicy={'single_host_origin'}\n      //                       />\n      //     </div>\n      //   </Grid>\n      // </Grid>\n      // </div>\n       /*isAuthenticated &&\n        user && (user.role === \"admin\" || user.role === \"recruiter\") &&\n      <Shell />*/ \n      <Provider store={configureStore()}>\n        <Shell />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n\nconst styles = {\n  grid: {\n    marginTop: '10%',\n    marginLeft: '20%',\n    marginRight: '20%',\n    marginBottom: '20%',\n    border: '3px solid #831057',\n    borderRadius: '10px',\n    // width: '40%',\n    // height: '60%',\n    padding: '10%',\n    paddingTop: '14%'\n  },\n  rightGrid: {\n    // background: '#394'\n  }\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\nexport default function configureStore() {\r\n    return createStore(\r\n        rootReducer,\r\n        applyMiddleware(thunk)\r\n    );\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}