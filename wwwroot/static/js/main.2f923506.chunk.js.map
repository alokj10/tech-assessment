{"version":3,"sources":["config.js","AuthHelper.js","actions/RedirectFromAction.js","repository.js","actions/UserActions.js","components/layouts/Header.js","components/layouts/SideDrawer.js","components/lib/LoadingComponent.js","components/Categories/AddCategory.js","components/Candidates/SelectCandidateExperience.js","components/Candidates/AddCandidate.js","components/Dashboard.js","components/lib/SnackbarComponent.js","Containers/User/EditUser.js","Containers/User/UsersList.js","Containers/User/AddUser.js","Containers/User/UserContainer.js","components/lib/LoginComponent.js","Containers/User/User401.js","Containers/User/UserForbidden.js","Containers/User/ResourceNotFound.js","components/Categories/CategoryList.js","actions/CategoryActions.js","Containers/CategoryContainer.js","components/Skills/AddSkill.js","components/Skills/SkillList.js","Containers/SkillContainer.js","actions/SkillActions.js","actions/TestConsoleActions.js","components/Mcq/AnswerOptions.js","Containers/TestConsole/McqItem.js","Containers/TestConsole/SelectedMcqs.js","Containers/TestConsole/McqSelector.js","Containers/TestConsole/TestConsoleQuestions.js","Containers/TestConsole/TestConsoleCandidates.js","Containers/TestConsole/TestConsoleSettings.js","Containers/TestConsole/TestConsoleTabs.js","Containers/TestConsole/TestConsoleContainer.js","components/Mcq/AddAnswerOption.js","components/Mcq/SelectExperience.js","components/Mcq/AddMcq.js","actions/McqActions.js","components/Mcq/McqList.js","Containers/McqContainer.js","components/Mcq/BulkUpload.js","Containers/CandidateContainer.js","components/AdminTest/AddTest.js","actions/CandidateActions.js","components/AdminTest/TestList.js","Containers/AdminTestContainer.js","actions/AdminTestActions.js","components/Candidates/CandidateList.js","Containers/InviteConsole/SendTestInvite.js","Containers/InviteConsole/InviteConsoleContainer.js","actions/InviteConsoleActions.js","Containers/Simulator/QuestionSimulatorConsoleContainer.js","Containers/Simulator/SimulatorConsoleContainer.js","actions/QuestionSimulatorConsoleActions.js","components/lib/PrivateRoute.js","components/Routes.js","components/Shell.js","reducers/categoryReducer.js","reducers/rootReducer.js","reducers/skillReducer.js","reducers/mcqReducer.js","reducers/candidateReducer.js","reducers/adminTestReducer.js","reducers/testConsoleReducer.js","reducers/inviteConsoleReducer.js","reducers/userReducer.js","reducers/questionSimulatorConsoleReducer.js","App.js","store.js","serviceWorker.js","index.js"],"names":["domain","config","adminApiUrl","candidateApiUrl","domainUrl","minBulkCount","maxBulkCount","validHeaders","prop","name","history","AuthHelper","Login","res","token","headers","data","JSON","stringify","console","log","localStorage","setItem","GetUserInfo","userInfo","getItem","user","parse","getToken","isLoggedIn","UserRoles","LogOut","removeItem","SetHistory","propsHistory","GetHistory","RedirectFromAction","page","hist","push","axios","interceptors","response","use","error","status","repository","getData","url","options","x-access-token","Promise","resolve","reject","get","then","catch","err","saveData","model","post","updateData","put","deleteData","delete","SetUserInfo","dispatch","type","payload","Header","props","classes","openState","react_default","a","createElement","AppBar_default","position","className","classNames","appBar","Object","defineProperty","appBarShift","Toolbar_default","disableGutters","IconButton_default","color","aria-label","onClick","onDrawerOpen","menuButton","hide","Menu_default","Typography_default","variant","noWrap","href","style","styles","welcomeMessage","role","onLogout","edge","aria-haspopup","index_es","marginLeft","MenuItems","routeName","routeCaption","icon","Dashboard","Assessment","Book","ViewQuilt","Polymer","PermIdentity","Airplay","getIcon","menuItem","React","SideDrawer","_classNames","_classNames2","theme","Drawer_default","drawer","drawerOpen","drawerClose","paper","open","toolbar","onDrawerClose","direction","ChevronRight_default","ChevronLeft_default","Divider_default","List_default","map","index","key","react_router_dom","to","ListItem_default","button","ListItemIcon_default","title","ListItemText_default","textDecoration","primary","LoadingComponent","CircularProgress_default","AddCategoryComponent","display","editMode","Card_default","padding","lib_LoadingComponent","noValidate","autoComplete","core_index_es","avatar","Avatar_default","Add_default","Edit_default","action","Button_default","onAdd","CardContent_default","FormControl_default","formControl","TextField_default","id","label","value","onChange","e","onFieldChange","target","margin","multiline","rows","description","CardActions_default","actionButton","size","onSubmit","width","backgroundColor","years","months","SelectCandidateExperience","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","handleClickOpen","handleClose","handleSubmit","onSubmitExperience","state","render","isTestAdmin","Dialog_default","disableBackdropClick","disableEscapeKeyDown","onClose","DialogTitle_default","DialogContent_default","InputLabel_default","htmlFor","Select_default","input","Input_default","item","MenuItem_default","DialogActions_default","Component","AddCandidate","dense","fullName","email","contactno","Candidates_SelectCandidateExperience","componentDidMount","container","xs","sm","card","cardHeader","cardAction","marginTop","connect","objectSpread","userReducer","textAlign","float","borderBottom","SnackbarComponent","openSnack","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","message","snackMessage","Close_default","SnackbarContent_default","root","EditUser","spacing","length","onUpdateUser","CustomTableCell","withStyles","head","palette","common","black","white","body","fontSize","TableCell","UsersList","users","align","Table_default","TableHead_default","TableRow_default","TableBody_default","react","emailId","toUpperCase","User_EditUser","val","field","onDeleteUser","AddUser","fullWidth","marginBottom","UserContainer","reload","componentWillReceiveProps","newprops","oldprops","success_message","FetchUsers","onAddUser","_this$props","current_user","Grid_default","User_AddUser","CurrentUserFieldChange","User_UsersList","UpdateUser","DeleteUser","lib_SnackbarComponent","snack_open","CloseSnackbar","userModel","errorStatus","OpenSnackbar","LoginComponent","googleResponse","access_token","accessToken","pathname","errorMessage","google_login","clientId","buttonText","onSuccess","onFailure","cookiePolicy","top","left","User401","UserForbidden","ResourceNotFound","CategoryList","ViewHeadline_default","onSearchEnable","searchEnabled","Search_default","concat","categories","Collapse_default","in","placeholder","searchTerm","onSearchCategory","divider","onCategorySelect","secondary","UpdateCategory","categoryModel","CategoryContainer","componentWillUpdate","FetchCategories","search_enabled","filteredCategories","categoryList","Categories_AddCategory","AddCategory","current_category","CurrentCategoryFieldChange","Categories_CategoryList","SelectCategory","BeginSearch","search_term","SearchCategory","categoryReducer","filter","toLowerCase","indexOf","AddSkillComponent","skill","SkillList","skills","onSearchSkill","Chip_default","chip","SkillContainer","FetchSkills","filteredSkills","skillList","Skills_AddSkill","AddSkill","current_skill","CurrentSkillFieldChange","Skills_SkillList","SearchSkill","skillReducer","skillModel","FetchTest","testId","AnswerOptions","choices","onChoiceSelect","content","isCorrect","Transition","assign","McqItem","handleDelete","onDeleteMcq","mcq","isSelectable","isEditable","question","category","onAddMcqToTest","selected","onEditClick","TransitionComponent","fullScreen","right","bottom","Mcq_AnswerOptions","SelectedMcqs","selectedMcqs","TestConsole_McqItem","onSelect","openMcq","McqSelector","mcqList","onSelectMcqItem","mcqItem","onSelectMcq","findIndex","$loki","TestConsoleQuestions","currentTest","TestConsole_McqSelector","TestConsole_SelectedMcqs","TestConsoleCandidates","invitations","TestConsoleCandidates_CustomTableCell","inviteInfo","emailTo","testStatus","&:nth-of-type(odd)","background","default","TableRow","TestConsoleSettings","TestConsoleTabs","tabs","TestConsoleTabs_LinkTab","TestConsoleTabs_TabContainer","TestConsole_TestConsoleQuestions","TestConsole_TestConsoleCandidates","TestConsole_TestConsoleSettings","TabContainer","component","children","LinkTab","preventDefault","TestConsoleContainer","componentWillMount","location","onAddTest","AddTest","AddMcqToTest","current_test","onPublish","PublishTest","goBack","testName","subheader","TestConsole_TestConsoleTabs","mcqId","getButton","testConsoleReducer","testModel","filterIndex","undefined","splice","AddAnswerOption","_props$children","currentAnswer","onAnswerFieldChange","onAnswerAdd","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","FormControlLabel_default","control","Switch_default","checked","ExpansionPanelActions_default","experienceLevel","SelectExperience","min","max","AddMcq","OutlinedInput_default","labelWidth","Mcq_SelectExperience","Mcq_AddAnswerOption","UpdateMcq","mcqModel","SearchMcq","FetchMcqs","isDeleted","McqList","DeleteMcq","mcqs","mcqToDisplay","EndSearch","Fab_default","mcqReducer","McqContainer","setTimeout","onAddMcq","Mcq_AddMcq","AddAnswerChoice","current_mcq","CurrentMcqFieldChange","CurrentAnswerFieldChange","answerModel","SelectMcq","minimumExperience","maximumExperience","BulkUpload","handleFileLoaded","fileName","matrixArray","finalJson","columnIndex","validateHeaders","validCount","itemArray","rowIndex","colValue","colIndex","filteredHeaders","startsWith","onUpload","isValid","idx","vh","matrix","matrixLength","handleError","_this$state","react_csv_reader_default","cssClass","onFileLoaded","onError","inputId","inputStyle","CandidateContainer","onAddCandidate","Candidates_AddCandidate","current_candidate","CurrentCandidateFieldChange","candidateReducer","candidateModel","UpdateCandidate","experienceYears","experienceMonths","duration","TestList","tests","TestList_CustomTableCell","test","scope","pendingAttempt","completed","toEvaluate","AdminTestContainer","FetchTests","AdminTest_AddTest","CurrentTestFieldChange","AdminTest_TestList","adminTestReducer","UpdateTest","CandidateList","FetchCandidates","candidates","SearchCandidate","candidateList","SendTestInvite","helperText","emailSubject","margintop","gutterBottom","editorControl","height","InviteConsoleContainer","inviteAdded","onSendInvite","SendInvite","_this$props2","md","InviteConsole_SendTestInvite","InviteInfoFieldChange","inviteConsoleReducer","QuestionSimulatorConsoleContainer","handleAnswerSelect","itemIndex","selectedAnswers","tempAnswers","qEntity","choiceItem","choiceIndex","Inbox_default","SimulatorConsoleContainer","LoadExamSimulator","candidateTestObject","Simulator_QuestionSimulatorConsoleContainer","questionSimulatorConsoleReducer","PrivateRoute","_ref","rest","authed","objectWithoutProperties","react_router","Routes","lib_PrivateRoute","exact","path","DashboardComponent","BulkMcq","CategoriesContainer","SkillsContainer","UsersComponent","Shell","handleDrawerOpen","handleDrawerClose","Logout","LogoutCurrentUser","_this2","CssBaseline_default","layouts_Header","layouts_SideDrawer","components_Routes","zIndex","transition","transitions","create","easing","sharp","leavingScreen","enteringScreen","marginRight","flexShrink","whiteSpace","overflowX","unit","breakpoints","up","alignItems","justifyContent","mixins","flexGrow","withTheme","initial_current_Category","combineReducers","arguments","field_updated","current_MCQ","answerId","current_CANDIDATE","filteredCandidates","contactnoList","current_TEST","arr","state_changed","mcqAdded","inivteAdded","current_USER","currentUserLocal","App","Blob","isAuthenticated","es","store","createStore","rootReducer","applyMiddleware","thunk","components_Shell","Boolean","window","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2f923506.chunk.js","sourcesContent":["var domain = 'http://localhost:3001';\r\n//domain = '';\r\nvar domainUrl = 'http://localhost:3000';\r\nconst validHeaders = [\r\n    { prop: \"category\", name: \"Category\" },\r\n    { prop: \"skill\", name: \"Skill\" },\r\n    { prop: \"question\", name: \"Title\" },\r\n    { prop: \"description\", name: \"Description\" },\r\n    { prop: \"score\", name: \"Score\" },\r\n    { prop: \"minimumExperience\", name: \"Min\" },\r\n    { prop: \"maximumExperience\", name: \"Max\" },\r\n    { prop: \"correctAnswer\", name: \"Answer\" },\r\n    { prop: \"choiceA\", name: \"A\" },\r\n    { prop: \"choiceB\", name: \"B\" },\r\n    { prop: \"choiceC\", name: \"C\" },\r\n    { prop: \"choiceD\", name: \"D\" },\r\n    { prop: \"choiceE\", name: \"E\" }\r\n];\r\n\r\nexport default {\r\n    adminApiUrl: domain + '/api/admin/',\r\n    candidateApiUrl: domain + '/api/candidate/',\r\n    domainUrl: domainUrl,\r\n    minBulkCount: 1,\r\n    maxBulkCount: 30,\r\n    validHeaders\r\n}","var history = {};\r\nconst AuthHelper = {\r\n    Login: (res) => {\r\n        const token = res.headers['x-auth-token'];\r\n        const data = JSON.stringify(res.data);\r\n        console.log('res.data', data);\r\n        localStorage.setItem(\"auth-token\", token);\r\n        localStorage.setItem(\"user-info\", data);\r\n    },\r\n    GetUserInfo: () => {\r\n        let userInfo = localStorage.getItem(\"user-info\");\r\n        if(userInfo) {\r\n            let user = JSON.parse(userInfo);\r\n            console.log('userinfo', user.name);\r\n            return user;\r\n        } else {\r\n            console.log('userinfo not available');\r\n        }\r\n        return null;\r\n    },\r\n    getToken: () => {\r\n        return localStorage.getItem('auth-token');\r\n    },\r\n    isLoggedIn: () => {\r\n        let token = localStorage.getItem('auth-token');\r\n        // console.log('token', token);\r\n        if(token) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    },\r\n    UserRoles: () => {\r\n        return [ \"guest\", \"recruiter\", \"candidate\", \"admin\" ];\r\n    },\r\n    LogOut: () => {\r\n        console.log('remove token');\r\n        localStorage.removeItem('auth-token');\r\n        localStorage.removeItem('user-info');\r\n        // let token = localStorage.getItem('auth-token');\r\n        // console.log('token', token);\r\n    },\r\n    SetHistory: (propsHistory) => {\r\n        console.log('set history', propsHistory);\r\n        history = propsHistory;\r\n    },\r\n    GetHistory: () => {\r\n        console.log('get history');\r\n        return history;\r\n    }\r\n}\r\nexport default AuthHelper;\r\n","import AuthHelper from \"../AuthHelper\";\r\n\r\n// import createHistory from 'history/createBrowserHistory';\r\n\r\n\r\nconst RedirectFromAction = (page) => {\r\n    let hist = AuthHelper.GetHistory();\r\n    console.log('redirect called', typeof(hist));\r\n    if(typeof(hist.push) === 'function'){\r\n        hist.push('/' + page);\r\n    }\r\n}\r\n// let history = createHistory();\r\n// const RedirectFromAction = (page) => {\r\n//     console.log('redirect to 401 called', history);\r\n//     // history.pop();\r\n//     history.push('/unauthorizedUser');\r\n// }\r\nexport default RedirectFromAction;","import axios from 'axios';\r\nimport AuthHelper from './AuthHelper';\r\nimport RedirectFromAction from './actions/RedirectFromAction';\r\nlet History = null;\r\naxios.interceptors.response.use(response => {\r\n        return response;\r\n    }, error => {\r\n    if (error.response.status === 401) {\r\n        console.log('intercept 401', error.response);\r\n        RedirectFromAction('unauthorizedUser');\r\n    }\r\n    else if (error.response.status === 403) {\r\n        console.log('intercept 403', error.response);\r\n        RedirectFromAction('userForbidden');\r\n    }\r\n    else if (error.response.status === 404) {\r\n        console.log('intercept 404', error.response);\r\n        RedirectFromAction('notFound');\r\n    }\r\n    return error;\r\n });\r\n\r\nconst getData = (url) => {\r\n    // History = history;\r\n    let accessToken = AuthHelper.getToken(); //AuthHelper.getToken();\r\n    let options = {\r\n        headers: {\r\n          \"x-access-token\": accessToken\r\n        }\r\n    };\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(url, options)\r\n        .then((res) => {\r\n            console.log('res', res);\r\n            if(res.status === 401) {\r\n                console.log('in resolve not authorized error received');\r\n                return reject(res);\r\n            }\r\n            resolve(res);\r\n        })\r\n        .catch((err) => {\r\n            console.log('err', err);\r\n            reject(err);\r\n        })\r\n    });\r\n    \r\n}\r\n\r\nconst saveData = (url, model) => {\r\n    // History = history;\r\n    let accessToken = AuthHelper.getToken();\r\n    let options = {\r\n        headers: {\r\n          \"x-access-token\": accessToken\r\n        }\r\n    };\r\n    return axios.post(url, model, options);\r\n}\r\n\r\nconst updateData = (url, model) => {\r\n    // History = history;\r\n    let accessToken = AuthHelper.getToken();\r\n    let options = {\r\n        headers: {\r\n          \"x-access-token\": accessToken\r\n        }\r\n    };\r\n    return axios.put(url, model, options);\r\n}\r\n\r\nconst deleteData = (url, model) => {\r\n    // History = history;\r\n    let accessToken = AuthHelper.getToken();\r\n    let options = {\r\n        headers: {\r\n          \"x-access-token\": accessToken\r\n        },\r\n        data: model\r\n    };\r\n    console.log('delete options', options);\r\n    return axios.delete(url, options);\r\n}\r\n\r\nexport default {\r\n    getData,\r\n    saveData,\r\n    updateData,\r\n    deleteData\r\n};","import axios from 'axios';\r\nimport config from '../config';\r\nimport repository from '../repository';\r\nimport { FETCH_SKILLS_BEGIN, FETCH_SKILLS_FAIL, FETCH_SKILLS_SUCCESS } from './SkillActions';\r\nimport AuthHelper from '../AuthHelper';\r\n\r\nexport const ADD_USER_BEGIN = 'ADD_USER_BEGIN';\r\nexport const ADD_USER_SUCCESS = 'ADD_USER_SUCCESS';\r\nexport const ADD_USER_FAIL = 'ADD_USER_FAIL';\r\nexport const USER_SEARCH_BEGIN = 'USER_SEARCH_BEGIN';\r\nexport const USER_SEARCH_SUCCESS = 'USER_SEARCH_SUCCESS';\r\nexport const UPDATE_USER_BEGIN = 'UPDATE_USER_BEGIN';\r\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS';\r\nexport const UPDATE_USER_FAIL = 'UPDATE_USER_FAIL';\r\nexport const SELECT_USER = 'SELECT_USER';\r\nexport const CURRENT_USER_FIELD_CHANGE = 'CURRENT_USER_FIELD_CHANGE';\r\nexport const CURRENT_USER_FIELD_CHANGE_END = 'CURRENT_USER_FIELD_CHANGE_END';\r\nexport const CURRENT_ANSWER_FIELD_CHANGE = 'CURRENT_ANSWER_FIELD_CHANGE';\r\nexport const CURRENT_ANSWER_FIELD_CHANGE_END = 'CURRENT_ANSWER_FIELD_CHANGE_END';\r\nexport const CHOICE_ADDED_TO_USER = 'CHOICE_ADDED_TO_USER';\r\nexport const FETCH_USER_BEGIN = 'FETCH_USER_BEGIN';\r\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS';\r\nexport const FETCH_USER_FAIL = 'FETCH_USER_FAIL';\r\nexport const SET_USER_INFO_LOCAL = 'SET_USER_INFO_LOCAL';\r\nexport const LOGOUT_CURRENT_USER = 'LOGOUT_CURRENT_USER';\r\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS';\r\nexport const DELETE_USER_FAIL = 'DELETE_USER_FAIL';\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\r\nexport const OPEN_SNACKBAR = 'OPEN_SNACKBAR';\r\n\r\n\r\nvar history = {};\r\nexport const SetHistory = (propsHistory) => dispatch => {\r\n    history = propsHistory;\r\n}\r\n\r\nexport const CurrentUserFieldChange = (val, field, model) => dispatch => {\r\n    console.log('USER field change: ' + field);\r\n    console.log(val);\r\n    switch(field)\r\n    {\r\n        case 'emailId':\r\n        {\r\n            model.emailId = val;\r\n            dispatch({\r\n                type: CURRENT_USER_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'role':\r\n        {\r\n            model.role = val;\r\n            dispatch({\r\n                type: CURRENT_USER_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        default:\r\n        {\r\n        }\r\n    }\r\n    dispatch({\r\n        type: CURRENT_USER_FIELD_CHANGE_END\r\n    });\r\n}\r\n\r\nexport const DeleteUser = (userModel) => dispatch => {\r\n    let model ={\r\n        user: userModel\r\n    };\r\n    let url = config.adminApiUrl + 'user';\r\n    console.log('action model', userModel);\r\n    repository.deleteData(url, model)\r\n            .then((res) => {\r\n                console.log('user deleted: ' + res);\r\n                dispatch({\r\n                    type: DELETE_USER_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({\r\n                    type: DELETE_USER_FAIL,\r\n                    payload: err\r\n                });\r\n            });\r\n}\r\n\r\nexport const AddUser = (userModel) => dispatch => {\r\n    let model ={\r\n        user: userModel\r\n    };\r\n    let url = config.adminApiUrl + 'user';\r\n    console.log('action model', userModel);\r\n    repository.saveData(url, model)\r\n            .then((res) => {\r\n                console.log('user added: ' + res);\r\n                dispatch({\r\n                    type: ADD_USER_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({\r\n                    type: ADD_USER_FAIL,\r\n                    payload: err\r\n                });\r\n            });\r\n}\r\n\r\nexport const FetchUsers = () => dispatch => {\r\n    let url = config.adminApiUrl + 'getAllUsers';\r\n    repository.getData(url, history)\r\n        .then((res) => {\r\n            console.log('promise resolved');\r\n            dispatch({\r\n                type: FETCH_USER_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log('promise rejected');\r\n            dispatch({\r\n                type: FETCH_USER_FAIL,\r\n                payload: { errorStatus: '401' }\r\n            });\r\n        });\r\n}\r\n\r\nexport const UpdateUser = (userModel) => dispatch => {\r\n    let url = config.adminApiUrl + 'user';\r\n    let model ={\r\n        user: userModel\r\n    };\r\n    repository.updateData(url, model, history)\r\n        .then((res) => {\r\n            console.log('promise resolved');\r\n            dispatch({\r\n                type: UPDATE_USER_SUCCESS\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log('promise rejected');\r\n            dispatch({\r\n                type: UPDATE_USER_SUCCESS,\r\n                payload: { errorStatus: '401' }\r\n            });\r\n        });\r\n}\r\n\r\nexport const SetUserInfo = (res) => dispatch => {\r\n    AuthHelper.Login(res);\r\n    let userInfo = AuthHelper.GetUserInfo();\r\n    dispatch({\r\n        type: SET_USER_INFO_LOCAL,\r\n        payload: userInfo\r\n    })\r\n}\r\nexport const LogoutCurrentUser = () => dispatch => {\r\n    AuthHelper.LogOut();\r\n    dispatch({\r\n        type: LOGOUT_CURRENT_USER\r\n    })\r\n}\r\n\r\nexport const CloseSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: CLOSE_SNACKBAR\r\n    });\r\n}\r\nexport const OpenSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: OPEN_SNACKBAR\r\n    });\r\n}\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport classNames from 'classnames';\r\nimport { Button, Menu, MenuItem } from '@material-ui/core';\r\nimport { PowerSettingsNew } from '@material-ui/icons';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AuthHelper from '../../AuthHelper';\r\nimport config from '../../config';\r\n\r\nconst Header = (props) => {\r\n    // const classes = useStyles();\r\n    const { classes, openState } = props;\r\n    const logout = () => {\r\n        props.onLogout();\r\n    }\r\n    let userInfo = AuthHelper.GetUserInfo();\r\n    //console.log('header props', userInfo.name);\r\n    return (\r\n        <AppBar\r\n            position=\"fixed\"\r\n            className={classNames(classes.appBar, {\r\n            [classes.appBarShift]: openState,\r\n            })}\r\n        >\r\n            <Toolbar disableGutters={!openState}>\r\n            <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"Open drawer\"\r\n                onClick={() => props.onDrawerOpen()}\r\n                className={classNames(classes.menuButton, {\r\n                [classes.hide]: openState,\r\n                })}\r\n            >\r\n                <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                    <a href={config.domainUrl} style={{color: '#fff'}}>\r\n                        Technical Assessment Admin\r\n                    </a>\r\n            </Typography>\r\n            {userInfo && \r\n            <Typography variant=\"subtitle1\" color=\"inherit\" noWrap style={styles.welcomeMessage}>\r\n                {userInfo.name} ({userInfo.role})\r\n            </Typography>\r\n            }\r\n            {AuthHelper.isLoggedIn() && \r\n                // <Button style={styles.menuButton}\r\n                //     onClick={logout}\r\n                // color=\"inherit\">Logout</Button>\r\n                <IconButton \r\n                    onClick={logout}\r\n                    style={styles.menuButton}\r\n                    edge=\"end\"\r\n                    aria-label=\"Account of current user\"\r\n                    // aria-controls={menuId}\r\n                    aria-haspopup=\"true\"\r\n                    // onClick={handleProfileMenuOpen}\r\n                    color=\"inherit\"\r\n                    >\r\n                    <PowerSettingsNew />\r\n                </IconButton>\r\n            }\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\nexport default Header;\r\nconst styles = {\r\n    menuButton: {\r\n        marginLeft: '20%'\r\n    },\r\n    welcomeMessage: {\r\n        marginLeft: '40%'\r\n    }\r\n}","import React from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport classNames from 'classnames';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n// import MailIcon from '@material-ui/icons/Mail';\r\nimport { Dashboard, Book, Assessment, ViewQuilt, PermIdentity, SupervisorAccount, Polymer, Airplay  } from '@material-ui/icons';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport { Link } from 'react-router-dom'\r\nimport AuthHelper from '../../AuthHelper';\r\n\r\nconst MenuItems = [\r\n    // { routeName: 'login', routeCaption: 'Login', icon: Polymer },\r\n    { routeName: 'dashboard', routeCaption: 'Dashboard', icon: Dashboard },\r\n    { routeName: 'tests', routeCaption: 'Tests', icon: Assessment },\r\n    { routeName: 'mcqs', routeCaption: 'Library', icon: Book },\r\n    { routeName: 'categories', routeCaption: 'Categories', icon: ViewQuilt },\r\n    { routeName: 'skills', routeCaption: 'Skills', icon: Polymer },\r\n    // { routeName: 'candidates', routeCaption: 'Invite Candidates', icon: SupervisorAccount },\r\n    { routeName: 'users', routeCaption: 'Users', icon: PermIdentity },\r\n    { routeName: 'simulator', routeCaption: 'Simulator', icon: Airplay }\r\n];\r\n\r\nconst getIcon = (menuItem) => {\r\n    let icon = menuItem.icon;\r\n    return (\r\n        React.createElement(icon)\r\n    )\r\n}\r\n\r\nconst SideDrawer = (props) => {\r\n    const { classes, openState, theme } = props;\r\n    // console.log('Menuitems', MenuItems);\r\n    return (\r\n            <Drawer\r\n            variant=\"permanent\"\r\n            className={classNames(classes.drawer, {\r\n            [classes.drawerOpen]: openState,\r\n            [classes.drawerClose]: !openState,\r\n            })}\r\n            classes={{\r\n            paper: classNames({\r\n                [classes.drawerOpen]: openState,\r\n                [classes.drawerClose]: !openState,\r\n            }),\r\n            }}\r\n            open={openState}\r\n            >\r\n            <div className={classes.toolbar}>\r\n            <IconButton onClick={() => props.onDrawerClose()}>\r\n                {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n            </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n            {MenuItems.map((menuItem, index) => (\r\n                <div key={index}>\r\n                    {AuthHelper.isLoggedIn() && menuItem.routeName !== 'login' &&\r\n                    <Link to={\"/\" + menuItem.routeName} key={index}>\r\n                        <ListItem button key={menuItem.routeCaption}>\r\n                            {/* <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon> */}\r\n                            <ListItemIcon title={menuItem.routeCaption}>{getIcon(menuItem)}</ListItemIcon>\r\n                            <ListItemText style={{textDecoration: 'none'}} primary={menuItem.routeCaption} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    }\r\n                    {!AuthHelper.isLoggedIn() && menuItem.routeName === 'login' &&\r\n                    <Link to={\"/\" + menuItem.routeName} key={index}>\r\n                        <ListItem button key={menuItem.routeCaption}>\r\n                            <ListItemIcon title={menuItem.routeCaption}>{getIcon(menuItem)}</ListItemIcon>\r\n                            <ListItemText style={{textDecoration: 'none'}} primary={menuItem.routeCaption} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    }\r\n            </div>\r\n            ))}\r\n            </List>\r\n            {/* <Divider />\r\n            <List>\r\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                <Link to=\"/\">\r\n                    <ListItem button key={text}>\r\n                    <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                    <ListItemText primary={text} />\r\n                    </ListItem>\r\n                </Link>\r\n            ))}\r\n            </List> */}\r\n            </Drawer>\r\n                );\r\n}\r\nexport default SideDrawer;","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst LoadingComponent = (props) => {\r\n    return (\r\n        <div>\r\n            <CircularProgress color=\"secondary\" />\r\n        </div>\r\n    );\r\n}\r\nexport default LoadingComponent;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Loading from '../lib/LoadingComponent';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\nconst AddCategoryComponent = (props) => {\r\n    let { model } = props;\r\n    let display = (props && props.editMode) ? 'block' : 'none';\r\n    return (\r\n        <Card style={{padding: \"4%\"}}>\r\n        {!model && <Loading />} \r\n        {model &&    \r\n            <form  noValidate autoComplete=\"off\">\r\n                <CardHeader \r\n                avatar={\r\n                    <Avatar aria-label=\"Recipe\" style={styles.avatar}>\r\n                        {!props.editMode && <AddIcon />}\r\n                        {props.editMode && <EditIcon />}\r\n                    </Avatar>\r\n                    }\r\n                    action={\r\n                        <Button style={{display: display}} onClick={() => props.onAdd()}>Add New</Button>\r\n                    }\r\n                    title={props.editMode ? \r\n                            \"Edit Category\" :\r\n                            \"Add Category\"} \r\n                            >\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                        <TextField\r\n                            id=\"outlined-name\"\r\n                            label=\"Title\"\r\n                            value={model.title}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'title', props.model)}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <br></br>\r\n                    <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                        <TextField\r\n                            id=\"outlined-name\"\r\n                            label=\"Description\"\r\n                            multiline\r\n                            rows=\"4\"\r\n                            value={model.description}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'description', props.model)}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <br></br>\r\n                    <br></br>\r\n                </CardContent>\r\n                <CardActions style={styles.actionButton}>\r\n                    <Button variant=\"contained\" size=\"large\" color=\"primary\" \r\n                                onClick={ () => props.onSubmit(props.model) }>\r\n                        {props.editMode ? 'Update' : 'Submit'}\r\n                    </Button>\r\n                </CardActions>\r\n            </form>}\r\n        </Card>\r\n    );\r\n}\r\nexport default AddCategoryComponent;\r\nconst styles={\r\n    formControl: {\r\n        width: '90%'\r\n    },\r\n    actionButton: {\r\n        marginLeft: '70%'\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n}\r\n/*\r\nclass AddCategoryComponent extends Component {\r\n    // model = {}; \r\n    constructor(props) {\r\n        super(props);\r\n        // this.state = {\r\n        //     model: {\r\n        //         title: '',\r\n        //         description: ''\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    handleChange = (event, ctl) => {\r\n        this.props.onFieldChange(event.target.value, ctl, this.props.model);\r\n        console.log('sending model to parent');\r\n        console.log(this.props.model);\r\n        // switch(ctl)\r\n        // {\r\n        //     case 'title':\r\n        //     {\r\n        //         this.model.title = event.target.value;\r\n        //         break;\r\n        //     }\r\n        //     case 'description':\r\n        //     {\r\n        //         this.model.description = event.target.value;\r\n        //         break;\r\n        //     }\r\n        // }\r\n        // this.setState({\r\n        //     model: this.model\r\n        // });\r\n    }\r\n\r\n    onSubmit = () => {\r\n        console.log('model to save');\r\n        console.log(this.props.model);\r\n\r\n        // this.props.onSubmit(this.state.model);\r\n        this.props.onSubmit(this.props.model);\r\n    }\r\n\r\n    \r\n\r\n    render = () => {\r\n        let { model } = this.props;\r\n        return (\r\n            <Card style={{padding: \"4%\"}}>\r\n            {!model && <Loading />} \r\n            {model &&    \r\n                <form  noValidate autoComplete=\"off\">\r\n                    <CardHeader avatar={\r\n                        <Avatar aria-label=\"Recipe\">\r\n                        +\r\n                        </Avatar>\r\n                        }\r\n                        title=\"Add Category\">\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                        <FormControl variant=\"outlined\" style={{width:\"70%\"}}>\r\n                            <TextField\r\n                                id=\"outlined-name\"\r\n                                label=\"Title\"\r\n                                className={styles.dense}\r\n                                value={model.title}\r\n                                onChange={(e) => this.handleChange(e, 'title')}\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormControl>\r\n                        <br></br>\r\n                        <FormControl variant=\"outlined\" style={{width:\"70%\"}}>\r\n                            <TextField\r\n                                id=\"outlined-name\"\r\n                                label=\"Description\"\r\n                                multiline\r\n                                rows=\"4\"\r\n                                value={model.description}\r\n                                className={styles.dense}\r\n                                onChange={(e) => this.handleChange(e, 'description')}\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormControl>\r\n                        <br></br>\r\n                        <br></br>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <Button variant=\"contained\" size=\"large\" color=\"primary\" \r\n                                    onClick={ () => this.onSubmit() }>\r\n                            Submit\r\n                        </Button>\r\n                    </CardActions>\r\n                </form>}\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n// const mapStateToProps = state => ({\r\n//     ...state\r\n// });\r\n// const mapDispatchToProps = dispatch => ({\r\n//     AddCategory: (model) => dispatch(AddCategory(model))\r\n// });\r\n// export default connect(mapStateToProps, mapDispatchToProps)(AddCategoryComponent);\r\nexport default AddCategoryComponent;\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n    //   display: 'flex',\r\n    //   flexWrap: 'wrap',\r\n    //   flex: 2\r\n    padding: \"20%\"\r\n    },\r\n    textField: {\r\n    //   marginLeft: theme.spacing.unit,\r\n    //   marginRight: theme.spacing.unit,\r\n    },\r\n    dense: {\r\n      marginTop: \"16px\",\r\n      marginLeft: \"30px\"\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n      },\r\n      formControl: {\r\n        width: 320,\r\n      },\r\n      selectEmpty: {\r\n        marginTop: theme.spacing.unit * 2,\r\n      },\r\n});\r\n*/","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst years = [\r\n    0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20\r\n];\r\nconst months = [\r\n    0,1,2,3,4,5,6,7,8,9,10,11\r\n];\r\n\r\nclass SelectCandidateExperience extends Component{\r\n\r\n    // state = {\r\n    //     open: false,\r\n    //     min: '',\r\n    // };\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        open: false,\r\n        years: 0,\r\n        months: 0\r\n      };\r\n    }\r\n\r\n      handleChange = name => event => {\r\n        switch(name)\r\n        {\r\n          case 'years':\r\n          {\r\n            this.setState({\r\n              years: event.target.value\r\n            });\r\n            break;\r\n          }\r\n          case 'months':\r\n          {\r\n            this.setState({\r\n              months: event.target.value\r\n            });\r\n            break;\r\n          }\r\n          default:{}\r\n        }\r\n    };\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n      this.handleClose();\r\n      this.props.onSubmitExperience(this.state.years, this.state.months);\r\n    }\r\n\r\n    render = () => {\r\n      let { isTestAdmin } = this.props; \r\n    return (\r\n        <div>\r\n        <Button variant=\"outlined\" onClick={this.handleClickOpen}>Experience: {this.state.years} - {this.state.months}</Button>\r\n        <Dialog\r\n          disableBackdropClick\r\n          disableEscapeKeyDown\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n        >\r\n          <DialogTitle>Select Experience Level</DialogTitle>\r\n          <DialogContent>\r\n            <form >\r\n                <br></br>\r\n                <br></br>\r\n              <FormControl style={styles.formControl} variant=\"outlined\" >\r\n                <InputLabel htmlFor=\"years-simple\">Years</InputLabel>\r\n                <Select\r\n                  value={this.state.years}\r\n                  onChange={this.handleChange('years')}\r\n                  input={<Input id=\"years-simple\" />}\r\n                >\r\n                {years.map((item, index) => {\r\n                  return <MenuItem key={index} value={item}>{item}</MenuItem>\r\n                })}\r\n                </Select>\r\n              </FormControl>\r\n              {!isTestAdmin && <FormControl style={styles.formControl} variant=\"outlined\" >\r\n                <InputLabel htmlFor=\"months-simple\">Months</InputLabel>\r\n                <Select\r\n                  value={this.state.months}\r\n                  onChange={this.handleChange('months')}\r\n                  input={<Input id=\"months-simple\" />}\r\n                >\r\n                {months.map((item, index) => {\r\n                  return <MenuItem key={index} value={item}>{item}</MenuItem>\r\n                })}\r\n                </Select>\r\n              </FormControl> }\r\n            </form>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleSubmit} color=\"primary\">\r\n              Ok\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    )\r\n    }\r\n}\r\nconst styles = {\r\n    \r\n      formControl: {\r\n        width:\"45%\", \r\n        marginLeft:\"5%\"\r\n      }\r\n    \r\n};\r\nexport default SelectCandidateExperience;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport SelectCandidateExperience from './SelectCandidateExperience';\r\nimport LoadingComponent from '../lib/LoadingComponent';\r\n\r\nconst AddCandidate = (props) => {\r\n        let { model } = props;\r\n\r\n        const onSubmitExperience = (years, months) => {\r\n            props.onFieldChange(years, 'experienceYears', props.model)\r\n            props.onFieldChange(months, 'experienceMonths', props.model)\r\n        }\r\n\r\n        return (\r\n            <Card>\r\n            {!model && <LoadingComponent /> } \r\n            {model &&    \r\n                <form  noValidate autoComplete=\"off\">\r\n                    <CardHeader avatar={\r\n                        <Avatar aria-label=\"Recipe\">\r\n                        +\r\n                        </Avatar>\r\n                    }\r\n                    title=\"Add Candidate\">\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                    <FormControl variant=\"outlined\" style={{width:\"80%\"}}>\r\n                        <TextField\r\n                            id=\"outlined-name\"\r\n                            label=\"Full Name\"\r\n                            className={styles.dense}\r\n                            value={model.fullName}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'fullName', props.model)}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <br></br>\r\n                    <FormControl variant=\"outlined\" style={{width:\"80%\"}}>\r\n                        <TextField\r\n                            id=\"outlined-email\"\r\n                            label=\"Email\"\r\n                            className={styles.dense}\r\n                            value={model.email}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'email', props.model)}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <br></br>\r\n                    <FormControl variant=\"outlined\" style={{width:\"80%\"}}>\r\n                        <TextField\r\n                            id=\"outlined-contactno\"\r\n                            label=\"Contact Number\"\r\n                            className={styles.dense}\r\n                            value={model.contactno}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'contactno', props.model)}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <br></br>\r\n                    <FormControl variant=\"outlined\" style={{width:\"80%\"}}>\r\n                        <SelectCandidateExperience onSubmitExperience={ (years, months) => onSubmitExperience(years, months) } />\r\n                    </FormControl>\r\n                    <br></br>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                    <Button variant=\"contained\" size=\"large\" color=\"primary\"\r\n                                    onClick={ () => props.onSubmit(props.model)}>\r\n                        Submit\r\n                    </Button>\r\n                    </CardActions>\r\n                </form>\r\n            }\r\n            </Card>\r\n        );\r\n}\r\nconst styles = theme => ({\r\n    formControl: {\r\n        width: '70%',\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n});\r\nexport default AddCandidate;","import React, { Component } from 'react';\r\nimport AuthHelper from '../AuthHelper';\r\nimport { connect } from 'react-redux';\r\nimport { SetUserInfo } from '../actions/UserActions';\r\nimport { Card, CardHeader, CardContent, Typography, CardActions, Button, Grid } from '@material-ui/core';\r\n\r\nclass Dashboard extends Component {\r\n    componentDidMount = () => {\r\n        AuthHelper.SetHistory(this.props.history);\r\n        // this.props.SetUserInfo(AuthHelper.GetUserInfo());\r\n    }\r\n    \r\n    \r\n    render = () => {\r\n        return (\r\n            <div>\r\n                <Grid container>\r\n                    <Grid item xs={5} sm={5}>\r\n                        <Card style={styles.card}>\r\n                            <CardHeader title=\"Active Tests\" style={styles.cardHeader}>\r\n                            </CardHeader>\r\n                            <CardContent>\r\n                                <Typography variant=\"subtitle1\">\r\n                                    You have no active tests. Start Creating.\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions style={styles.cardAction}>\r\n                                <Button variant=\"contained\" size=\"small\" color=\"primary\">View All</Button>\r\n                                <a href=\"#\">Click Here</a>\r\n                            </CardActions>\r\n                            \r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={1} sm={1} />\r\n                    <Grid item xs={5} sm={5}>\r\n                        <Card style={styles.card}>\r\n                            <CardHeader title=\"MCQ Library\" style={styles.cardHeader}>\r\n                            </CardHeader>\r\n                            <CardContent>\r\n                                <Typography variant=\"subtitle1\">\r\n                                    You have 10 MCQs in library. Keep adding.\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions style={styles.cardAction}>\r\n                                <Button variant=\"contained\" size=\"small\" color=\"primary\">Start Adding</Button>\r\n                            </CardActions>\r\n                            \r\n                        </Card>\r\n                    </Grid>\r\n                    <br></br><br></br>\r\n                    <Grid item xs={5} sm={5} style={{marginTop: '5%'}}>\r\n                        <Card style={styles.card}>\r\n                            <CardHeader title=\"Candidates\" style={styles.cardHeader}>\r\n                            </CardHeader>\r\n                            <CardContent>\r\n                                <Typography variant=\"subtitle1\">\r\n                                    Your 2 candidates are yet to take test.\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions style={styles.cardAction}>\r\n                                <Button variant=\"contained\" size=\"small\" color=\"primary\">Go to Tests</Button>\r\n                            </CardActions>\r\n                            \r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={1} sm={1} />\r\n                    <Grid item xs={5} sm={5} style={{marginTop: '5%'}}>\r\n                        <Card style={styles.card}>\r\n                            <CardHeader title=\"Skills\" style={styles.cardHeader}>\r\n                            </CardHeader>\r\n                            <CardContent>\r\n                                <Typography variant=\"subtitle1\">\r\n                                    You have defined 25 skill sets for your hiring. Keep it updated.\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions style={styles.cardAction}>\r\n                                <Button variant=\"contained\" size=\"small\" color=\"primary\">View All</Button>\r\n                            </CardActions>\r\n                            \r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state.userReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    SetUserInfo: (userInfo) => dispatch(SetUserInfo(userInfo)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\nconst styles = {\r\n    card: {\r\n        textAlign: 'center'\r\n    },\r\n    cardAction: {\r\n        float: 'right'\r\n    },\r\n    cardHeader: {\r\n        borderBottom: '1px solid #3f51b5',\r\n        // backgroundColor: '#3f51b5',\r\n        color: '#fff'\r\n    }\r\n}","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst SnackbarComponent = (props) => {\r\n    console.log('snack render: ' + props.openSnack);\r\n    let { openSnack } = props;\r\n    return (\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={openSnack}\r\n          autoHideDuration={6000}\r\n          onClose={props.handleClose}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span id=\"message-id\">{props.snackMessage}</span>}\r\n          action={[\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"Close\"\r\n              color=\"inherit\"\r\n              onClick={props.handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>,\r\n          ]}\r\n        >\r\n        <SnackbarContent\r\n            style={styles.root}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\">\r\n                {/* <Icon /> */}\r\n                {props.snackMessage}\r\n                </span>\r\n            }\r\n            action={[\r\n                <IconButton\r\n                key=\"close\"\r\n                aria-label=\"Close\"\r\n                color=\"inherit\"\r\n                // className={classes.close}\r\n                // onClick={onClose}\r\n                >\r\n                <CloseIcon />\r\n                </IconButton>,\r\n            ]}\r\n            // {...other}\r\n            />\r\n        </Snackbar>\r\n    );\r\n}\r\nexport default SnackbarComponent;\r\nconst styles = {\r\n    root: {\r\n        backgroundColor: '#394'\r\n    }\r\n}","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Card, Grid } from '@material-ui/core';\r\nimport { MenuItem, OutlinedInput, Select, InputLabel, IconButton } from '@material-ui/core';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LoadingComponent from '../../components/lib/LoadingComponent';\r\nimport AuthHelper from '../../AuthHelper';\r\n\r\nconst EditUser = (props) => {\r\n        let { model } = props;\r\n\r\n        // const onSubmitExperience = (years, months) => {\r\n        //     props.onFieldChange(years, 'experienceYears', props.model)\r\n        //     props.onFieldChange(months, 'experienceMonths', props.model)\r\n        // }\r\n\r\n        return (\r\n            <div>\r\n            {!model && <LoadingComponent /> } \r\n            {model &&    \r\n                <form  noValidate autoComplete=\"off\">\r\n                    {/* <CardHeader avatar={\r\n                        <Avatar aria-label=\"Recipe\">\r\n                        +\r\n                        </Avatar>\r\n                    }\r\n                    title=\"Edit User\">\r\n                    </CardHeader> */}\r\n                    {/* <CardContent> */}\r\n                    <Grid container spacing={0}>\r\n                            <Grid item xs={6} sm={6}>\r\n                                <FormControl variant=\"standard\">\r\n                                    {/* <InputLabel htmlFor=\"outlined-role-simple\">\r\n                                        Role\r\n                                    </InputLabel> */}\r\n                                    <Select\r\n                                        onChange={(e) => props.onFieldChange(e.target.value, 'role', model)}\r\n                                        value={model.role}\r\n                                        >\r\n                                        <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                        </MenuItem>\r\n                                        {AuthHelper.UserRoles() && AuthHelper.UserRoles().length > 0 &&\r\n                                            AuthHelper.UserRoles().map((item, index) => {\r\n                                            return (\r\n                                                <MenuItem key={index} value={item}>{item}</MenuItem>\r\n                                            )\r\n                                        })}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6} sm={6}>\r\n                                <Button variant=\"contained\" size=\"small\" color=\"primary\" \r\n                                        onClick={ () => props.onUpdateUser(props.model)}>\r\n                                    Update\r\n                                </Button>\r\n                            </Grid>\r\n                    </Grid>\r\n                    \r\n                    {/* <br></br>\r\n                    <FormControl variant=\"outlined\" style={{width:\"80%\"}}>\r\n                        <TextField\r\n                            id=\"outlined-email\"\r\n                            label=\"Email\"\r\n                            className={styles.dense}\r\n                            value={model.emailId}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'email', props.model)}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <br></br> */}\r\n                    {/* </CardContent> */}\r\n                    {/* <CardActions>\r\n                    <Button variant=\"contained\" size=\"small\" color=\"primary\" style={{marginLeft: '70%'}}\r\n                                    onClick={ () => props.onUpdateUser(props.model)}>\r\n                        Update\r\n                    </Button>\r\n                    </CardActions> */}\r\n                </form>\r\n            }\r\n            </div>\r\n        );\r\n}\r\nconst styles = theme => ({\r\n    formControl: {\r\n        width: '70%',\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n});\r\n// const UserRoles = [ \"guest\", \"recruiter\", \"candidate\", \"admin\" ];\r\nexport default EditUser;","import React, { Component, Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { PersonAdd, Delete } from '@material-ui/icons';\r\nimport LoadingComponent from '../../components/lib/LoadingComponent';\r\nimport { Typography, IconButton } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport EditUser from './EditUser';\r\n\r\nconst UsersList = (props) => {\r\n    let { users } = props;\r\n    return (\r\n        <div>\r\n        {!users && <LoadingComponent /> }\r\n        {users && users.length === 0 && <Typography align=\"center\" variant=\"subtitle1\">No Tests Found </Typography> }\r\n        {users && users.length > 0 && \r\n        <Table>\r\n            <TableHead>\r\n            <TableRow>\r\n                <CustomTableCell>Email</CustomTableCell>\r\n                <CustomTableCell align=\"left\">Display Name</CustomTableCell>\r\n                <CustomTableCell align=\"left\">Role</CustomTableCell>\r\n                <CustomTableCell>Edit Role</CustomTableCell>\r\n                <CustomTableCell></CustomTableCell>\r\n            </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n            {users.map((user, index) => (\r\n                <Fragment key={index}>\r\n                <TableRow >\r\n                    <CustomTableCell align=\"left\"><Typography variant=\"subtitle2\" >{user.emailId}</Typography></CustomTableCell>\r\n                    <CustomTableCell align=\"left\"><Typography variant=\"subtitle2\" >{user.name}</Typography></CustomTableCell>\r\n                    <CustomTableCell align=\"left\">{user.role.toUpperCase()}</CustomTableCell>\r\n                    {/* <CustomTableCell align=\"right\">Edit</CustomTableCell> */}\r\n                    <CustomTableCell align=\"left\">\r\n                        <EditUser \r\n                            model={user} \r\n                            onFieldChange={ (val, field, model) => props.onFieldChange(val, field, model) } \r\n                            onUpdateUser={ (model) => props.onUpdateUser(model) }\r\n                        />\r\n                    </CustomTableCell>\r\n                    <CustomTableCell>\r\n                        <IconButton \r\n                            onClick={() => props.onDeleteUser(user)}\r\n                            edge=\"end\"\r\n                            color=\"inherit\"\r\n                            >\r\n                            <Delete />\r\n                        </IconButton>\r\n                    </CustomTableCell>\r\n                </TableRow>\r\n                </Fragment>\r\n            ))}\r\n            </TableBody>\r\n        </Table>\r\n        }\r\n        </div>\r\n    );\r\n}\r\nconst CustomTableCell = withStyles(theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nexport default UsersList;","import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader, DialogContent, Dialog, DialogTitle, DialogActions, Divider } from '@material-ui/core';\r\nimport { MenuItem, OutlinedInput, Select, InputLabel, IconButton } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LoadingComponent from '../../components/lib/LoadingComponent';\r\nimport { Close  } from '@material-ui/icons';\r\nimport AuthHelper from '../../AuthHelper';\r\n\r\nclass AddUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n        \r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n      this.props.onSubmit(this.props.model);\r\n      this.handleClose();\r\n    }\r\n    \r\n    render = () => {\r\n        let { model } = this.props;\r\n        let UserRoles = AuthHelper.UserRoles();\r\n        console.log('current_user', model);\r\n        return (\r\n            <div>\r\n            {!model && <LoadingComponent /> } \r\n            {model && \r\n            <Card>   \r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>Add User</Button>\r\n                <Dialog\r\n                fullWidth={true}\r\n                open={this.state.open}\r\n                onClose={this.handleClose}\r\n                >\r\n                <DialogTitle onClose={this.handleClose}>Create New User</DialogTitle>\r\n                <Divider />\r\n                <DialogContent style={{padding: '4%'}}>\r\n                    <form  noValidate autoComplete=\"off\">\r\n                                <FormControl variant=\"standard\" style={styles.formControl}>\r\n                                    <Select\r\n                                        onChange={(e) => this.props.onFieldChange(e.target.value, 'role', model)}\r\n                                        value={model.role}\r\n                                        >\r\n                                        <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                        </MenuItem>\r\n                                        {UserRoles && UserRoles.length > 0 &&\r\n                                            UserRoles.map((item, index) => {\r\n                                            return (\r\n                                                <MenuItem key={index} value={item}>{item}</MenuItem>\r\n                                            )\r\n                                        })}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                <TextField\r\n                                    id=\"outlined-email\"\r\n                                    label=\"Email Id\"\r\n                                    className={styles.dense}\r\n                                    value={model.emailId}\r\n                                    onChange={(e) => this.props.onFieldChange(e.target.value, 'emailId', model)}\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </FormControl>\r\n                    </form>\r\n                    </DialogContent>\r\n                    <Divider />\r\n                    <DialogActions>\r\n                        <Button variant=\"contained\" size=\"large\" color=\"primary\"\r\n                                        onClick={ () => this.handleSubmit(this.props.model)}>\r\n                            Create User\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Card>}\r\n        \r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst styles = {\r\n    formControl: {\r\n        width: '80%',\r\n        marginBottom: '4%'\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n};\r\nexport default AddUser;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {    FetchUsers, AddUser, CurrentUserFieldChange,\r\n            UpdateUser, DeleteUser, CloseSnackbar,\r\n            OpenSnackbar } from '../../actions/UserActions';            \r\nimport Grid from '@material-ui/core/Grid';\r\nimport SnackbarComponent from '../../components/lib/SnackbarComponent';\r\nimport { Button, Card, CardHeader } from '@material-ui/core';\r\nimport LoadingComponent from '../../components/lib/LoadingComponent';\r\nimport UsersList from './UsersList';\r\nimport AddUserComponent from './AddUser';\r\n\r\nclass UserContainer extends React.Component {\r\n    \r\n    componentDidMount = () => {\r\n        this.reload();\r\n    }\r\n\r\n    componentWillReceiveProps = (newprops, oldprops) => {\r\n        if(newprops.success_message !== '' && newprops.success_message !== undefined) {\r\n            // this.props.OpenSnackbar();\r\n        }\r\n    }\r\n\r\n    reload = () => {\r\n        this.props.FetchUsers();\r\n    }\r\n\r\n    onAddUser = (model) => {\r\n        this.props.AddUser(model)\r\n    }\r\n\r\n    render = () => {\r\n        let { current_user, users } = this.props;\r\n        console.log('User container: render');\r\n        console.log(current_user);\r\n\r\n        return(\r\n            <Grid container spacing={16}>\r\n                <Grid item xs={12} sm={12}>\r\n                {!current_user && <LoadingComponent />}\r\n                {current_user &&\r\n                <Card>\r\n                    <CardHeader action={\r\n                    <AddUserComponent \r\n                        onSubmit={ (model) => this.onAddUser(model) }\r\n                        model={this.props.current_user}\r\n                        onFieldChange={ (val, field, model) => this.props.CurrentUserFieldChange(val, field, model) } \r\n                        />\r\n                    }\r\n                    title=\"Users\"\r\n                    />\r\n                    <UsersList \r\n                        users={users} \r\n                        onFieldChange={ (val, field, model) => this.props.CurrentUserFieldChange(val, field, model) } \r\n                        onUpdateUser={ (model) => this.props.UpdateUser(model) }\r\n                        onDeleteUser={ (model) => this.props.DeleteUser(model) }\r\n                    />\r\n                </Card>\r\n                }\r\n                <SnackbarComponent \r\n                    openSnack={this.props.snack_open} handleClose={() => this.props.CloseSnackbar()} \r\n                    snackMessage={\"Data Saved Successfully!\"} \r\n                    /> \r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.userReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    // AddTest: (model, editMode) => dispatch(AddTest(model, editMode)),\r\n    UpdateUser: (model) => dispatch(UpdateUser(model)),\r\n    DeleteUser: (model) => dispatch(DeleteUser(model)),\r\n    AddUser: (userModel) => dispatch(AddUser(userModel)),\r\n    FetchUsers: () => dispatch(FetchUsers()),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    CurrentUserFieldChange: (val, field, model) => dispatch(CurrentUserFieldChange(val, field, model))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserContainer);","import React, { Component } from 'react';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport config from '../../config';\r\nimport axios from 'axios';\r\nimport AuthHelper from '../../AuthHelper';\r\nimport { SetUserInfo } from '../../actions/UserActions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass LoginComponent extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            errorMessage: ''\r\n        };\r\n    }\r\n    googleResponse = (response) => {\r\n        console.log('response', response);\r\n        // const tokenBlob = new Blob([JSON.stringify({access_token: response.accessToken}, null, 2)], {type : 'application/json'});\r\n        // const options = {\r\n        //     method: 'POST',\r\n        //     body: tokenBlob,\r\n        //     mode: 'cors',\r\n        //     cache: 'default'\r\n        // };\r\n        let url = config.adminApiUrl + 'auth/google';\r\n        axios.get(url, {\r\n          headers: {\r\n            access_token: response.accessToken\r\n          }\r\n        }).then((res) => {\r\n            console.log('res',res);\r\n            const token = res.headers['x-auth-token'];\r\n            if(token) {\r\n                this.props.SetUserInfo(res);\r\n                this.props.history.push({\r\n                    pathname: '/dashboard'\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    errorMessage: 'Wrong Credentials. Please try again.'\r\n                });    \r\n            }\r\n        }).catch((err) => {\r\n            this.props.history.push({\r\n                pathname: '/userForbidden'\r\n            });\r\n            // this.setState({\r\n            //     errorMessage: 'Something went wrong. Please try again later.'\r\n            // })\r\n        });\r\n    }\r\n    \r\n    render = () => {\r\n        return (\r\n            <div style={styles.container}>\r\n                {this.state.errorMessage && <div>{this.state.errorMessage}</div>}\r\n                <GoogleLogin\r\n                            clientId=\"350931387343-l9s3gs4fnmbj4rk4r4nfvh5siega0s5g.apps.googleusercontent.com\"\r\n                            buttonText=\"Login\"\r\n                            onSuccess={this.googleResponse}\r\n                            onFailure={this.googleResponse}\r\n                            cookiePolicy={'single_host_origin'}\r\n                        />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst styles = {\r\n    container: {\r\n        top: '20%',\r\n        left: '25%'\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.userReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    SetUserInfo: (userInfo) => dispatch(SetUserInfo(userInfo)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginComponent);\r\n","import React, { Component } from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst User401 = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h2\">\r\n                User Not Authorized\r\n            </Typography>\r\n        </div>\r\n    )\r\n}\r\nexport default User401;","import React, { Component } from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst UserForbidden = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h6\" >\r\n                User Forbidden or User Not Found. \r\n            </Typography>\r\n            <Typography variant=\"body1\" >\r\n                Please check with Admin if your emailId is added to user list. \r\n            </Typography>\r\n        </div>\r\n    )\r\n}\r\nexport default UserForbidden;","import React, { Component } from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst ResourceNotFound = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h6\" >\r\n                Not Found. \r\n            </Typography>\r\n        </div>\r\n    )\r\n}\r\nexport default ResourceNotFound;","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { CardHeader, CardContent, IconButton } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListIcon from '@material-ui/icons/ViewHeadline';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Collapse from '@material-ui/core/Collapse';\r\n\r\nconst CategoryList = (props) => {\r\n        console.log(props);\r\n        return (\r\n            <Card style={{padding: \"4%\"}}>\r\n                <CardHeader \r\n                    avatar={\r\n                        <Avatar aria-label=\"Recipe\" style={styles.avatar}>\r\n                            <ListIcon />\r\n                        </Avatar>\r\n                    }    \r\n                    action={\r\n                        // !props.searchEnabled && \r\n                        <IconButton onClick={() => props.onSearchEnable()}>\r\n                            {!props.searchEnabled && <SearchIcon />}\r\n                            {props.searchEnabled && <CloseIcon />}\r\n                        </IconButton>\r\n                    }            \r\n                    title={`Categories ${props.categories ? \"(\"+props.categories.length+\")\" : \"\" }`}>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    {\r\n                        <Collapse in={props.searchEnabled}>\r\n                        <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                            <TextField\r\n                                id=\"outlined-name\"\r\n                                label=\"Search\"\r\n                                placeholder=\"Enter search text here\"\r\n                                value={props.searchTerm}\r\n                                onChange={(e) => props.onSearchCategory(e.target.value)}\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormControl>\r\n                        </Collapse>\r\n                    }\r\n                    <List dense={true}>\r\n                        {props.categories && props.categories.length > 0\r\n                        && props.categories.map((item, index) => {\r\n                            return(\r\n                            <ListItem key={index}\r\n                                divider={true}\r\n                                button={true} onClick={ () => props.onCategorySelect(item) }\r\n                            >\r\n                            <ListItemText\r\n                                primary={item.title}\r\n                                secondary={item.description}\r\n                                />\r\n                            </ListItem>)\r\n                        })}\r\n                        \r\n                    </List>\r\n                {(!props.categories || props.categories.length === 0) &&\r\n                <Typography variant=\"h6\" align=\"center\">\r\n                    There are currently no categories added\r\n                </Typography>}\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n}\r\n\r\nexport default CategoryList;\r\n\r\nconst styles = {\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    },\r\n    formControl: {\r\n        width: '70%'\r\n    }\r\n}","import axios from 'axios';\r\nimport config from '../config';\r\nimport repository from '../repository';\r\n\r\nexport const ADD_CATEGORY_BEGIN = 'ADD_CATEGORY_BEGIN';\r\nexport const ADD_CATEGORY_SUCCESS = 'ADD_CATEGORY_SUCCESS';\r\nexport const ADD_CATEGORY_FAIL = 'ADD_CATEGORY_FAIL';\r\nexport const CATEGORY_SEARCH_BEGIN = 'CATEGORY_SEARCH_BEGIN';\r\nexport const CATEGORY_SEARCH_SUCCESS = 'CATEGORY_SEARCH_SUCCESS';\r\nexport const UPDATE_CATEGORY_BEGIN = 'UPDATE_CATEGORY_BEGIN';\r\nexport const UPDATE_CATEGORY_SUCCESS = 'UPDATE_CATEGORY_SUCCESS';\r\nexport const UPDATE_CATEGORY_FAIL = 'UPDATE_CATEGORY_FAIL';\r\nexport const SELECT_CATEGORY = 'SELECT_CATEGORY';\r\nexport const CURRENT_CATEGORY_FIELD_CHANGE = 'CURRENT_CATEGORY_FIELD_CHANGE';\r\nexport const CURRENT_CATEGORY_FIELD_CHANGE_END = 'CURRENT_CATEGORY_FIELD_CHANGE_END';\r\nexport const FETCH_CATEGORIES_BEGIN = 'FETCH_CATEGORIES_BEGIN';\r\nexport const FETCH_CATEGORIES_SUCCESS = 'FETCH_CATEGORIES_SUCCESS';\r\nexport const FETCH_CATEGORIES_FAIL = 'FETCH_CATEGORIES_FAIL';\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\r\nexport const OPEN_SNACKBAR = 'OPEN_SNACKBAR';\r\n\r\nexport const CurrentCategoryFieldChange = (val, field, model) => dispatch => {\r\n    switch(field)\r\n    {\r\n        case 'title':\r\n        {\r\n            model.title = val;\r\n            dispatch({\r\n                type: CURRENT_CATEGORY_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'description':\r\n        {\r\n            model.description = val;\r\n            dispatch({\r\n                type: CURRENT_CATEGORY_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n    }\r\n    dispatch({\r\n        type: CURRENT_CATEGORY_FIELD_CHANGE_END\r\n    });\r\n}\r\n\r\nexport const AddCategory = (categoryModel, editMode) => dispatch => {\r\n    dispatch({\r\n        type: ADD_CATEGORY_BEGIN\r\n    });\r\n    let url = config.adminApiUrl + 'category';\r\n    console.log('action model');\r\n    console.log(categoryModel);\r\n    if(!editMode) {\r\n        repository.saveData(url, categoryModel)\r\n            .then((res) => {\r\n                console.log('category saved: ' + res);\r\n                dispatch({\r\n                    type: ADD_CATEGORY_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({\r\n                    type: ADD_CATEGORY_FAIL,\r\n                    payload: err\r\n                });\r\n            });\r\n    }\r\n    else {\r\n        dispatch(UpdateCategory(categoryModel));\r\n        // this.UpdateCategory(categoryModel);\r\n    }\r\n}\r\n\r\nexport const BeginSearch = () => dispatch => {\r\n    dispatch({\r\n        type: CATEGORY_SEARCH_BEGIN\r\n    });\r\n}\r\n\r\nexport const SearchCategory = (searchTerm, categoryList) => dispatch => {\r\n    console.log(`search term: ${searchTerm}, list length: ${categoryList ? categoryList.length : 0}`);\r\n    if(categoryList && categoryList.length > 0) {\r\n        let filteredCategories = categoryList.filter((item) => {\r\n            return (\r\n                    item.title &&\r\n                    item.title.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1\r\n                    ) ||\r\n                    (\r\n                        item.description &&\r\n                        item.description.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1);\r\n        });\r\n        if(filteredCategories && filteredCategories.length > 0) {\r\n            dispatch({\r\n                type: CATEGORY_SEARCH_SUCCESS,\r\n                payload: {\r\n                    filteredCategories,\r\n                    searchTerm\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            dispatch({\r\n                type: CATEGORY_SEARCH_SUCCESS,\r\n                payload: {\r\n                    filteredCategories: [],\r\n                    searchTerm\r\n                }\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        dispatch({\r\n            type: CATEGORY_SEARCH_SUCCESS,\r\n            payload: {\r\n                filteredCategories: [],\r\n                searchTerm\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const SelectCategory = (categoryModel) => dispatch => {\r\n    dispatch({\r\n        type: SELECT_CATEGORY,\r\n        payload: categoryModel\r\n    })\r\n}\r\n\r\nexport const UpdateCategory = (categoryModel) => dispatch => {\r\n    dispatch({\r\n        type: UPDATE_CATEGORY_BEGIN\r\n    });\r\n    let url = config.adminApiUrl + 'category';\r\n    repository.updateData(url, categoryModel)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: UPDATE_CATEGORY_SUCCESS\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: UPDATE_CATEGORY_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const FetchCategories = () => dispatch => {\r\n    dispatch({\r\n        type: FETCH_CATEGORIES_BEGIN\r\n    });\r\n    let url = config.adminApiUrl + 'getAllCategories';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            console.log('categories fetched');\r\n            dispatch({\r\n                type: FETCH_CATEGORIES_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_CATEGORIES_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const CloseSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: CLOSE_SNACKBAR\r\n    });\r\n}\r\nexport const OpenSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: OPEN_SNACKBAR\r\n    });\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AddCategoryComponent from '../components/Categories/AddCategory';\r\nimport CategoryList from '../components/Categories/CategoryList';\r\nimport {    AddCategory, FetchCategories, UpdateCategory, \r\n            CloseSnackbar, CurrentCategoryFieldChange,\r\n            OpenSnackbar, SelectCategory,\r\n            BeginSearch, SearchCategory } from '../actions/CategoryActions';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SnackbarComponent from '../components/lib/SnackbarComponent';\r\n\r\nclass CategoryContainer extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        console.log('did mount');\r\n        this.reload();\r\n    }\r\n\r\n    componentWillUpdate = () => {\r\n     console.log('container updated');\r\n        if(this.props.success_message !== '') {\r\n            this.props.FetchCategories();\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (newprops, oldprops) => {\r\n        console.log('receiving props');\r\n        console.log(newprops);\r\n        if(newprops.success_message !== '') {\r\n            this.props.FetchCategories();\r\n            this.props.OpenSnackbar();\r\n        }\r\n    }\r\n\r\n    reload = () => {\r\n        this.props.FetchCategories();\r\n    }\r\n\r\n    // shouldComponentUpdate = () => {\r\n    //     console.log('should');\r\n    //     return true;\r\n    // }\r\n\r\n    render = () => {\r\n        console.log('container render');\r\n        console.log(this.props);\r\n        let categories = [];\r\n        if(this.props.search_enabled) {\r\n            categories = this.props.filteredCategories;\r\n        }\r\n        else {\r\n            categories = this.props.categoryList;\r\n        }\r\n        return(\r\n            <Grid container spacing={16}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AddCategoryComponent \r\n                        onSubmit={ (model) => this.props.AddCategory(model, this.props.editMode) }\r\n                        model={this.props.current_category}\r\n                        editMode={this.props.editMode}\r\n                        onAdd={() => this.reload()}\r\n                        onFieldChange={ (val, field, model) => this.props.CurrentCategoryFieldChange(val, field, model) } />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <CategoryList categories={categories} \r\n                        onCategorySelect={ (item) => this.props.SelectCategory(item) } \r\n                        onSearchEnable={ () => this.props.BeginSearch() } \r\n                        searchEnabled={this.props.search_enabled}\r\n                        searchTerm={this.props.search_term}\r\n                        onSearchCategory={ (searchTerm) => this.props.SearchCategory(searchTerm, this.props.categoryList) }/>\r\n                </Grid>\r\n                <SnackbarComponent \r\n                    openSnack={this.props.snack_open} handleClose={() => this.props.CloseSnackbar()} \r\n                    snackMessage={\"Data Saved Successfully!\"} \r\n                                    // \"Category Updated Successfully\" :    \r\n                                    // \"Category Added Successfully!\"}\r\n                    /> \r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.categoryReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    AddCategory: (model, editMode) => dispatch(AddCategory(model, editMode)),\r\n    UpdateCategory: (model) => dispatch(UpdateCategory(model)),\r\n    SelectCategory: (model) => dispatch(SelectCategory(model)),\r\n    FetchCategories: () => dispatch(FetchCategories()),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    BeginSearch: () => dispatch(BeginSearch()),\r\n    SearchCategory: (searchTerm, categoryList) => dispatch(SearchCategory(searchTerm, categoryList)),\r\n    CurrentCategoryFieldChange: (val, field, model) => dispatch(CurrentCategoryFieldChange(val, field, model))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryContainer);","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader, Typography } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Loading from '../lib/LoadingComponent';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst AddSkillComponent = (props) => {\r\n    let { model } = props;\r\n    let display = (props && props.editMode) ? 'block' : 'none';\r\n    return (\r\n        <Card style={{padding: \"4%\"}}>\r\n        {!model && <Loading />} \r\n        {model &&    \r\n            <form  noValidate autoComplete=\"off\">\r\n                <CardHeader \r\n                avatar={\r\n                    <Avatar aria-label=\"Recipe\" style={styles.avatar}>\r\n                       <AddIcon />\r\n                    </Avatar>\r\n                    }\r\n                    title=\"Add Skill\">\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                        <TextField\r\n                            id=\"outlined-name\"\r\n                            label=\"Skill\"\r\n                            value={model.skill}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'skill', props.model)}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <br></br>\r\n                </CardContent>\r\n                <CardActions style={styles.actionButton}>\r\n                    <Button variant=\"contained\" size=\"large\" color=\"primary\" \r\n                                onClick={ () => props.onSubmit(props.model) }>\r\n                        Submit\r\n                    </Button>\r\n                </CardActions>\r\n            </form>}\r\n        </Card>\r\n    );\r\n}\r\nexport default AddSkillComponent;\r\nconst styles={\r\n    formControl: {\r\n        width: '90%'\r\n    },\r\n    actionButton: {\r\n        marginLeft: '70%'\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n}","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport List from '@material-ui/core/List';\r\nimport { CardHeader, CardContent, IconButton } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListIcon from '@material-ui/icons/ViewHeadline';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nconst SkillList = (props) => {\r\n        console.log(props);\r\n        return (\r\n            <Card style={{padding: \"4%\"}}>\r\n                <CardHeader \r\n                    avatar={\r\n                        <Avatar aria-label=\"Recipe\" style={styles.avatar}>\r\n                            <ListIcon />\r\n                        </Avatar>\r\n                    }    \r\n                    action={\r\n                        <IconButton onClick={() => props.onSearchEnable()}>\r\n                            {!props.searchEnabled && <SearchIcon />}\r\n                            {props.searchEnabled && <CloseIcon />}\r\n                        </IconButton>\r\n                    }            \r\n                    title={`Skills ${props.skills ? \"(\"+props.skills.length+\")\" : \"\" }`}>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    {\r\n                        <Collapse in={props.searchEnabled}>\r\n                        <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                            <TextField\r\n                                id=\"outlined-name\"\r\n                                label=\"Search\"\r\n                                placeholder=\"Enter search text here\"\r\n                                value={props.searchTerm}\r\n                                onChange={(e) => props.onSearchSkill(e.target.value)}\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormControl>\r\n                        </Collapse>\r\n                    }\r\n                    <List dense={true}>\r\n                        {props.skills && props.skills.length > 0\r\n                        && props.skills.map((item, index) => {\r\n                            return(\r\n                            <Chip label={item.skill} key={index}\r\n                                style={styles.chip}\r\n                                avatar={\r\n                                    <Avatar>\r\n                                        {item.skill[0]}\r\n                                    </Avatar>   \r\n                                }/>\r\n                            )\r\n                        })}\r\n                        \r\n                    </List>\r\n                {(!props.skills || props.skills.length === 0) &&\r\n                <Typography variant=\"h6\" align=\"center\">\r\n                    There are currently no skills added\r\n                </Typography>}\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n}\r\n\r\nexport default SkillList;\r\n\r\nconst styles = {\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    },\r\n    formControl: {\r\n        width: '70%'\r\n    },\r\n    chip: {\r\n        margin: 10\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AddSkillComponent from '../components/Skills/AddSkill';\r\nimport SkillList from '../components/Skills/SkillList';\r\nimport {    AddSkill, FetchSkills,\r\n            CloseSnackbar, CurrentSkillFieldChange,\r\n            OpenSnackbar,\r\n            BeginSearch, SearchSkill } from '../actions/SkillActions';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SnackbarComponent from '../components/lib/SnackbarComponent';\r\n\r\nclass SkillContainer extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        console.log('did mount');\r\n        this.reload();\r\n    }\r\n\r\n    componentWillUpdate = () => {\r\n     console.log('container updated');\r\n        if(this.props.success_message !== '') {\r\n            this.props.FetchSkills();\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (newprops, oldprops) => {\r\n        console.log('receiving props');\r\n        console.log(newprops);\r\n        if(newprops.success_message !== '') {\r\n            this.props.FetchSkills();\r\n            this.props.OpenSnackbar();\r\n        }\r\n    }\r\n\r\n    reload = () => {\r\n        this.props.FetchSkills();\r\n    }\r\n\r\n    render = () => {\r\n        console.log('container render');\r\n        console.log(this.props);\r\n        let skills = [];\r\n        if(this.props.search_enabled) {\r\n            skills = this.props.filteredSkills;\r\n        }\r\n        else {\r\n            skills = this.props.skillList;\r\n        }\r\n        return(\r\n            <Grid container spacing={16}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AddSkillComponent \r\n                        onSubmit={ (model) => this.props.AddSkill(model, this.props.editMode) }\r\n                        model={this.props.current_skill}\r\n                        onAdd={() => this.reload()}\r\n                        onFieldChange={ (val, field, model) => this.props.CurrentSkillFieldChange(val, field, model) } />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <SkillList skills={skills} \r\n                        onSearchEnable={ () => this.props.BeginSearch() } \r\n                        searchEnabled={this.props.search_enabled}\r\n                        searchTerm={this.props.search_term}\r\n                        onSearchSkill={ (searchTerm) => this.props.SearchSkill(searchTerm, this.props.skillList) }/>\r\n                </Grid>\r\n                <SnackbarComponent \r\n                    openSnack={this.props.snack_open} handleClose={() => this.props.CloseSnackbar()} \r\n                    snackMessage={\"Data Saved Successfully!\"} \r\n                    /> \r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.skillReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    AddSkill: (model, editMode) => dispatch(AddSkill(model, editMode)),\r\n    FetchSkills: () => dispatch(FetchSkills()),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    BeginSearch: () => dispatch(BeginSearch()),\r\n    SearchSkill: (searchTerm, categoryList) => dispatch(SearchSkill(searchTerm, categoryList)),\r\n    CurrentSkillFieldChange: (val, field, model) => dispatch(CurrentSkillFieldChange(val, field, model))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SkillContainer);","import axios from 'axios';\r\nimport config from '../config';\r\nimport repository from '../repository';\r\n\r\nexport const ADD_SKILL_BEGIN = 'ADD_SKILL_BEGIN';\r\nexport const ADD_SKILL_SUCCESS = 'ADD_SKILL_SUCCESS';\r\nexport const ADD_SKILL_FAIL = 'ADD_SKILL_FAIL';\r\nexport const SKILL_SEARCH_BEGIN = 'SKILL_SEARCH_BEGIN';\r\nexport const SKILL_SEARCH_SUCCESS = 'SKILL_SEARCH_SUCCESS';\r\nexport const CURRENT_SKILL_FIELD_CHANGE = 'CURRENT_SKILL_FIELD_CHANGE';\r\nexport const CURRENT_SKILL_FIELD_CHANGE_END = 'CURRENT_SKILL_FIELD_CHANGE_END';\r\nexport const FETCH_SKILLS_BEGIN = 'FETCH_SKILLS_BEGIN';\r\nexport const FETCH_SKILLS_SUCCESS = 'FETCH_SKILLS_SUCCESS';\r\nexport const FETCH_SKILLS_FAIL = 'FETCH_SKILLS_FAIL';\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\r\nexport const OPEN_SNACKBAR = 'OPEN_SNACKBAR';\r\n\r\nexport const CurrentSkillFieldChange = (val, field, model) => dispatch => {\r\n    switch(field)\r\n    {\r\n        case 'skill':\r\n        {\r\n            model.skill = val;\r\n            dispatch({\r\n                type: CURRENT_SKILL_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n    }\r\n    dispatch({\r\n        type: CURRENT_SKILL_FIELD_CHANGE_END\r\n    });\r\n}\r\n\r\nexport const AddSkill = (skillModel) => dispatch => {\r\n    dispatch({\r\n        type: ADD_SKILL_BEGIN\r\n    });\r\n    let url = config.adminApiUrl + 'skill';\r\n    console.log('action model');\r\n    console.log(skillModel);\r\n    repository.saveData(url, skillModel)\r\n        .then((res) => {\r\n            console.log('skill saved: ' + res);\r\n            dispatch({\r\n                type: ADD_SKILL_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: ADD_SKILL_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n\r\n}\r\n\r\nexport const BeginSearch = () => dispatch => {\r\n    dispatch({\r\n        type: SKILL_SEARCH_BEGIN\r\n    });\r\n}\r\n\r\nexport const SearchSkill = (searchTerm, skillList) => dispatch => {\r\n    console.log(`search term: ${searchTerm}, list length: ${skillList ? skillList.length : 0}`);\r\n    if(skillList && skillList.length > 0) {\r\n        let filteredSkills = skillList.filter((item) => {\r\n            return (\r\n                    item.skill &&\r\n                    item.skill.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1\r\n                    );\r\n        });\r\n        if(filteredSkills && filteredSkills.length > 0) {\r\n            dispatch({\r\n                type: SKILL_SEARCH_SUCCESS,\r\n                payload: {\r\n                    filteredSkills,\r\n                    searchTerm\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            dispatch({\r\n                type: SKILL_SEARCH_SUCCESS,\r\n                payload: {\r\n                    filteredSkills: [],\r\n                    searchTerm\r\n                }\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        dispatch({\r\n            type: SKILL_SEARCH_SUCCESS,\r\n            payload: {\r\n                filteredSkills: [],\r\n                searchTerm\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const FetchSkills = () => dispatch => {\r\n    dispatch({\r\n        type: FETCH_SKILLS_BEGIN\r\n    });\r\n    let url = config.adminApiUrl + 'getAllSkills';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            console.log('skills fetched');\r\n            dispatch({\r\n                type: FETCH_SKILLS_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_SKILLS_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const CloseSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: CLOSE_SNACKBAR\r\n    });\r\n}\r\nexport const OpenSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: OPEN_SNACKBAR\r\n    });\r\n}\r\n","import axios from 'axios';\r\nimport config from '../config';\r\nimport repository from '../repository';\r\n\r\nexport const ADD_QUESTION_TO_TEST = 'ADD_QUESTION_TO_TEST';\r\nexport const PUBLISH_TEST_SUCCESS = 'PUBLISH_TEST_SUCCESS';\r\nexport const PUBLISH_TEST_FAIL = 'PUBLISH_TEST_FAIL';\r\nexport const FETCH_TEST_SUCCESS = 'FETCH_TEST_SUCCESS';\r\nexport const FETCH_TEST_FAIL = 'FETCH_TEST_FAIL';\r\nexport const TEST_PUBLISHED = 'TEST_PUBLISHED';\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\r\nexport const OPEN_SNACKBAR = 'OPEN_SNACKBAR';\r\n\r\nvar history = {};\r\nexport const SetHistory = (propsHistory) => dispatch => {\r\n    history = propsHistory;\r\n}\r\n\r\nexport const FetchTest = (testId) => dispatch => {\r\n    console.log('fetch test: ' + testId);\r\n    let url = config.adminApiUrl + 'getTest' + '?testId=' + testId;\r\n    repository.getData(url, history)\r\n        .then((res) => {\r\n            console.log('test fetched: ');\r\n            console.log(res);\r\n            dispatch({\r\n                type: FETCH_TEST_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_TEST_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const AddMcqToTest = (mcqItem, testModel) => dispatch => {\r\n    let url = config.adminApiUrl + 'test';\r\n    \r\n    if(!testModel.selectedMcqs){\r\n        testModel.selectedMcqs = [];\r\n    }\r\n    let mcqList = testModel.selectedMcqs;\r\n    let filterIndex = testModel.selectedMcqs.findIndex(item => item.$loki === mcqItem.$loki);\r\n    if(filterIndex !== undefined && filterIndex > -1) {\r\n        testModel.selectedMcqs.splice(filterIndex, 1);\r\n    }\r\n    else {\r\n        testModel.selectedMcqs.push(mcqItem);\r\n    }\r\n    repository.updateData(url, testModel, history)\r\n        .then((res) => {\r\n            console.log('test updated');\r\n            console.log(res);\r\n            dispatch({\r\n                type: ADD_QUESTION_TO_TEST,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n\r\n        })\r\n}\r\n\r\nexport const PublishTest = (testModel) => dispatch => {\r\n    \r\n    let url = config.adminApiUrl + 'test';\r\n    console.log('action model');\r\n    console.log(testModel);\r\n    testModel.status = 'published';\r\n    repository.updateData(url, testModel, history)\r\n        .then((res) => {\r\n            console.log('test published');\r\n            console.log(res);\r\n            dispatch({\r\n                type: TEST_PUBLISHED,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: PUBLISH_TEST_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n    \r\n}\r\n\r\nexport const CloseSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: CLOSE_SNACKBAR\r\n    });\r\n}\r\nexport const OpenSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: OPEN_SNACKBAR\r\n    });\r\n}\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst AnswerOptions = (props) => {\r\n        return (\r\n            <div>\r\n                <Typography variant=\"caption\">Choices</Typography>\r\n                <List dense={true}>\r\n                        {props.choices && props.choices.length > 0\r\n                        && props.choices.map((item, index) => {\r\n                            return(\r\n                            <ListItem key={index}\r\n                                divider={true}\r\n                                button={false} onClick={ () => props.onChoiceSelect && props.onChoiceSelect(item) }\r\n                            >\r\n                            <ListItemText\r\n                                primary={item.content}\r\n                                secondary={item.isCorrect ? 'Correct' : 'Wrong'}\r\n                                />\r\n                            </ListItem>)\r\n                        })}\r\n                        \r\n                </List>\r\n\r\n            </div>\r\n        );\r\n}\r\nexport default AnswerOptions;","import React, { Component } from 'react';\r\nimport { Card, CardContent, CardActions, ListItem, ListItemText, \r\n        ListItemSecondaryAction, IconButton, Slide,\r\n        Dialog, DialogTitle, DialogContent, Divider,\r\n        Typography, \r\n        DialogActions,\r\n        Button} from '@material-ui/core';\r\nimport { AddBox, Close, Remove, Edit, Delete } from '@material-ui/icons';\r\nimport AnswerOptions from '../../components/Mcq/AnswerOptions';\r\n\r\nconst Transition = (props) => {\r\n    return <Slide direction=\"up\" {...props} />\r\n}\r\n\r\nclass McqItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n    \r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        console.log('handle close');\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.props.onDeleteMcq();\r\n        this.setState({ open: false });\r\n    }\r\n\r\n    render = () => {\r\n        let { mcq, isSelectable, isEditable } = this.props; \r\n        return (\r\n            <div>\r\n                \r\n                <ListItem \r\n                    divider={true} \r\n                    onClick={this.handleClickOpen}\r\n                    button={true}\r\n                    >\r\n                    <ListItemText primary={mcq.question} secondary={`${mcq.category} - ${mcq.skill}`}>\r\n                    </ListItemText>\r\n                    {isSelectable && \r\n                    <ListItemSecondaryAction>\r\n                        <IconButton onClick={() => this.props.onAddMcqToTest()}>\r\n                            {!mcq.selected && \r\n                            <AddBox fontSize=\"large\" color=\"secondary\" />\r\n                            }\r\n                            {mcq.selected && \r\n                            <Remove fontSize=\"large\" color=\"secondary\" />\r\n                            }\r\n                        </IconButton>\r\n                    </ListItemSecondaryAction>}\r\n                    {isEditable && \r\n                    <ListItemSecondaryAction>\r\n                        <IconButton onClick={() => this.props.onEditClick(mcq)}>\r\n                            <Edit fontSize=\"small\" color=\"secondary\" />\r\n                        </IconButton>\r\n                    </ListItemSecondaryAction>}\r\n                </ListItem>\r\n                <Dialog\r\n                    TransitionComponent={Transition}\r\n                    fullScreen\r\n                    style={{left: '20%', right: '20%', top: '10%', bottom: '10%' }}\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <DialogTitle onClose={this.handleClose}>\r\n                        <Typography variant=\"display1\">\r\n                            {mcq.question}\r\n                        </Typography>\r\n                        <IconButton onClick={this.handleClose} style={{right: '4%', top: '1%', position:'absolute'}}>\r\n                            <Close />\r\n                        </IconButton>\r\n                    </DialogTitle>\r\n                    <Divider />\r\n                    <DialogContent style={{padding: '4%'}}>\r\n                        <p>{mcq.description}</p>\r\n                        <AnswerOptions choices={mcq.choices}/>\r\n                    </DialogContent>\r\n                    {isEditable &&\r\n                    <DialogActions>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={this.handleDelete} >\r\n                            Delete\r\n                        </Button>\r\n                    </DialogActions>\r\n                    }\r\n                </Dialog>\r\n            </div>\r\n        );  \r\n    }\r\n}\r\nexport default McqItem;","import React, { Component } from 'react';\r\nimport { Typography, List, ListItem, ListItemText } from '@material-ui/core';\r\nimport McqItem from './McqItem';\r\n\r\nconst SelectedMcqs = (props) => {\r\n    let { selectedMcqs } = props;\r\n    \r\n    console.log('SelectedMcqs render');\r\n    console.log(selectedMcqs);\r\n    return (\r\n        <div>\r\n        {selectedMcqs && selectedMcqs.length > 0 &&\r\n            <List>\r\n                {selectedMcqs.map((item, index) => {\r\n                    return (\r\n                        <McqItem mcq={item}  key={index}\r\n                                    onSelect={ () => props.openMcq(item) }\r\n                                    isSelectable={false} />\r\n                    );\r\n                })}\r\n            </List>\r\n        }\r\n        {!selectedMcqs && \r\n            <Typography variant=\"subtitle1\">No questions selected</Typography>\r\n        }\r\n        {selectedMcqs && selectedMcqs.length === 0 && \r\n            <Typography variant=\"subtitle1\">No questions selected</Typography>\r\n        }\r\n        </div>\r\n    )\r\n}\r\nexport default SelectedMcqs;","import React, { Component } from 'react';\r\nimport { Dialog, DialogContent, DialogTitle,\r\n    Divider, DialogActions, Card, CardHeader, Button, IconButton, CardContent, Slide, List, Typography } from '@material-ui/core';\r\nimport config from '../../config';\r\nimport axios from 'axios';\r\nimport McqItem from './McqItem';\r\nimport { Close } from '@material-ui/icons';\r\nimport repository from '../../repository';\r\n\r\nconst Transition = (props) => {\r\n    return <Slide direction=\"left\" {...props} />\r\n}\r\n\r\nclass McqSelector extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n            mcqList: [],\r\n            error: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n            \r\n        let url = config.adminApiUrl + 'getAllMcqs';\r\n        repository.getData(url)\r\n            .then((res) => {\r\n                console.log('MCQ fetched');\r\n                this.setState({\r\n                    mcqList: res.data,\r\n                    error: ''\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                this.setState({\r\n                    error: err\r\n                });\r\n            });\r\n    }\r\n\r\n    onSelectMcqItem = (mcqItem) => {\r\n        this.props.onSelectMcq(mcqItem);\r\n    }\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        console.log('handle close');\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    render = () => {\r\n        let { onAddMcqToTest, selectedMcqs } = this.props;\r\n        let { mcqList } = this.state;\r\n        if(selectedMcqs && selectedMcqs.length > 0) {\r\n            selectedMcqs.map((item, index) => {\r\n                // console.log(`selectedMcq: ${item.$loki}`);\r\n            })\r\n        }\r\n        return (\r\n            <div>\r\n            <Card>   \r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>Add Mcq To Test</Button>\r\n                <Dialog\r\n                TransitionComponent={Transition}\r\n                fullScreen\r\n                style={{left: '20%'}}\r\n                open={this.state.open}\r\n                onClose={this.handleClose}\r\n                >\r\n                    <DialogTitle onClose={this.handleClose}>\r\n                        <Typography variant=\"title\">\r\n                            Select MCQ to Add\r\n                        </Typography>\r\n                        <IconButton onClick={this.handleClose} style={{right: '4%', top: '1%', position:'absolute'}}>\r\n                            <Close />\r\n                        </IconButton>\r\n                    </DialogTitle>\r\n                    <Divider />\r\n                    <DialogContent style={{padding: '4%'}}>\r\n                    <List>\r\n                        {mcqList && mcqList.length > 0 &&\r\n                        mcqList.map((item, index) => {\r\n                            // console.log(`item: ${item.$loki}`);\r\n                            if(selectedMcqs && selectedMcqs.findIndex(mcq => {\r\n                                console.log(`${mcq.$loki} == ${item.$loki}, ${mcq.$loki == item.$loki}`);\r\n                                return (mcq.$loki == item.$loki) || (mcq.$loki === item.$loki)\r\n                            }) > -1) {\r\n                                // console.log(`selected mcq: ${item.question}, total: ${mcqList.length}`);\r\n                                item.selected = true;\r\n                            } else {\r\n                                // console.log(`selected mcq: ${item.$loki}, total: ${mcqList.length}`);\r\n                                item.selected = false;\r\n                            }\r\n                            return (\r\n                            <McqItem    mcq={item} key={index}\r\n                                        onAddMcqToTest={() => this.props.onSelectMcq(item) } \r\n                                        isSelectable={true}\r\n                                        isEditable={false} />\r\n                            );\r\n                        })}\r\n                    </List>\r\n                    </DialogContent>\r\n                        {/* <Divider />\r\n                    <DialogActions>\r\n                        <Button variant=\"contained\" size=\"large\" color=\"primary\"\r\n                                        onClick={ () => this.handleSubmit(this.props.model)}>\r\n                            Create Test\r\n                        </Button>\r\n                    </DialogActions> */}\r\n                </Dialog>\r\n            </Card>\r\n        \r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default McqSelector;","import React, { Component } from 'react';\r\nimport { Card, CardHeader, Button, IconButton, CardContent } from '@material-ui/core';\r\nimport { AddBox } from '@material-ui/icons';\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom';\r\nimport SelectedMcqs from './SelectedMcqs';\r\nimport McqSelector from'./McqSelector';\r\n\r\nclass TestConsoleQuestions extends Component {\r\n\r\n    render = () => {\r\n        let { selectedMcqs, currentTest } = this.props;\r\n        console.log('test console questions render');\r\n        console.log(selectedMcqs);\r\n        return (\r\n            <Card>\r\n                {currentTest && currentTest.status==='draft' &&\r\n                <CardHeader action={\r\n                    <McqSelector \r\n                        onSelectMcq={(mcqItem) => this.props.onSelectMcq(mcqItem)} \r\n                        selectedMcqs={selectedMcqs}\r\n                        />\r\n                }\r\n                />\r\n                }\r\n                <CardContent>\r\n                    <SelectedMcqs selectedMcqs={selectedMcqs} />\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\nexport default TestConsoleQuestions;","import React, { Component } from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport { Card, CardHeader, CardContent } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//     root: {\r\n//       width: '100%',\r\n//       marginTop: theme.spacing(3),\r\n//       overflowX: 'auto',\r\n//     },\r\n//     table: {\r\n//       minWidth: 700,\r\n//     },\r\n// }));\r\n\r\nclass TestConsoleCandidates extends Component {\r\n\r\n    render = () => {\r\n        // const classes = useStyles();\r\n        let { currentTest } = this.props;\r\n\r\n        if(currentTest && currentTest.invitations && currentTest.invitations.length > 0){\r\n            return (\r\n                <div>\r\n                {/* <Card>\r\n                    <CardContent> */}\r\n                    <Table>\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <CustomTableCell>Email</CustomTableCell>\r\n                            <CustomTableCell align=\"left\">Status</CustomTableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {currentTest.invitations.map((inviteInfo, index) => (\r\n                            <TableRow key={index}>\r\n                            <CustomTableCell align=\"left\"><Typography variant=\"subtitle2\" >{inviteInfo.emailTo}</Typography></CustomTableCell>\r\n                            <CustomTableCell align=\"left\"><Typography variant=\"subtitle2\" >{inviteInfo.testStatus}</Typography></CustomTableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                    {/* </CardContent>\r\n                </Card> */}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Typography variant=\"subtitle1\">No Invitations Sent</Typography> \r\n            </div> \r\n        )\r\n\r\n        // return (\r\n        //     <Paper className={classes.root}>\r\n        //         <Table className={classes.table}>\r\n        //             <TableHead>\r\n        //             <TableRow>\r\n        //                 <StyledTableCell>Email</StyledTableCell>\r\n        //                 <StyledTableCell align=\"right\">Status</StyledTableCell>\r\n        //             </TableRow>\r\n        //             </TableHead>\r\n        //             <TableBody>\r\n        //             {currentTest.invitations.map(row => (\r\n        //                 <StyledTableRow key={row.emailTo}>\r\n        //                 <StyledTableCell component=\"th\" scope=\"row\">\r\n        //                     {row.status}\r\n        //                 </StyledTableCell>\r\n        //                 </StyledTableRow>\r\n        //             ))}\r\n        //             </TableBody>\r\n        //         </Table>\r\n        //     </Paper>\r\n        // )\r\n    }\r\n}\r\nconst CustomTableCell = withStyles(theme => ({\r\n    head: {\r\n      backgroundColor: '#3f51b5',\r\n      //   backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst StyledTableCell = withStyles(theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n  \r\n  const StyledTableRow = withStyles(theme => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.background.default,\r\n      },\r\n    },\r\n}))(TableRow);\r\nexport default TestConsoleCandidates;","import React, { Component } from 'react';\r\n\r\nclass TestConsoleSettings extends Component {\r\n\r\n    render = () => {\r\n        return (\r\n            <div>WIP</div>\r\n        );\r\n    }\r\n}\r\nexport default TestConsoleSettings;","import React, { Component } from 'react';\r\nimport { AppBar, Tabs, Tab, Typography, Button } from '@material-ui/core';\r\nimport TestConsoleQuestions from './TestConsoleQuestions';\r\nimport TestConsoleCandidates from './TestConsoleCandidates';\r\nimport TestConsoleSettings from './TestConsoleSettings';\r\n\r\nclass TestConsoleTabs extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: 0\r\n        };\r\n    }\r\n\r\n    handleChange = (event, value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    render = () => {\r\n        let { value } = this.state;\r\n        let { tabs, selectedMcqs, currentTest } = this.props;\r\n        return(\r\n        <div>\r\n            <AppBar position=\"static\">\r\n                <Tabs variant=\"fullWidth\" value={value} onChange={this.handleChange}>\r\n                    <LinkTab label=\"Questions\" href=\"page1\" />\r\n                    <LinkTab label=\"Candidates\" href=\"page2\" />\r\n                    <LinkTab label=\"Settings\" href=\"page3\" />\r\n                </Tabs>\r\n            </AppBar>\r\n            {value === 0 && \r\n            <TabContainer>\r\n                <TestConsoleQuestions   \r\n                            selectedMcqs={selectedMcqs} \r\n                            onSelectMcq={ (mcqItem) => this.props.onAddMcqToTest(mcqItem) } \r\n                            currentTest={currentTest}\r\n                            /> \r\n            </TabContainer>}\r\n            {value === 1 && \r\n            <TabContainer>\r\n                <TestConsoleCandidates \r\n                    currentTest={currentTest}\r\n                /> \r\n            </TabContainer>}\r\n            {value === 2 && <TabContainer><TestConsoleSettings /> </TabContainer>}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst TabContainer = (props) => {\r\n    return (\r\n      <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n        {props.children}\r\n      </Typography>\r\n    );\r\n}\r\n\r\nconst LinkTab = (props) => {\r\n    return <Tab component=\"a\" onClick={event => event.preventDefault()} {...props} />;\r\n}\r\nexport default TestConsoleTabs;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n// import AddTestComponent from '../components/AdminTest/AddTest';\r\nimport {    FetchTest, AddMcqToTest, PublishTest, CloseSnackbar, SetHistory,\r\n            OpenSnackbar } from '../../actions/TestConsoleActions';            \r\nimport Grid from '@material-ui/core/Grid';\r\nimport SnackbarComponent from '../../components/lib/SnackbarComponent';\r\nimport TestConsoleTabs from './TestConsoleTabs';\r\nimport { Button, Card, CardHeader } from '@material-ui/core';\r\nimport TestConsoleQuestions from './TestConsoleQuestions';\r\nimport LoadingComponent from '../../components/lib/LoadingComponent';\r\nimport { KeyboardBackspace } from '@material-ui/icons';\r\n\r\nclass TestConsoleContainer extends React.Component {\r\n    \r\n    componentWillMount = () => {\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        console.log('this.props.history', this.props.history);\r\n        this.props.SetHistory(this.props.history);\r\n        this.reload();\r\n    }\r\n\r\n    componentWillReceiveProps = (newprops, oldprops) => {\r\n        if(newprops.success_message !== '' && newprops.success_message !== undefined) {\r\n            // this.props.OpenSnackbar();\r\n        }\r\n    }\r\n\r\n    reload = () => {\r\n        // this.props.FetchSkills();\r\n        let { state } = this.props.location;\r\n        console.log('reload: location state');\r\n        console.log(state);\r\n        if(state){\r\n            this.props.FetchTest(state.testId, this.props.history);\r\n        }\r\n    }\r\n\r\n    onAddTest = (model) => {\r\n        this.props.AddTest(model, this.props.editMode)\r\n    }\r\n\r\n    onAddMcqToTest = (mcqItem) => {\r\n        console.log('container: mcq added to test');\r\n        this.props.AddMcqToTest(mcqItem, this.props.current_test);\r\n    }\r\n\r\n    onPublish = () => {\r\n        this.props.PublishTest(this.props.current_test);\r\n        this.reload();\r\n    }\r\n\r\n    render = () => {\r\n        let { current_test } = this.props;\r\n        console.log('container: render');\r\n        console.log(current_test);\r\n        if(current_test && current_test.selectedMcqs) {\r\n            console.log(current_test.selectedMcqs);\r\n        }\r\n        return(\r\n            <Grid container spacing={16}>\r\n                <Grid item xs={12} sm={12}>\r\n                {!current_test && <LoadingComponent />}\r\n                {current_test &&\r\n                <Card>\r\n                    <CardHeader action={\r\n                        <div>\r\n                        {current_test.status=='draft' && current_test.selectedMcqs && current_test.selectedMcqs.length > 0 &&\r\n                        <Button variant=\"contained\" color=\"primary\"\r\n                                onClick={this.onPublish}\r\n                        >Publish</Button>}\r\n                        <Button color=\"primary\" size=\"large\" variant=\"outlined\"\r\n                                onClick={() => this.props.history.goBack() }>\r\n                            <KeyboardBackspace />\r\n                        </Button>\r\n                        </div>\r\n                    }\r\n                    title={current_test.testName}\r\n                     subheader={current_test.status!=='draft' ? 'Published' : 'draft'}\r\n                    />\r\n                    <TestConsoleTabs \r\n                        tabs={tabs} \r\n                        onAddMcqToTest={(mcqId) => this.onAddMcqToTest(mcqId) }\r\n                        selectedMcqs={current_test.selectedMcqs} \r\n                        currentTest={current_test}\r\n                        />\r\n                </Card>\r\n                }\r\n                <SnackbarComponent \r\n                    openSnack={this.props.snack_open} handleClose={() => this.props.CloseSnackbar()} \r\n                    snackMessage={\"Data Saved Successfully!\"} \r\n                    /> \r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.testConsoleReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    // AddTest: (model, editMode) => dispatch(AddTest(model, editMode)),\r\n    // UpdateTest: (model) => dispatch(UpdateTest(model)),\r\n    SetHistory: (history) => dispatch(SetHistory(history)),\r\n    AddMcqToTest: (mcqItem, testModel) => dispatch(AddMcqToTest(mcqItem, testModel)),\r\n    PublishTest: (testModel) => dispatch(PublishTest(testModel)),\r\n    FetchTest: (testId, history) => dispatch(FetchTest(testId, history)),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    // CurrentTestFieldChange: (val, field, model) => dispatch(CurrentTestFieldChange(val, field, model))\r\n});\r\nconst tabs = [\r\n    {key: 0, content: '<Button variant=\"container\" color=\"primary\">Page {index}</Button>'},\r\n    {key: 1, content: <TestConsoleQuestions /> },\r\n    {key: 2, content: getButton}\r\n]\r\nconst getButton = (index) => {\r\n    return 'abc'+index;\r\n    // (\r\n        // <Button variant=\"container\" color=\"primary\">Page {index}</Button>\r\n    // );\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TestConsoleContainer);","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Grid } from '@material-ui/core';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AnswerOptions from './AnswerOptions';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\n\r\nconst AddAnswerOption = (props) => {\r\n        let { currentAnswer, onAnswerFieldChange, onAnswerAdd, model } = props.children;\r\n        // console.log('add option (model):');\r\n        // console.log(model);\r\n        return (\r\n            <ExpansionPanel>\r\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Grid container spacing={16}>\r\n                    <Grid item xs={6} sm={6}>\r\n                        <Typography variant=\"h6\">Answer Choices</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={5} sm={5}>\r\n                    </Grid>\r\n                    <Grid item xs={1} sm={1}>\r\n                        <Typography variant=\"subtitle1\" >Add Choice</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                    <div style={styles.formControl}>\r\n                    {currentAnswer && \r\n                        <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                            <TextField\r\n                                id=\"outlined-name\"\r\n                                label=\"Description\"\r\n                                multiline\r\n                                rows=\"6\"\r\n                                value={currentAnswer.content}\r\n                                onChange={ (e) => onAnswerFieldChange(e.target.value, 'content', currentAnswer) }\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormControl>\r\n                    }\r\n\r\n                    {currentAnswer && \r\n                        <FormControlLabel style={styles.formControl}\r\n                            control={\r\n                            <Switch\r\n                                // checked={currentAnswer.isCorrect}\r\n                                onChange={ (e) => onAnswerFieldChange(e.target.checked, 'isCorrect', currentAnswer) }\r\n                                value={currentAnswer.isCorrect}\r\n                            />\r\n                            }\r\n                            label=\"Is Correct\"\r\n                        /> \r\n                    }\r\n                    </div>\r\n                    <AnswerOptions choices={model.choices} />\r\n                </ExpansionPanelDetails>\r\n                <Divider />\r\n                <ExpansionPanelActions>\r\n                <Button variant=\"outlined\" size=\"small\" color=\"primary\" onClick={ () => onAnswerAdd(currentAnswer) } >\r\n                    Add\r\n                </Button>\r\n                </ExpansionPanelActions>\r\n            </ExpansionPanel>\r\n        );\r\n}\r\nexport default AddAnswerOption;\r\nconst styles = {\r\n    formControl: {\r\n        width: '70%'\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst experienceLevel = [\r\n    0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20\r\n];\r\n\r\nclass SelectExperience extends Component{\r\n\r\n    state = {\r\n        open: false,\r\n        min: '',\r\n    };\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        open: false,\r\n        min: 0,\r\n        max: 10\r\n      };\r\n    }\r\n\r\n    // handleChange = (name, event) => {\r\n      handleChange = name => event => {\r\n        // this.setState({ [name]: Number(event.target.value) });\r\n        switch(name)\r\n        {\r\n          case 'min':\r\n          {\r\n            this.setState({\r\n              min: event.target.value\r\n            });\r\n            break;\r\n          }\r\n          case 'max':\r\n          {\r\n            this.setState({\r\n              max: event.target.value\r\n            });\r\n            break;\r\n          }\r\n          default:{}\r\n        }\r\n    };\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n      console.log('submit called');\r\n      this.handleClose();\r\n      this.props.onSubmitExperience(this.state.min, this.state.max);\r\n    }\r\n\r\n    render = () => {\r\n    return (\r\n        <div>\r\n        <Button variant=\"outlined\" onClick={this.handleClickOpen}>Experience Level: {this.state.min} - {this.state.max}</Button>\r\n        <Dialog\r\n          disableBackdropClick\r\n          disableEscapeKeyDown\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n        >\r\n          <DialogTitle>Select Experience Level</DialogTitle>\r\n          <DialogContent>\r\n            <form >\r\n                <br></br>\r\n                <br></br>\r\n              <FormControl style={styles.formControl} variant=\"outlined\" >\r\n                <InputLabel htmlFor=\"min-simple\">Minimum</InputLabel>\r\n                <Select\r\n                  value={this.state.min}\r\n                  onChange={this.handleChange('min')}\r\n                  input={<Input id=\"min-simple\" />}\r\n                >\r\n                {experienceLevel.map((item, index) => {\r\n                  return <MenuItem key={index} value={item}>{item}</MenuItem>\r\n                })}\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl style={styles.formControl} variant=\"outlined\" >\r\n                <InputLabel htmlFor=\"max-simple\">Maximum</InputLabel>\r\n                <Select\r\n                  value={this.state.max}\r\n                  onChange={this.handleChange('max')}\r\n                  input={<Input id=\"max-simple\" />}\r\n                >\r\n                {experienceLevel.map((item, index) => {\r\n                  return <MenuItem key={index} value={item}>{item}</MenuItem>\r\n                })}\r\n                </Select>\r\n              </FormControl>\r\n            </form>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleSubmit} color=\"primary\">\r\n              Ok\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    )\r\n    }\r\n}\r\nconst styles = {\r\n    \r\n      formControl: {\r\n        width:\"45%\", \r\n        marginLeft:\"5%\"\r\n      }\r\n    \r\n};\r\nexport default SelectExperience;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AddAnswerOptionComponent from './AddAnswerOption';\r\nimport SelectExperience from './SelectExperience';\r\nimport LoadingComponent from '../lib/LoadingComponent';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { KeyboardBackspace } from '@material-ui/icons';\r\n\r\nconst AddMcq = (props) => {\r\n        let { model, editMode } = props;\r\n\r\n        const onSubmitExperience = (min, max) => {\r\n            console.log('add mcq handler for experience called');\r\n            props.onFieldChange(min, 'minimumExperience', props.model)\r\n            props.onFieldChange(max, 'maximumExperience', props.model)\r\n        }\r\n\r\n        return (\r\n            <Card>\r\n        {!model && <LoadingComponent />} \r\n        {model &&    \r\n                        <form  noValidate autoComplete=\"off\">\r\n                            <CardHeader avatar={\r\n                                <Avatar aria-label=\"Recipe\" style={styles.avatar}>\r\n                                    <AddIcon />\r\n                                </Avatar>\r\n                            }\r\n                            action={\r\n                                <Button color=\"primary\" size=\"large\" variant=\"outlined\"\r\n                                        onClick={() => props.history.goBack() }>\r\n                                    <KeyboardBackspace />\r\n                                </Button>\r\n                            }\r\n                            title={editMode ? \"Edit MCQ\" : \"Add MCQ\"}\r\n                            subheader=\"Multiple Choice Question\">\r\n                            </CardHeader>\r\n                            <CardContent>\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <InputLabel htmlFor=\"outlined-category-simple\">\r\n                                        Category\r\n                                    </InputLabel>\r\n                                    <Select\r\n                                        onChange={(e) => props.onFieldChange(e.target.value, 'category', props.model)}\r\n                                        value={model.category}\r\n                                        input={\r\n                                        <OutlinedInput\r\n                                            labelWidth={65}\r\n                                            name=\"category\"\r\n                                            id=\"outlined-category-simple\"\r\n                                        />\r\n                                        }>\r\n                                        <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                        </MenuItem>\r\n                                        {props.categories && props.categories.length > 0 &&\r\n                                            props.categories.map((item, index) => {\r\n                                            return (\r\n                                                <MenuItem key={index} value={item.title}>{item.title}</MenuItem>\r\n                                            )\r\n                                        })}\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <TextField\r\n                                        id=\"outlined-name\"\r\n                                        label=\"Title\"\r\n                                        className={styles.dense}\r\n                                        value={model.question}\r\n                                        onChange={(e) => props.onFieldChange(e.target.value, 'question', props.model)}\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <InputLabel\r\n                                        htmlFor=\"outlined-skill-simple\">\r\n                                        Skill\r\n                                    </InputLabel>\r\n                                    <Select\r\n                                        onChange={(e) => props.onFieldChange(e.target.value, 'skill', props.model)}\r\n                                        value={model.skill}\r\n                                        input={\r\n                                        <OutlinedInput\r\n                                            labelWidth={30}\r\n                                            name=\"skill\"\r\n                                            id=\"outlined-skill-simple\"\r\n                                        />\r\n                                        }>\r\n                                        <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                        </MenuItem>\r\n                                        {props.skills && props.skills.map((item, index) => {\r\n                                            return (\r\n                                                <MenuItem key={index} value={item.skill}>{item.skill}</MenuItem>\r\n                                            )\r\n                                        })}\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <SelectExperience \r\n                                        onSubmitExperience={ (min, max) => onSubmitExperience(min, max) } />\r\n                                </FormControl>\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <TextField\r\n                                        id=\"outlined-name\"\r\n                                        label=\"Question Description\"\r\n                                        multiline\r\n                                        rows=\"4\"\r\n                                        value={model.description}\r\n                                        className={styles.dense}\r\n                                        onChange={(e) => props.onFieldChange(e.target.value, 'description', props.model)}\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </FormControl>\r\n                                <AddAnswerOptionComponent>\r\n                                    {props}\r\n                                </AddAnswerOptionComponent>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                            <Button variant=\"contained\" size=\"large\" color=\"primary\" \r\n                                    onClick={ () => props.onSubmit(props.model)}>\r\n                                Submit\r\n                            </Button>\r\n                            </CardActions>\r\n                        </form>\r\n        }\r\n                    </Card>\r\n                   \r\n        );\r\n}\r\nconst styles = {\r\n    formControl: {\r\n        width: '70%',\r\n        marginBottom: '1%'\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n};\r\nexport default AddMcq;","import axios from 'axios';\r\nimport config from '../config';\r\nimport repository from '../repository';\r\nimport { FETCH_CATEGORIES_SUCCESS, FETCH_CATEGORIES_FAIL } from './CategoryActions';\r\n\r\nexport const ADD_MCQ_BEGIN = 'ADD_MCQ_BEGIN';\r\nexport const ADD_MCQ_SUCCESS = 'ADD_MCQ_SUCCESS';\r\nexport const ADD_MCQ_FAIL = 'ADD_MCQ_FAIL';\r\nexport const MCQ_SEARCH_END = 'MCQ_SEARCH_END';\r\nexport const MCQ_SEARCH_BEGIN = 'MCQ_SEARCH_BEGIN';\r\nexport const MCQ_SEARCH_SUCCESS = 'MCQ_SEARCH_SUCCESS';\r\nexport const UPDATE_MCQ_BEGIN = 'UPDATE_MCQ_BEGIN';\r\nexport const UPDATE_MCQ_SUCCESS = 'UPDATE_MCQ_SUCCESS';\r\nexport const UPDATE_MCQ_FAIL = 'UPDATE_MCQ_FAIL';\r\nexport const DELETE_MCQ_SUCCESS = 'DELETE_MCQ_SUCCESS';\r\nexport const DELETE_MCQ_FAIL = 'DELETE_MCQ_FAIL';\r\nexport const SELECT_MCQ = 'SELECT_MCQ';\r\nexport const CURRENT_MCQ_FIELD_CHANGE = 'CURRENT_MCQ_FIELD_CHANGE';\r\nexport const CURRENT_MCQ_FIELD_CHANGE_END = 'CURRENT_MCQ_FIELD_CHANGE_END';\r\nexport const CURRENT_ANSWER_FIELD_CHANGE = 'CURRENT_ANSWER_FIELD_CHANGE';\r\nexport const CURRENT_ANSWER_FIELD_CHANGE_END = 'CURRENT_ANSWER_FIELD_CHANGE_END';\r\nexport const CHOICE_ADDED_TO_MCQ = 'CHOICE_ADDED_TO_MCQ';\r\nexport const FETCH_MCQ_BEGIN = 'FETCH_MCQ_BEGIN';\r\nexport const FETCH_MCQ_SUCCESS = 'FETCH_MCQ_SUCCESS';\r\nexport const FETCH_MCQ_FAIL = 'FETCH_MCQ_FAIL';\r\nexport const FETCH_SKILLS_SUCCESS = 'FETCH_SKILLS_SUCCESS';\r\nexport const FETCH_SKILLS_FAIL = 'FETCH_SKILLS_FAIL';\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\r\nexport const OPEN_SNACKBAR = 'OPEN_SNACKBAR';\r\n\r\nexport const CurrentMcqFieldChange = (val, field, model) => dispatch => {\r\n    console.log('mcq field change: ' + field);\r\n    console.log(val);\r\n    switch(field)\r\n    {\r\n        case 'question':\r\n        {\r\n            model.question = val;\r\n            dispatch({\r\n                type: CURRENT_MCQ_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'description':\r\n        {\r\n            model.description = val;\r\n            dispatch({\r\n                type: CURRENT_MCQ_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'category':\r\n        {\r\n            model.category = val;\r\n            dispatch({\r\n                type: CURRENT_MCQ_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'skill':\r\n        {\r\n            model.skill = val;\r\n            dispatch({\r\n                type: CURRENT_MCQ_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'minimumExperience':\r\n        {\r\n            model.minimumExperience = val;\r\n            dispatch({\r\n                type: CURRENT_MCQ_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'maximumExperience':\r\n        {\r\n            model.maximumExperience = val;\r\n            dispatch({\r\n                type: CURRENT_MCQ_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        default:\r\n        {\r\n        }\r\n    }\r\n    dispatch({\r\n        type: CURRENT_MCQ_FIELD_CHANGE_END\r\n    });\r\n}\r\n\r\nexport const CurrentAnswerFieldChange = (val, field, model) => dispatch => {\r\n    console.log('mcq answer field change: ' + field);\r\n    console.log(val);\r\n    switch(field)\r\n    {\r\n        case 'content':\r\n        {\r\n            model.content = val;\r\n            dispatch({\r\n                type: CURRENT_ANSWER_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'isCorrect':\r\n        {\r\n            model.isCorrect = val;\r\n            dispatch({\r\n                type: CURRENT_ANSWER_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        default:\r\n        {\r\n        }\r\n    }\r\n    dispatch({\r\n        type: CURRENT_ANSWER_FIELD_CHANGE_END\r\n    });\r\n}\r\n\r\nexport const AddAnswerChoice = (answerModel, mcqModel) => dispatch => {\r\n    if(mcqModel) {\r\n        if(!mcqModel.choices) {\r\n            mcqModel.choices = [];\r\n        }\r\n        mcqModel.choices.push(answerModel);\r\n    }\r\n    dispatch({\r\n        type: CHOICE_ADDED_TO_MCQ,\r\n        payload: mcqModel\r\n    })\r\n}\r\n\r\nexport const AddMcq = (mcqModel, editMode) => dispatch => {\r\n    dispatch({\r\n        type: ADD_MCQ_BEGIN\r\n    });\r\n    let url = config.adminApiUrl + 'mcq';\r\n    console.log('action model');\r\n    console.log(mcqModel);\r\n    if(!editMode) {\r\n        repository.saveData(url, mcqModel)\r\n            .then((res) => {\r\n                console.log('mcq saved: ' + res);\r\n                dispatch({\r\n                    type: ADD_MCQ_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({\r\n                    type: ADD_MCQ_FAIL,\r\n                    payload: err\r\n                });\r\n            });\r\n    }\r\n    else {\r\n        dispatch(UpdateMcq(mcqModel));\r\n    }\r\n}\r\n\r\nexport const UpdateMcq = (mcqModel) => dispatch => {\r\n    dispatch({\r\n        type: UPDATE_MCQ_BEGIN\r\n    });\r\n    let url = config.adminApiUrl + 'mcq';\r\n    repository.updateData(url, mcqModel)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: UPDATE_MCQ_SUCCESS\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: UPDATE_MCQ_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const DeleteMcq = (mcqModel) => dispatch => {\r\n    let url = config.adminApiUrl + 'mcq';\r\n    repository.deleteData(url, mcqModel)\r\n        .then((res) => {\r\n            dispatch(FetchMcqs(true));\r\n            // dispatch({\r\n            //     type: DELETE_MCQ_SUCCESS\r\n            // });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: DELETE_MCQ_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const BeginSearch = () => dispatch => {\r\n    dispatch({\r\n        type: MCQ_SEARCH_BEGIN\r\n    });\r\n}\r\n\r\nexport const EndSearch = () => dispatch => {\r\n    dispatch({\r\n        type: MCQ_SEARCH_END\r\n    });\r\n}\r\n\r\n export const SearchMcq = (searchTerm, mcqList) => dispatch => {\r\n    console.log(`search term: ${searchTerm}, list length: ${mcqList ? mcqList.length : 0}`);\r\n    if(mcqList && mcqList.length > 0) {\r\n        let filteredCategories = mcqList.filter((item) => {\r\n            return (\r\n                    item.question &&\r\n                    item.question.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1\r\n                    ) ||\r\n                    (\r\n                        item.description &&\r\n                        item.description.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1);\r\n        });\r\n        if(filteredCategories && filteredCategories.length > 0) {\r\n            dispatch({\r\n                type: MCQ_SEARCH_SUCCESS,\r\n                payload: {\r\n                    filteredCategories,\r\n                    searchTerm\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            dispatch({\r\n                type: MCQ_SEARCH_SUCCESS,\r\n                payload: {\r\n                    filteredCategories: [],\r\n                    searchTerm\r\n                }\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        dispatch({\r\n            type: MCQ_SEARCH_SUCCESS,\r\n            payload: {\r\n                filteredCategories: [],\r\n                searchTerm\r\n            }\r\n        });\r\n    }\r\n }\r\n\r\n export const FetchCategories = () => dispatch => {\r\n    // dispatch({\r\n    //     type: FETCH_CATEGORIES_BEGIN\r\n    // });\r\n    let url = config.adminApiUrl + 'getAllCategories';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            console.log('categories fetched');\r\n            dispatch({\r\n                type: FETCH_CATEGORIES_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_CATEGORIES_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const FetchSkills = () => dispatch => {\r\n    let url = config.adminApiUrl + 'getAllSkills';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            console.log('skills fetched');\r\n            dispatch({\r\n                type: FETCH_SKILLS_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_SKILLS_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const SelectMcq = (mcqModel) => dispatch => {\r\n    dispatch({\r\n        type: SELECT_MCQ,\r\n        payload: mcqModel\r\n    })\r\n}\r\n\r\n\r\nexport const FetchMcqs = (isDeleted) => dispatch => {\r\n    dispatch({\r\n        type: FETCH_MCQ_BEGIN\r\n    });\r\n    let url = config.adminApiUrl + 'getAllMcqs';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            console.log('MCQ fetched');\r\n            let payload = {\r\n                data: res.data,\r\n                message: 'MCQs fetched successfully'\r\n            };\r\n            if(isDeleted) {\r\n                payload.message = 'MCQ deleted successfully';\r\n            }\r\n            dispatch({\r\n                type: FETCH_MCQ_SUCCESS,\r\n                payload: payload\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_MCQ_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n    // repository.getData(url)\r\n    //     .then((res) => {\r\n    //         console.log('MCQ fetched');\r\n    //         dispatch({\r\n    //             type: FETCH_MCQ_SUCCESS,\r\n    //             payload: res.data\r\n    //         });\r\n    //     })\r\n    //     .catch((err) => {\r\n    //         dispatch({\r\n    //             type: FETCH_MCQ_FAIL,\r\n    //             payload: err\r\n    //         });\r\n    //     });\r\n}\r\n\r\nexport const CloseSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: CLOSE_SNACKBAR\r\n    });\r\n}\r\nexport const OpenSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: OPEN_SNACKBAR\r\n    });\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {    FetchMcqs, DeleteMcq,\r\n            CloseSnackbar,\r\n            OpenSnackbar, \r\n            BeginSearch, EndSearch, SearchMcq } from '../../actions/McqActions';\r\nimport { Link } from 'react-router-dom';\r\nimport { FormControl, Grid, Card, CardHeader, Button, CardContent, \r\n         List, ListItem, ListItemText, ListItemSecondaryAction,\r\n         Checkbox, TextField } from '@material-ui/core';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport AnswerOptions from './AnswerOptions';\r\nimport McqItem from '../../Containers/TestConsole/McqItem';\r\nimport SnackbarComponent from '../lib/SnackbarComponent';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { Add, Search, Cancel } from '@material-ui/icons';\r\n\r\nclass McqList extends Component {\r\n\r\n    componentDidMount = () => {\r\n        this.props.FetchMcqs();\r\n    }\r\n\r\n    onAddMcqToTest = (mcqId) => {\r\n        this.props.AddMcqToTest(mcqId);\r\n    }\r\n\r\n    onEditClick = (mcq) => {\r\n        this.props.history.push({\r\n            pathname:  '/addMcq',\r\n            state: {\r\n                mcq: mcq\r\n            }\r\n        });\r\n    }\r\n\r\n    onDeleteMcq = (mcq) => {\r\n        this.props.DeleteMcq(mcq);\r\n        // this.props.FetchMcqs();\r\n    }\r\n\r\n    render = () => {\r\n        let { mcqs, search_term, filteredCategories, search_enabled } = this.props;\r\n        let mcqToDisplay = filteredCategories ? filteredCategories : mcqs;\r\n        return (\r\n            <Card>\r\n                <CardHeader\r\n                    action={\r\n                        <div>\r\n                            {!search_enabled &&\r\n                            <Button color=\"primary\" onClick={() => this.props.BeginSearch()} size=\"small\">\r\n                                <Search />\r\n                            </Button>}\r\n                            <Link to=\"/bulkMcq\" >\r\n                                <Button variant=\"contained\" color=\"primary\">Bulk Upload Mcq</Button>\r\n                            </Link>\r\n                        </div>\r\n                    }\r\n                    title=\"MCQ List\"\r\n                    subheader=\"Multiple Choice Questions\">\r\n                </CardHeader>\r\n                <CardContent>\r\n                    {search_enabled && \r\n                    <div>\r\n                        <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                        <TextField\r\n                                            id=\"outlined-name\"\r\n                                            label=\"Search\"\r\n                                            value={search_term}\r\n                                            className={styles.dense}\r\n                                            onChange={(e) => this.props.SearchMcq(e.target.value, mcqs)}\r\n                                            margin=\"normal\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                        </FormControl>\r\n                        <FormControl variant=\"outlined\" style={{width: '10%', marginTop: '2%'}}>\r\n                            <Button  color=\"primary\" size=\"small\" onClick={() => this.props.EndSearch()} >\r\n                                Hide Search\r\n                            </Button>\r\n                        </FormControl>\r\n                    </div>\r\n                    }\r\n                    {mcqToDisplay && \r\n                                    <Typography variant=\"caption\">\r\n                                        {mcqToDisplay.length} MCQs found\r\n                                    </Typography>}\r\n                    <Link to=\"/addMcq\" >\r\n                        <Fab color=\"primary\" aria-label=\"Add\" style={{right: 20, position: 'fixed', bottom: 20}}>\r\n                            <Add />\r\n                        </Fab>\r\n                    </Link>\r\n                    <List dense={true}>\r\n                        { mcqToDisplay && mcqToDisplay.length > 0 &&\r\n                          mcqToDisplay.map((item, index) => {\r\n                            return (\r\n                                <McqItem    mcq={item} key={index}\r\n                                            onEditClick={(mcq) => this.onEditClick(mcq)}\r\n                                            onDeleteMcq={() => this.onDeleteMcq(item)}\r\n                                            isSelectable={false} \r\n                                            isEditable={true} />\r\n                            )\r\n                        } )}\r\n                    </List>\r\n                    <SnackbarComponent \r\n                        openSnack={this.props.snack_open} handleClose={() => this.props.CloseSnackbar()} \r\n                        snackMessage={this.props.success_message}\r\n                        />\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state.mcqReducer,\r\n    // ...state.testConsoleReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    FetchMcqs: () => dispatch(FetchMcqs()),\r\n    DeleteMcq: (mcq) => dispatch(DeleteMcq(mcq)),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    BeginSearch: () => dispatch(BeginSearch()),\r\n    EndSearch: () => dispatch(EndSearch()),\r\n    SearchMcq: (searchTerm, mcqList) => dispatch(SearchMcq(searchTerm, mcqList)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(McqList);\r\nconst styles = {\r\n    formControl: {\r\n        width: '70%'\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AddMcqComponent from '../components/Mcq/AddMcq';\r\nimport {    AddMcq, FetchMcqs, UpdateMcq, FetchCategories, FetchSkills, \r\n            CloseSnackbar, CurrentMcqFieldChange, CurrentAnswerFieldChange,\r\n            OpenSnackbar, SelectMcq, AddAnswerChoice,\r\n            BeginSearch, SearchMcq } from '../actions/McqActions';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SnackbarComponent from '../components/lib/SnackbarComponent';\r\nimport McqList from '../components/Mcq/McqList';\r\n\r\nclass McqContainer extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        this.reload();\r\n    }\r\n\r\n    componentWillUpdate = () => {\r\n        if(this.props.success_message !== '') {\r\n            this.props.FetchCategories();\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (newprops, oldprops) => {\r\n        // console.log('mcq container: receiving props');\r\n        if(newprops.success_message !== '') {\r\n            setTimeout(() => {\r\n                this.props.history.push('/mcqs');\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    reload = () => {\r\n        this.props.FetchCategories();\r\n        this.props.FetchSkills();\r\n    }\r\n\r\n    onAddMcq = (model) => {\r\n        let { state } = this.props.location;\r\n        let editMode = false;\r\n        if(state && state.mcq) {\r\n            editMode = true;\r\n        }\r\n        this.props.AddMcq(model, editMode);\r\n    }\r\n\r\n    render = () => {\r\n        let { state } = this.props.location;\r\n        let mcq = null;\r\n        if(state && state.mcq) {\r\n            mcq = state.mcq;\r\n        }\r\n        console.log('mcq container render snack open: ' + this.props.snack_open);\r\n        return(\r\n            <Grid container spacing={16}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <AddMcqComponent \r\n                        onSubmit={ (model) => this.onAddMcq(model) }\r\n                        onAnswerAdd={ (model) => this.props.AddAnswerChoice(model, this.props.current_mcq) }\r\n                        // model={this.props.current_mcq}\r\n                        model={mcq ? mcq : this.props.current_mcq}\r\n                        categories={this.props.categories}\r\n                        skills={this.props.skills}\r\n                        currentAnswer={this.props.currentAnswer}\r\n                        editMode={mcq ? true : false}\r\n                        onFieldChange={ (val, field, model) => this.props.CurrentMcqFieldChange(val, field, model) } \r\n                        onAnswerFieldChange={ (val, field, model) => this.props.CurrentAnswerFieldChange(val, field, model) } \r\n                        history={this.props.history}\r\n                        />\r\n                    <SnackbarComponent \r\n                        openSnack={this.props.snack_open} handleClose={() => this.props.CloseSnackbar()} \r\n                        snackMessage={\"Data Saved Successfully!\"} \r\n                    /> \r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.mcqReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    AddMcq: (model, editMode) => dispatch(AddMcq(model, editMode)),\r\n    AddAnswerChoice: (model, mcqModel) => dispatch(AddAnswerChoice(model, mcqModel)),\r\n    UpdateMcq: (model) => dispatch(UpdateMcq(model)),\r\n    SelectMcq: (model) => dispatch(SelectMcq(model)),\r\n    FetchCategories: () => dispatch(FetchCategories()),\r\n    FetchSkills: () => dispatch(FetchSkills()),\r\n    FetchMcqs: () => dispatch(FetchMcqs()),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    BeginSearch: () => dispatch(BeginSearch()),\r\n    SearchMcq: (searchTerm, mcqList) => dispatch(SearchMcq(searchTerm, mcqList)),\r\n    CurrentMcqFieldChange: (val, field, model) => dispatch(CurrentMcqFieldChange(val, field, model)),\r\n    CurrentAnswerFieldChange: (val, field, model) => dispatch(CurrentAnswerFieldChange(val, field, model))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(McqContainer);","import React, { Component } from 'react';\r\nimport CSVReader from 'react-csv-reader';\r\nimport { Typography, Button } from '@material-ui/core';\r\nimport repository from '../../repository';\r\nimport config from '../../config';\r\n\r\nclass BulkUpload extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: \"\",\r\n            finalJson: {}\r\n        };\r\n    }\r\n\r\n    handleFileLoaded = (content, fileName) => {\r\n        console.log('fileName', fileName);\r\n        console.log('content', content);\r\n        let matrixArray = content;\r\n        let finalJson = {\r\n            mcqs: []\r\n        };\r\n        let headers = [];\r\n        let firstRow = matrixArray[0];\r\n        firstRow.map((item, columnIndex) => {\r\n            headers.push(item);\r\n        });\r\n        if (!this.validateHeaders(headers)) {\r\n            console.log(\"invalid headers\");\r\n            this.setState({\r\n                message: \"Invalid Headers. Please check the file format and try again.\"\r\n            });\r\n            return;\r\n        }\r\n        if (!this.validCount(matrixArray)) {\r\n            console.log(\"Invalid number of records\");\r\n            this.setState({\r\n                message: `Invalid number of records. Min: ${config.minBulkCount}, Max: ${config.maxBulkCount}`\r\n            });\r\n            return;\r\n        }\r\n        matrixArray.map((itemArray, rowIndex) => {\r\n            if (rowIndex === 0) {\r\n\r\n            }\r\n            else {\r\n                let mcq = {};\r\n                mcq.choices = [];\r\n                let correctAnswer = \"\";\r\n                itemArray.map((colValue, colIndex) => {\r\n                    let filteredHeaders = config.validHeaders.filter((item) => {\r\n                        return item.name === headers[colIndex];\r\n                    });\r\n\r\n                    if(filteredHeaders && filteredHeaders.length > 0) {\r\n                        let prop = filteredHeaders[0].prop;\r\n                        if(prop.startsWith(\"choice\")) {\r\n                            if(colValue) {\r\n                                mcq.choices.push({\r\n                                    content: colValue,\r\n                                    isCorrect: correctAnswer \r\n                                });\r\n                            }\r\n                        }\r\n                        // else if(prop === \"correctAnswer\") {\r\n                        //     mcq['answer'] = colValue;\r\n                        // }\r\n                        else {\r\n                            mcq[prop] = colValue;\r\n                        }\r\n                        //mcq[filteredHeaders[0].prop] = colValue;\r\n                    }\r\n                    // mcq[headers[colIndex]] = colValue;\r\n                });\r\n                if(mcq.question && mcq.question !== '') {\r\n                    finalJson.mcqs.push(mcq);\r\n                }\r\n            }\r\n        });\r\n        this.setState({\r\n            finalJson: finalJson\r\n        });\r\n    }\r\n\r\n    onUpload = () => {\r\n        let { finalJson } = this.state;\r\n        let url = config.adminApiUrl + 'bulkMcq';\r\n        repository.saveData(url, finalJson)\r\n            .then((res) => {\r\n                this.setState({\r\n                    message: \"Successfully uploaded.\",\r\n                    finalJson: {}\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    message: \"Error in uploading file. Please try again.\"\r\n                });\r\n            })\r\n    }\r\n\r\n    validateHeaders = (headers) => {\r\n        \r\n        let isValid = true;\r\n        headers.map((item, idx) => {\r\n            let filteredHeaders = config.validHeaders.filter((vh) => {\r\n                return vh.name === item;\r\n            });\r\n            if(filteredHeaders && filteredHeaders.length > 0) {\r\n            } else {\r\n                isValid = false;\r\n            }\r\n        });\r\n        return isValid;\r\n    }\r\n    \r\n    validCount = (matrix) => {\r\n        let matrixLength = matrix.length;\r\n        if(matrixLength < config.minBulkCount || matrixLength > config.maxBulkCount) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleError = (error) => {\r\n        console.log('error on upload', error);\r\n    }\r\n\r\n    render = () => {\r\n        const { message, finalJson } = this.state;\r\n        return (\r\n            <div>\r\n                <CSVReader\r\n                    cssClass=\"csv-reader-input\"\r\n                    label=\"Select CSV with Multiple Choice Questions\"\r\n                    onFileLoaded={this.handleFileLoaded}\r\n                    onError={this.handleError}\r\n                    inputId=\"bulkmcq\"\r\n                    inputStyle={{color: 'red'}}\r\n                />\r\n                <br></br>\r\n                <Typography color=\"primary\" variant=\"subtitle1\">{message}</Typography>\r\n                {finalJson && finalJson.mcqs && finalJson.mcqs.length > 0 &&\r\n                <Button color=\"primary\" variant=\"contained\" \r\n                        size=\"large\"\r\n                        onClick={this.onUpload}\r\n                        >Upload</Button>\r\n                }\r\n                {message === \"Successfully uploaded.\" && \r\n                    <Button color=\"primary\" variant=\"contained\" \r\n                    size=\"small\"\r\n                    onClick={() => this.props.history.goBack()}\r\n                    >Go Back</Button>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BulkUpload;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AddCandidateComponent from '../components/Candidates/AddCandidate';\r\nimport {    AddCandidate, UpdateCandidate, FetchSkills,  \r\n            CloseSnackbar, CurrentCandidateFieldChange,\r\n            OpenSnackbar } from '../actions/CandidateActions';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SnackbarComponent from '../components/lib/SnackbarComponent';\r\n\r\nclass CandidateContainer extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        this.reload();\r\n    }\r\n\r\n    componentWillReceiveProps = (newprops, oldprops) => {\r\n        if(newprops.success_message !== '' && newprops.success_message !== undefined) {\r\n            console.log('newprops.success_message');\r\n            console.log(newprops.success_message);\r\n            this.props.OpenSnackbar();\r\n            setTimeout(() => {\r\n                this.props.history.push('/candidates');\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    reload = () => {\r\n        this.props.FetchSkills();\r\n    }\r\n\r\n    onAddCandidate = (model) => {\r\n        this.props.AddCandidate(model, this.props.editMode);\r\n    }\r\n\r\n    render = () => {\r\n        console.log('this.props.current_candidate');\r\n        console.log(this.props.snack_open);\r\n        return(\r\n            <Grid container spacing={16}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <AddCandidateComponent \r\n                        onSubmit={ (model) => this.onAddCandidate(model) }\r\n                        model={this.props.current_candidate}\r\n                        skills={this.props.skills}\r\n                        editMode={this.props.editMode}\r\n                        onFieldChange={ (val, field, model) => this.props.CurrentCandidateFieldChange(val, field, model) } \r\n                        />\r\n                    \r\n                <SnackbarComponent \r\n                    openSnack={this.props.snack_open} handleClose={() => this.props.CloseSnackbar()} \r\n                    snackMessage={\"Data Saved Successfully!\"} \r\n                    /> \r\n            </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.candidateReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    AddCandidate: (model, editMode) => dispatch(AddCandidate(model, editMode)),\r\n    UpdateCandidate: (model) => dispatch(UpdateCandidate(model)),\r\n    FetchSkills: () => dispatch(FetchSkills()),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    CurrentCandidateFieldChange: (val, field, model) => dispatch(CurrentCandidateFieldChange(val, field, model))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CandidateContainer);","import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader, DialogContent, Dialog, DialogTitle, DialogActions, Divider } from '@material-ui/core';\r\nimport { MenuItem, OutlinedInput, Select, InputLabel, IconButton } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport SelectCandidateExperience from '../Candidates/SelectCandidateExperience';\r\nimport LoadingComponent from '../lib/LoadingComponent';\r\nimport { Close  } from '@material-ui/icons';\r\n\r\nclass AddTest extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n        \r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        console.log('handle close');\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n      console.log('submit called');\r\n      this.props.onSubmit(this.props.model);\r\n      this.handleClose();\r\n    }\r\n    \r\n    onSubmitExperience = (years, months) => {\r\n        this.props.onFieldChange(years, 'experienceLevel', this.props.model)\r\n    }\r\n\r\n    render = () => {\r\n        let { model } = this.props;\r\n        console.log('current_test');\r\n        console.log(model);\r\n        return (\r\n            <div>\r\n            {!model && <LoadingComponent /> } \r\n            {model && \r\n            <Card>   \r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>Create Test</Button>\r\n                \r\n                <Dialog\r\n                fullWidth={true}\r\n                open={this.state.open}\r\n                onClose={this.handleClose}\r\n                >\r\n                <DialogTitle onClose={this.handleClose}>Create a New Test</DialogTitle>\r\n                <Divider />\r\n                <DialogContent style={{padding: '4%'}}>\r\n                    <form  noValidate autoComplete=\"off\">\r\n                            <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                <InputLabel htmlFor=\"outlined-skill-simple\">\r\n                                    Skill\r\n                                </InputLabel>\r\n                                <Select\r\n                                    onChange={(e) => this.props.onFieldChange(e.target.value, 'skill', this.props.model)}\r\n                                    value={model.skill}\r\n                                    input={\r\n                                    <OutlinedInput\r\n                                        labelWidth={65}\r\n                                        name=\"skill\"\r\n                                        id=\"outlined-skill-simple\"\r\n                                    />\r\n                                    }>\r\n                                    <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                    </MenuItem>\r\n                                    {this.props.skills && this.props.skills.length > 0 &&\r\n                                        this.props.skills.map((item, index) => {\r\n                                        return (\r\n                                            <MenuItem key={index} value={item.skill}>{item.skill}</MenuItem>\r\n                                        )\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                <TextField\r\n                                    id=\"outlined-testname\"\r\n                                    label=\"Test Name\"\r\n                                    className={styles.dense}\r\n                                    value={model.testName}\r\n                                    onChange={(e) => this.props.onFieldChange(e.target.value, 'testName', this.props.model)}\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                <TextField\r\n                                    id=\"outlined-email\"\r\n                                    label=\"Test Duration (mins)\"\r\n                                    className={styles.dense}\r\n                                    value={model.duration}\r\n                                    onChange={(e) => this.props.onFieldChange(e.target.value, 'duration', this.props.model)}\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                <SelectCandidateExperience \r\n                                        isTestAdmin={true}\r\n                                        onSubmitExperience={ (years, months) => this.onSubmitExperience(years, months) } />\r\n                            </FormControl>\r\n                    </form>\r\n                    </DialogContent>\r\n                    <Divider />\r\n                    <DialogActions>\r\n                        <Button variant=\"contained\" size=\"large\" color=\"primary\"\r\n                                        onClick={ () => this.handleSubmit(this.props.model)}>\r\n                            Create Test\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Card>}\r\n        \r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst styles = {\r\n    formControl: {\r\n        width: '80%',\r\n        marginBottom: '4%'\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n};\r\nexport default AddTest;","import axios from 'axios';\r\nimport config from '../config';\r\nimport repository from '../repository';\r\n\r\nimport { FETCH_SKILLS_BEGIN, FETCH_SKILLS_FAIL, FETCH_SKILLS_SUCCESS } from './SkillActions';\r\n\r\nexport const ADD_CANDIDATE_BEGIN = 'ADD_CANDIDATE_BEGIN';\r\nexport const ADD_CANDIDATE_SUCCESS = 'ADD_CANDIDATE_SUCCESS';\r\nexport const ADD_CANDIDATE_FAIL = 'ADD_CANDIDATE_FAIL';\r\nexport const CANDIDATE_SEARCH_BEGIN = 'CANDIDATE_SEARCH_BEGIN';\r\nexport const CANDIDATE_SEARCH_SUCCESS = 'CANDIDATE_SEARCH_SUCCESS';\r\nexport const UPDATE_CANDIDATE_BEGIN = 'UPDATE_CANDIDATE_BEGIN';\r\nexport const UPDATE_CANDIDATE_SUCCESS = 'UPDATE_CANDIDATE_SUCCESS';\r\nexport const UPDATE_CANDIDATE_FAIL = 'UPDATE_CANDIDATE_FAIL';\r\nexport const SELECT_CANDIDATE = 'SELECT_CANDIDATE';\r\nexport const CURRENT_CANDIDATE_FIELD_CHANGE = 'CURRENT_CANDIDATE_FIELD_CHANGE';\r\nexport const CURRENT_CANDIDATE_FIELD_CHANGE_END = 'CURRENT_CANDIDATE_FIELD_CHANGE_END';\r\nexport const CURRENT_ANSWER_FIELD_CHANGE = 'CURRENT_ANSWER_FIELD_CHANGE';\r\nexport const CURRENT_ANSWER_FIELD_CHANGE_END = 'CURRENT_ANSWER_FIELD_CHANGE_END';\r\nexport const CHOICE_ADDED_TO_CANDIDATE = 'CHOICE_ADDED_TO_CANDIDATE';\r\nexport const FETCH_CANDIDATE_BEGIN = 'FETCH_CANDIDATE_BEGIN';\r\nexport const FETCH_CANDIDATE_SUCCESS = 'FETCH_CANDIDATE_SUCCESS';\r\nexport const FETCH_CANDIDATE_FAIL = 'FETCH_CANDIDATE_FAIL';\r\n// export const FETCH_SKILLS_SUCCESS = 'FETCH_SKILLS_SUCCESS';\r\n// export const FETCH_SKILLS_FAIL = 'FETCH_SKILLS_FAIL';\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\r\nexport const OPEN_SNACKBAR = 'OPEN_SNACKBAR';\r\n\r\nexport const CurrentCandidateFieldChange = (val, field, model) => dispatch => {\r\n    console.log('CANDIDATE field change: ' + field);\r\n    console.log(val);\r\n    switch(field)\r\n    {\r\n        case 'fullName':\r\n        {\r\n            model.fullName = val;\r\n            dispatch({\r\n                type: CURRENT_CANDIDATE_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'email':\r\n        {\r\n            model.email = val;\r\n            dispatch({\r\n                type: CURRENT_CANDIDATE_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'contactno':\r\n        {\r\n            model.contactno = val;\r\n            dispatch({\r\n                type: CURRENT_CANDIDATE_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'experienceYears':\r\n        {\r\n            model.experienceYears = val;\r\n            dispatch({\r\n                type: CURRENT_CANDIDATE_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'experienceMonths':\r\n        {\r\n            model.experienceMonths = val;\r\n            dispatch({\r\n                type: CURRENT_CANDIDATE_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        default:\r\n        {\r\n        }\r\n    }\r\n    dispatch({\r\n        type: CURRENT_CANDIDATE_FIELD_CHANGE_END\r\n    });\r\n}\r\n\r\nexport const AddCandidate = (candidateModel, editMode) => dispatch => {\r\n    dispatch({\r\n        type: ADD_CANDIDATE_BEGIN\r\n    });\r\n    let url = config.adminApiUrl + 'candidate';\r\n    console.log('action model');\r\n    console.log(candidateModel);\r\n    // if(!editMode) {\r\n        repository.saveData(url, candidateModel)\r\n            .then((res) => {\r\n                console.log('CANDIDATE saved: ' + res);\r\n                dispatch({\r\n                    type: ADD_CANDIDATE_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({\r\n                    type: ADD_CANDIDATE_FAIL,\r\n                    payload: err\r\n                });\r\n            });\r\n}\r\n\r\nexport const BeginSearch = () => dispatch => {\r\n    dispatch({\r\n        type: CANDIDATE_SEARCH_BEGIN\r\n    });\r\n}\r\n\r\n export const SearchCandidate = (searchTerm, candidateList) => dispatch => {\r\n//     console.log(`search term: ${searchTerm}, list length: ${CANDIDATEList ? CANDIDATEList.length : 0}`);\r\n//     if(CANDIDATEList && CANDIDATEList.length > 0) {\r\n//         let filteredCANDIDATES = CANDIDATEList.filter((item) => {\r\n//             return (\r\n//                     item.title &&\r\n//                     item.title.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1\r\n//                     ) ||\r\n//                     (\r\n//                         item.description &&\r\n//                         item.description.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1);\r\n//         });\r\n//         if(filteredCANDIDATES && filteredCANDIDATES.length > 0) {\r\n//             dispatch({\r\n//                 type: CANDIDATE_SEARCH_SUCCESS,\r\n//                 payload: {\r\n//                     filteredCANDIDATES,\r\n//                     searchTerm\r\n//                 }\r\n//             });\r\n//         }\r\n//         else {\r\n//             dispatch({\r\n//                 type: CANDIDATE_SEARCH_SUCCESS,\r\n//                 payload: {\r\n//                     filteredCANDIDATES: [],\r\n//                     searchTerm\r\n//                 }\r\n//             });\r\n//         }\r\n//     }\r\n//     else {\r\n//         dispatch({\r\n//             type: CANDIDATE_SEARCH_SUCCESS,\r\n//             payload: {\r\n//                 filteredCANDIDATES: [],\r\n//                 searchTerm\r\n//             }\r\n//         });\r\n//     }\r\n }\r\n\r\n export const FetchCandidates = () => dispatch => {\r\n    // dispatch({\r\n    //     type: FETCH_CANDIDATES_BEGIN\r\n    // });\r\n    let url = config.adminApiUrl + 'getAllCandidates';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            console.log('CANDIDATES fetched');\r\n            dispatch({\r\n                type: FETCH_CANDIDATE_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_CANDIDATE_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const FetchSkills = () => dispatch => {\r\n    dispatch({\r\n        type: FETCH_SKILLS_BEGIN\r\n    });\r\n    let url = config.adminApiUrl + 'getAllSkills';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            console.log('skills fetched');\r\n            dispatch({\r\n                type: FETCH_SKILLS_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_SKILLS_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const SelectCandidate = (candidateModel) => dispatch => {\r\n    dispatch({\r\n        type: SELECT_CANDIDATE,\r\n        payload: candidateModel\r\n    })\r\n}\r\n\r\nexport const UpdateCandidate = (candidateModel) => dispatch => {\r\n    dispatch({\r\n        type: UPDATE_CANDIDATE_BEGIN\r\n    });\r\n    let url = config.adminApiUrl + 'candidate';\r\n    repository.updateData(url, candidateModel)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: UPDATE_CANDIDATE_SUCCESS\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: UPDATE_CANDIDATE_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const CloseSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: CLOSE_SNACKBAR\r\n    });\r\n}\r\nexport const OpenSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: OPEN_SNACKBAR\r\n    });\r\n}\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { PersonAdd } from '@material-ui/icons';\r\nimport LoadingComponent from '../lib/LoadingComponent';\r\nimport { Typography, IconButton } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst TestList = (props) => {\r\n    let { tests } = props;\r\n    return (\r\n        <div>\r\n        {!tests && <LoadingComponent /> }\r\n        {tests && tests.length === 0 && <Typography align=\"center\" variant=\"subtitle1\">No Tests Found </Typography> }\r\n        {tests && tests.length > 0 && \r\n        <Table>\r\n            <TableHead>\r\n            <TableRow>\r\n                <CustomTableCell>Test</CustomTableCell>\r\n                <CustomTableCell align=\"left\">Status</CustomTableCell>\r\n                <CustomTableCell align=\"right\">Not Attempted</CustomTableCell>\r\n                <CustomTableCell align=\"right\">Completed</CustomTableCell>\r\n                <CustomTableCell align=\"right\">To Evaluate</CustomTableCell>\r\n                <CustomTableCell align=\"right\"></CustomTableCell>\r\n            </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n            {tests.map((test, index) => (\r\n                <TableRow key={index}>\r\n                <CustomTableCell component=\"th\" scope=\"row\">\r\n                    <Link to={ {pathname: \"/testConsole\", state: { testId: test.$loki } }}>\r\n                        {test.testName}\r\n                    </Link>\r\n                </CustomTableCell>\r\n                <CustomTableCell align=\"left\"><Typography variant=\"subtitle2\" >{test.status.toUpperCase()}</Typography></CustomTableCell>\r\n                <CustomTableCell align=\"right\">{test.pendingAttempt}</CustomTableCell>\r\n                <CustomTableCell align=\"right\">{test.completed}</CustomTableCell>\r\n                <CustomTableCell align=\"right\">{test.toEvaluate}</CustomTableCell>\r\n                <CustomTableCell align=\"right\" scope=\"row\" component=\"th\">\r\n                    <Link to={ {pathname: \"/inviteConsole\", state: { testId: test.$loki } }}>\r\n                        <PersonAdd />\r\n                    </Link>\r\n                </CustomTableCell>\r\n                </TableRow>\r\n            ))}\r\n            </TableBody>\r\n        </Table>\r\n        }\r\n        </div>\r\n    );\r\n}\r\nconst CustomTableCell = withStyles(theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nexport default TestList;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AddTestComponent from '../components/AdminTest/AddTest';\r\nimport {    AddTest, UpdateTest, FetchSkills, FetchTests,  \r\n            CloseSnackbar, CurrentTestFieldChange,\r\n            OpenSnackbar } from '../actions/AdminTestActions';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SnackbarComponent from '../components/lib/SnackbarComponent';\r\nimport { Button, Card, CardHeader } from '@material-ui/core';\r\nimport TestList from '../components/AdminTest/TestList';\r\n\r\nclass AdminTestContainer extends React.Component {\r\n    \r\n    componentDidMount = () => {\r\n        this.reload();\r\n    }\r\n\r\n    componentWillReceiveProps = (newprops, oldprops) => {\r\n        console.log('adm in test container: component will receive');\r\n        // if(newprops.success_message !== '' && newprops.success_message !== undefined &&\r\n        //     newprops.success_message !== oldprops.success_message) {\r\n        if(newprops.snack_open) {\r\n            console.log('snack_open: component will update');\r\n            // this.props.OpenSnackbar();\r\n            // console.log('added successfully, testId: ');\r\n            // console.log(newprops.current_test.$loki);\r\n            // this.props.history.push({\r\n            //     pathName:  '/testConsole',\r\n            //     state: {\r\n            //         testId: newprops.current_test.$loki\r\n            //     }\r\n            // });\r\n        }\r\n    }\r\n\r\n    componentWillUpdate = () => {\r\n        console.log('adm in test container: component will update', this.props);\r\n        if(this.props.error) {\r\n                console.log('error status 401 - 11');\r\n                if(this.props.error.errorStatus === '401') {\r\n                console.log('error status 401 - 22');\r\n                this.props.history.push({\r\n                    pathname: '/dashboard'\r\n                });\r\n            }\r\n        }\r\n        if(this.props.snack_open) {\r\n            console.log('snack_open: component will update');\r\n            // this.props.history.push('/testConsole');\r\n            this.props.history.push({\r\n                pathname:  '/testConsole',\r\n                state: {\r\n                    testId: this.props.current_test.$loki\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    reload = () => {\r\n        // this.props.FetchSkills();\r\n        this.props.FetchTests();\r\n    }\r\n\r\n    onAddTest = (model) => {\r\n        this.props.AddTest(model, this.props.editMode)\r\n    }\r\n\r\n    render = () => {\r\n        console.log('render admin test container');\r\n        return(\r\n            <Grid container spacing={16}>\r\n                <Grid item xs={12} sm={12}>\r\n                <Card>\r\n                    <CardHeader action={\r\n                    <AddTestComponent \r\n                        onSubmit={ (model) => this.onAddTest(model) }\r\n                        model={this.props.current_test}\r\n                        skills={this.props.skills}\r\n                        editMode={this.props.editMode}\r\n                        onFieldChange={ (val, field, model) => this.props.CurrentTestFieldChange(val, field, model) } \r\n                        />\r\n                    }\r\n                    title=\"Tests\" />\r\n                <TestList tests={this.props.tests} />\r\n                </Card>\r\n                <SnackbarComponent \r\n                    openSnack={this.props.snack_open} handleClose={() => this.props.CloseSnackbar()} \r\n                    snackMessage={\"Data Saved Successfully!\"} \r\n                    /> \r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.adminTestReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    AddTest: (model, editMode) => dispatch(AddTest(model, editMode)),\r\n    UpdateTest: (model) => dispatch(UpdateTest(model)),\r\n    FetchSkills: () => dispatch(FetchSkills()),\r\n    FetchTests: () => dispatch(FetchTests()),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    CurrentTestFieldChange: (val, field, model) => dispatch(CurrentTestFieldChange(val, field, model))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminTestContainer);","import axios from 'axios';\r\nimport config from '../config';\r\nimport repository from '../repository';\r\nimport { FETCH_CATEGORIES_SUCCESS, FETCH_CATEGORIES_FAIL } from './CategoryActions';\r\n\r\nexport const ADD_TEST_BEGIN = 'ADD_TEST_BEGIN';\r\nexport const ADD_TEST_SUCCESS = 'ADD_TEST_SUCCESS';\r\nexport const ADD_TEST_FAIL = 'ADD_TEST_FAIL';\r\nexport const TEST_SEARCH_BEGIN = 'TEST_SEARCH_BEGIN';\r\nexport const TEST_SEARCH_SUCCESS = 'TEST_SEARCH_SUCCESS';\r\nexport const UPDATE_TEST_BEGIN = 'UPDATE_TEST_BEGIN';\r\nexport const UPDATE_TEST_SUCCESS = 'UPDATE_TEST_SUCCESS';\r\nexport const UPDATE_TEST_FAIL = 'UPDATE_TEST_FAIL';\r\nexport const SELECT_TEST = 'SELECT_TEST';\r\nexport const CURRENT_TEST_FIELD_CHANGE = 'CURRENT_TEST_FIELD_CHANGE';\r\nexport const CURRENT_TEST_FIELD_CHANGE_END = 'CURRENT_TEST_FIELD_CHANGE_END';\r\nexport const CURRENT_ANSWER_FIELD_CHANGE = 'CURRENT_ANSWER_FIELD_CHANGE';\r\nexport const CURRENT_ANSWER_FIELD_CHANGE_END = 'CURRENT_ANSWER_FIELD_CHANGE_END';\r\nexport const CHOICE_ADDED_TO_TEST = 'CHOICE_ADDED_TO_TEST';\r\nexport const FETCH_TEST_BEGIN = 'FETCH_TEST_BEGIN';\r\nexport const FETCH_TESTS_SUCCESS = 'FETCH_TESTS_SUCCESS';\r\nexport const FETCH_TESTS_FAIL = 'FETCH_TESTS_FAIL';\r\nexport const FETCH_SKILLS_SUCCESS = 'FETCH_SKILLS_SUCCESS';\r\nexport const FETCH_SKILLS_FAIL = 'FETCH_SKILLS_FAIL';\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\r\nexport const OPEN_SNACKBAR = 'OPEN_SNACKBAR';\r\n\r\nexport const CurrentTestFieldChange = (val, field, model) => dispatch => {\r\n    console.log('test field change: ' + field);\r\n    console.log(val);\r\n    switch(field)\r\n    {\r\n        case 'testName':\r\n        {\r\n            model.testName = val;\r\n            dispatch({\r\n                type: CURRENT_TEST_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'skill':\r\n        {\r\n            model.skill = val;\r\n            dispatch({\r\n                type: CURRENT_TEST_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'duration':\r\n        {\r\n            model.duration = val;\r\n            dispatch({\r\n                type: CURRENT_TEST_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'experienceYears':\r\n        {\r\n            model.experienceYears = val;\r\n            dispatch({\r\n                type: CURRENT_TEST_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        default:\r\n        {\r\n        }\r\n    }\r\n    dispatch({\r\n        type: CURRENT_TEST_FIELD_CHANGE_END\r\n    });\r\n}\r\n\r\nexport const CurrentAnswerFieldChange = (val, field, model) => dispatch => {\r\n    console.log('test answer field change: ' + field);\r\n    console.log(val);\r\n    switch(field)\r\n    {\r\n        case 'content':\r\n        {\r\n            model.content = val;\r\n            dispatch({\r\n                type: CURRENT_ANSWER_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'isCorrect':\r\n        {\r\n            model.isCorrect = val;\r\n            dispatch({\r\n                type: CURRENT_ANSWER_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        default:\r\n        {\r\n        }\r\n    }\r\n    dispatch({\r\n        type: CURRENT_ANSWER_FIELD_CHANGE_END\r\n    });\r\n}\r\n\r\nexport const AddAnswerChoice = (answerModel, testModel) => dispatch => {\r\n    if(testModel) {\r\n        if(!testModel.choices) {\r\n            testModel.choices = [];\r\n        }\r\n        testModel.choices.push(answerModel);\r\n    }\r\n    dispatch({\r\n        type: CHOICE_ADDED_TO_TEST,\r\n        payload: testModel\r\n    })\r\n}\r\n\r\nexport const AddTest = (testModel, editMode) => dispatch => {\r\n    dispatch({\r\n        type: ADD_TEST_BEGIN\r\n    });\r\n    let url = config.adminApiUrl + 'test';\r\n    console.log('action model');\r\n    console.log(testModel);\r\n    testModel.status = 'draft';\r\n    repository.saveData(url, testModel)\r\n        .then((res) => {\r\n            console.log('test saved: ' + res);\r\n            dispatch({\r\n                type: ADD_TEST_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: ADD_TEST_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n    \r\n}\r\n\r\n export const FetchCategories = () => dispatch => {\r\n    // dispatch({\r\n    //     type: FETCH_CATEGORIES_BEGIN\r\n    // });\r\n    let url = config.adminApiUrl + 'getAllCategories';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            console.log('categories fetched');\r\n            dispatch({\r\n                type: FETCH_CATEGORIES_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_CATEGORIES_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const FetchSkills = () => dispatch => {\r\n    let url = config.adminApiUrl + 'getAllSkills';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            console.log('skills fetched');\r\n            dispatch({\r\n                type: FETCH_SKILLS_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_SKILLS_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\n// export const SelectMcq = (testModel) => dispatch => {\r\n//     dispatch({\r\n//         type: SELECT_TEST,\r\n//         payload: testModel\r\n//     })\r\n// }\r\n\r\nexport const UpdateTest = (testModel) => dispatch => {\r\n    dispatch({\r\n        type: UPDATE_TEST_BEGIN\r\n    });\r\n    let url = config.adminApiUrl + 'test';\r\n    repository.updateData(url, testModel)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: UPDATE_TEST_SUCCESS\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: UPDATE_TEST_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const FetchTests = () => dispatch => {\r\n    dispatch({\r\n        type: FETCH_TEST_BEGIN\r\n    });\r\n    let url = config.adminApiUrl + 'getAllTests';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            console.log('promise resolved');\r\n            dispatch({\r\n                type: FETCH_TESTS_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log('promise rejected');\r\n            dispatch({\r\n                type: FETCH_TESTS_FAIL,\r\n                payload: { errorStatus: '401' }\r\n            });\r\n        });\r\n    // let accessToken = localStorage.getItem(\"auth-token\");\r\n    // let options = {\r\n    //     headers: {\r\n    //       \"x-access-token\": accessToken\r\n    //     }\r\n    // };\r\n    // let url = config.adminApiUrl + 'getAllTests';\r\n    // repository.getData(url, options)\r\n    //     .then((res) => {\r\n    //         console.log('TEST fetched');\r\n    //         dispatch({\r\n    //             type: FETCH_TESTS_SUCCESS,\r\n    //             payload: res.data\r\n    //         });\r\n    //     })\r\n    //     .catch((err) => {\r\n    //         dispatch({\r\n    //             type: FETCH_TESTS_FAIL,\r\n    //             payload: err\r\n    //         });\r\n    //     });\r\n}\r\n\r\nexport const CloseSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: CLOSE_SNACKBAR\r\n    });\r\n}\r\nexport const OpenSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: OPEN_SNACKBAR\r\n    });\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {    FetchCandidates, \r\n            CloseSnackbar,\r\n            OpenSnackbar, \r\n            BeginSearch, SearchCandidate } from '../../actions/CandidateActions';\r\nimport { Link } from 'react-router-dom';\r\nimport { FormControl, Grid, Card, CardHeader, Button, CardContent, List, ListItem } from '@material-ui/core';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nclass CandidateList extends Component {\r\n\r\n    componentDidMount = () => {\r\n        this.props.FetchCandidates();\r\n    }\r\n\r\n    render = () => {\r\n        let { candidates } = this.props;\r\n        return (\r\n            <Card>\r\n                <CardHeader\r\n                    action={\r\n                        <Link to=\"/addCandidate\" >\r\n                            <Button variant=\"contained\" color=\"primary\">Add Candidate</Button>\r\n                        </Link>\r\n                    }\r\n                    title=\"Candidate List\"\r\n                    subheader={\"For current recruiter\"}>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <List>\r\n                        { candidates && candidates.length > 0 &&\r\n                          candidates.map((item, index) => {\r\n                            return (\r\n                                <ListItem divider={false} key={index} >\r\n                                    <ExpansionPanel style={{width:'100%'}}>\r\n                                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                                        <Grid container spacing={16}>\r\n                                            <Grid item xs={6} sm={6}>\r\n                                                <Typography variant=\"h6\">{item.fullName}</Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={3} sm={3}>\r\n                                                <Typography variant=\"subtitle1\" >{item.email}</Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={2} sm={2}>\r\n                                                <Typography variant=\"subtitle1\" >\r\n                                                    {item.experienceYears} years {item.experienceMonths} months\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                            <div style={styles.formControl}>\r\n                                                {item.description && \r\n                                                    <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                                        <Typography variant=\"subtitle1\">\r\n                                                            No description\r\n                                                        </Typography>\r\n                                                    </FormControl>\r\n                                                }\r\n                                            </div>\r\n                                        </ExpansionPanelDetails>\r\n                                        <ExpansionPanelActions>\r\n                                        <Button variant=\"outlined\" size=\"small\" color=\"primary\" >\r\n                                            Edit\r\n                                        </Button>\r\n                                        </ExpansionPanelActions>\r\n                                    </ExpansionPanel>\r\n                                </ListItem>\r\n                            )\r\n                        } )}\r\n                    </List>\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state.candidateReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    FetchCandidates: () => dispatch(FetchCandidates()),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    BeginSearch: () => dispatch(BeginSearch()),\r\n    SearchCandidate: (searchTerm, candidateList) => dispatch(SearchCandidate(searchTerm, candidateList)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CandidateList);\r\nconst styles = {\r\n    formControl: {\r\n        width: '70%'\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Card, CardHeader, CardContent, FormControl,\r\n         TextField, \r\n         Button,\r\n         Typography,\r\n         Divider} from '@material-ui/core';\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport '../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport 'draft-js/dist/Draft.css';\r\n\r\n\r\nconst SendTestInvite = (props) => {\r\n    let { currentTest, inviteInfo } = props;\r\n    \r\n    return (\r\n        // <Card>\r\n        //     <CardContent>\r\n        <div>\r\n                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                    <TextField\r\n                        id=\"outlined-name\"\r\n                        label=\"To\"\r\n                        value={inviteInfo.emailTo}\r\n                        onChange={(e) => props.onFieldChange(e.target.value, 'emailTo')}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        helperText=\"e.g. john@hotmail.com (to invite multiple candidates, enter multiple email ids separated by ';')\"\r\n                    />\r\n                </FormControl>\r\n                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                    <TextField\r\n                        id=\"outlined-name\"\r\n                        label=\"Subject\"\r\n                        value={inviteInfo.emailSubject}\r\n                        onChange={(e) => props.onFieldChange(e.target.value, 'emailSubject')}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                </FormControl>\r\n                    <Typography align=\"center\" variant=\"subtitle1\">\r\n                    You have been invited to attend the {currentTest.testName} challenge. We wish you all the best!\r\n                    </Typography>\r\n\r\n                    <div style={styles.margintop}>\r\n                    <Typography variant=\"button\" align=\"center\">\r\n                    Duration: {currentTest.duration} mins\r\n                    <br></br><br></br>\r\n                    <a href=\"#\" style={styles.margintop}>\r\n                    <Button variant=\"contained\" align=\"center\" size=\"large\" color=\"secondary\">\r\n                                Start Challenge\r\n                    </Button>\r\n                    </a>\r\n                    </Typography>\r\n                    </div>\r\n                    <Divider style={styles.margintop}/>\r\n                    <Typography gutterBottom align=\"center\" variant=\"subtitle2\" style={styles.margintop}>\r\n                        For any technical queries, please refer to <a href=\"#\">FAQ</a> or email us at support@techassessment.com\r\n                    </Typography>\r\n        </div>\r\n    );\r\n}\r\nexport default SendTestInvite;\r\nconst styles ={\r\n    container: {\r\n        marginLeft: '15%'\r\n    },\r\n    formControl: {\r\n        width: '70%',\r\n        marginBottom: '1%',\r\n        marginLeft: '15%'\r\n    },\r\n    margintop: {\r\n        marginTop: '2%',\r\n        // marginLeft: '30%'\r\n    },\r\n    duration: {\r\n        marginTop: '4%',\r\n    },\r\n    editorControl: {\r\n        height: '100%'\r\n        // width: '70%',\r\n        // padding: '1%',\r\n        // borderRadius: '5px',\r\n        // border: '1px solid #ccc'\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {    FetchTest, AddMcqToTest, PublishTest, CloseSnackbar,\r\n            OpenSnackbar } from '../../actions/TestConsoleActions';            \r\nimport {    SendInvite,\r\n            InviteInfoFieldChange } from '../../actions/InviteConsoleActions';            \r\nimport Grid from '@material-ui/core/Grid';\r\nimport SnackbarComponent from '../../components/lib/SnackbarComponent';\r\nimport { Button, Card, CardHeader, CardContent, CardActions } from '@material-ui/core';\r\nimport LoadingComponent from '../../components/lib/LoadingComponent';\r\nimport SendTestInvite from './SendTestInvite';\r\nimport { KeyboardBackspace } from '@material-ui/icons';\r\n\r\nclass InviteConsoleContainer extends React.Component {\r\n    \r\n    componentDidMount = () => {\r\n        this.reload();\r\n    }\r\n\r\n    componentWillReceiveProps = (newprops, oldprops) => {\r\n        if(newprops.success_message !== '' && newprops.success_message !== undefined) {\r\n            // this.props.OpenSnackbar();\r\n        }\r\n        if(newprops.inviteAdded === 'yes') {\r\n            this.props.history.push({\r\n                pathname:  '/tests'\r\n            });\r\n        }\r\n    }\r\n\r\n    reload = () => {\r\n        // this.props.FetchSkills();\r\n        let { state } = this.props.location;\r\n        console.log('reload: location state');\r\n        console.log(state);\r\n        if(state){\r\n            this.props.FetchTest(state.testId);\r\n        }\r\n    }\r\n\r\n    onSendInvite = () => {\r\n        let { current_test, inviteInfo } = this.props;\r\n        this.props.SendInvite(current_test, inviteInfo);\r\n        this.props.history.push({\r\n            pathname: '/testConsole', state: { testId: current_test.testId }\r\n        })\r\n    }\r\n\r\n    render = () => {\r\n        let { current_test, inviteInfo, inviteAdded } = this.props;\r\n        console.log('invite container: render');\r\n        console.log(current_test);\r\n        if(current_test && current_test.selectedMcqs) {\r\n            console.log(current_test.selectedMcqs);\r\n        }\r\n        return(\r\n            <Grid container spacing={16}>\r\n                <Grid item xs={12} sm={12} md={8}>\r\n                {!current_test && <LoadingComponent />}\r\n                {current_test &&\r\n                <Card>\r\n                    <CardHeader \r\n                        action={\r\n                        <Button color=\"primary\" size=\"large\" variant=\"outlined\"\r\n                                onClick={() => this.props.history.goBack() }>\r\n                            <KeyboardBackspace />\r\n                        </Button>\r\n                        }\r\n                        title=\"Send Test Invites\"\r\n                        subheader={current_test.testName}\r\n                    />\r\n                    <CardContent>\r\n                        <SendTestInvite\r\n                            // onSendInvite={(testInfo, inviteInfo) => this.onSendInvite(testInfo, inviteInfo) }\r\n                            selectedMcqs={current_test.selectedMcqs} \r\n                            currentTest={current_test}\r\n                            inviteInfo={inviteInfo}\r\n                            onFieldChange={(val, field) => this.props.InviteInfoFieldChange(val, field, inviteInfo)}\r\n                        />\r\n                    </CardContent>\r\n                    <CardActions style={styles.actionButton}>\r\n                        <Button variant=\"contained\" size=\"large\" color=\"primary\"\r\n                                onClick={() => this.onSendInvite() }>\r\n                            Send Invite\r\n                        </Button>\r\n                    </CardActions>\r\n                </Card>\r\n                }\r\n                <SnackbarComponent \r\n                    openSnack={this.props.snack_open} handleClose={() => this.props.CloseSnackbar()} \r\n                    snackMessage={\"Data Saved Successfully!\"} \r\n                /> \r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.inviteConsoleReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    // AddTest: (model, editMode) => dispatch(AddTest(model, editMode)),\r\n    // UpdateTest: (model) => dispatch(UpdateTest(model)),\r\n    // FetchSkills: () => dispatch(FetchSkills()),\r\n    SendInvite: (inviteInfo, testModel) => dispatch(SendInvite(inviteInfo, testModel)),\r\n    // PublishTest: (testModel) => dispatch(PublishTest(testModel)),\r\n    FetchTest: (testId) => dispatch(FetchTest(testId)),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    InviteInfoFieldChange: (val, field, inviteInfo) => dispatch(InviteInfoFieldChange(val, field, inviteInfo))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InviteConsoleContainer);\r\nconst styles = {\r\n    actionButton: {\r\n        marginLeft: '80%'\r\n    }\r\n}","import axios from 'axios';\r\nimport config from '../config';\r\nimport repository from '../repository';\r\n\r\nexport const SEND_TEST_INVITE = 'SEND_TEST_INVITE';\r\n// export const ADD_QUESTION_SUCCESS = 'ADD_QUESTION_SUCCESS';\r\n// export const ADD_QUESTION_FAIL = 'ADD_QUESTION_FAIL';\r\n// export const TEST_SEARCH_BEGIN = 'TEST_SEARCH_BEGIN';\r\n// export const TEST_SEARCH_SUCCESS = 'TEST_SEARCH_SUCCESS';\r\n// export const UPDATE_QUESTION_BEGIN = 'UPDATE_QUESTION_BEGIN';\r\n// export const UPDATE_QUESTION_SUCCESS = 'UPDATE_QUESTION_SUCCESS';\r\n// export const UPDATE_QUESTION_FAIL = 'UPDATE_QUESTION_FAIL';\r\n// export const SELECT_TEST = 'SELECT_TEST';\r\n// export const CURRENT_QUESTION_FIELD_CHANGE = 'CURRENT_QUESTION_FIELD_CHANGE';\r\n// export const CURRENT_QUESTION_FIELD_CHANGE_END = 'CURRENT_QUESTION_FIELD_CHANGE_END';\r\n// export const CURRENT_ANSWER_FIELD_CHANGE = 'CURRENT_ANSWER_FIELD_CHANGE';\r\n// export const CURRENT_ANSWER_FIELD_CHANGE_END = 'CURRENT_ANSWER_FIELD_CHANGE_END';\r\n// export const CHOICE_ADDED_TO_TEST = 'CHOICE_ADDED_TO_TEST';\r\n// export const FETCH_QUESTION_BEGIN = 'FETCH_QUESTION_BEGIN';\r\n// export const FETCH_QUESTION_SUCCESS = 'FETCH_QUESTION_SUCCESS';\r\n// export const FETCH_QUESTION_FAIL = 'FETCH_QUESTION_FAIL';\r\nexport const SEND_TEST_INVITE_SUCCESS = 'SEND_TEST_INVITE_SUCCESS';\r\nexport const SEND_TEST_INVITE_FAIL = 'SEND_TEST_INVITE_FAIL';\r\nexport const INVITE_INFO_FIELD_CHANGE = 'INVITE_INFO_FIELD_CHANGE';\r\n\r\nexport const SendInvite = (testModel, inviteInfo) => dispatch => {\r\n    let url = config.candidateApiUrl + 'sendInvite';\r\n    \r\n    if(!testModel.invitations){\r\n        testModel.invitations = [];\r\n    }\r\n    testModel.invitations.push(inviteInfo);\r\n    console.log('testmodel invite sent', testModel);\r\n    repository.saveData(url, testModel)\r\n        .then((res) => {\r\n            console.log('invitation sent');\r\n            console.log(res);\r\n            dispatch({\r\n                type: SEND_TEST_INVITE_SUCCESS,\r\n                // payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            dispatch({\r\n                type: SEND_TEST_INVITE_FAIL,\r\n                // payload: err\r\n            });\r\n        });\r\n    \r\n}\r\nexport const InviteInfoFieldChange = (val, field, model) => dispatch => {\r\n    switch(field)\r\n    {\r\n        case 'emailTo':\r\n        {\r\n            model.emailTo = val;\r\n            dispatch({\r\n                type: INVITE_INFO_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'emailSubject':\r\n        {\r\n            model.emailSubject = val;\r\n            dispatch({\r\n                type: INVITE_INFO_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Typography, Card, CardHeader, CardContent, FormControl,\r\n         FormControlLabel, FormLabel, FormGroup, Checkbox, CardActions,\r\n         Button } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport AuthHelper from '../../AuthHelper';\r\nimport LoadingComponent from '../../components/lib/LoadingComponent';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\n\r\nclass QuestionSimulatorConsoleContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let userInfo = AuthHelper.GetUserInfo();\r\n        console.log('userInfo', userInfo);\r\n        this.state = {\r\n            mcq: {},\r\n            selectedAnswers : []\r\n        };\r\n    }\r\n\r\n    handleAnswerSelect = (event, itemIndex) => {\r\n        let { selectedAnswers } = this.state;\r\n        if(selectedAnswers && selectedAnswers.indexOf(itemIndex) !== -1) {\r\n            let tempAnswers = [];\r\n            selectedAnswers.map((item, idx) => {\r\n                tempAnswers.push(item);\r\n            });\r\n            tempAnswers.push(itemIndex);\r\n            this.setState({\r\n                selectedAnswers: tempAnswers\r\n            })\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        let { model } = this.props;\r\n        console.log('question simulator', model);\r\n        let { mcq, selectedAnswers } = this.state;\r\n        let qEntity = {};\r\n        if(model && model.selectedMcqs && model.selectedMcqs.length > 0) {\r\n            qEntity = model.selectedMcqs[0];\r\n        }\r\n        else {\r\n            return (\r\n                <LoadingComponent />\r\n            )\r\n        }\r\n        let itemIndex = 0;\r\n        return (\r\n            <Card>\r\n                <CardHeader \r\n                            title={qEntity.question}\r\n                            subheader={qEntity.category}>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <Typography variant=\"subtitle1\">\r\n                        {qEntity.description}\r\n                    </Typography>\r\n                    <FormControl component=\"fieldset\">\r\n                        <FormLabel component=\"legend\">Options</FormLabel>\r\n                        {qEntity.choices && qEntity.choices.length > 0 &&\r\n                        <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                            {qEntity.choices.map((choiceItem, choiceIndex) => {\r\n                                return (\r\n                                    <ListItem\r\n                                    button\r\n                                    selected={selectedAnswers.indexOf(choiceIndex) > -1}\r\n                                    onClick={event => this.handleAnswerSelect(event, choiceIndex)}>\r\n                                    <ListItemIcon>\r\n                                        <InboxIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={choiceItem.content} />\r\n                                    </ListItem>\r\n                                )\r\n                            })}\r\n                        </List>\r\n                        }\r\n                    </FormControl>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button variant=\"contained\" size=\"small\">Previous</Button>\r\n                    <Button variant=\"contained\" size=\"small\" color=\"primary\">Next</Button>\r\n                </CardActions>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\n// const mapStateToProps = state => ({\r\n//     ...state.simulatorConsoleReducer\r\n// });\r\n// const mapDispatchToProps = dispatch => ({\r\n//     // LoadExamSimulator: () => dispatch(LoadExamSimulator())\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(QuestionSimulatorConsoleContainer);\r\nexport default QuestionSimulatorConsoleContainer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport QuestionSimulatorConsoleContainer from './QuestionSimulatorConsoleContainer';\r\nimport { LoadExamSimulator } from '../../actions/QuestionSimulatorConsoleActions';\r\nimport LoadingComponent from '../../components/lib/LoadingComponent';\r\n\r\nclass SimulatorConsoleContainer extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        this.props.LoadExamSimulator();\r\n    }\r\n\r\n    render = () => {\r\n        let { candidateTestObject } = this.props;\r\n        console.log('test simulator', this.props);\r\n        if(!candidateTestObject) {\r\n            return <LoadingComponent />\r\n        }\r\n        return (\r\n        <div>\r\n            <QuestionSimulatorConsoleContainer model={candidateTestObject.data} />\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state.questionSimulatorConsoleReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    LoadExamSimulator: () => dispatch(LoadExamSimulator())\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SimulatorConsoleContainer);\r\n","import config from '../config';\r\nimport repository from '../repository';\r\nimport AuthHelper from '../AuthHelper';\r\n\r\nexport const LOAD_EXAM_SIMULATOR_SUCCESS = 'LOAD_EXAM_SIMULATOR_SUCCESS';\r\n\r\nexport const LoadExamSimulator = () => dispatch => {\r\n    let userInfo = AuthHelper.GetUserInfo();\r\n    let url = config.candidateApiUrl + 'startTest';\r\n    let testModel = {\r\n        testId: 1\r\n    };\r\n    repository.saveData(url, testModel)\r\n            .then((res) => {\r\n                console.log('exam simulator loaded', res);\r\n                dispatch({\r\n                    type: LOAD_EXAM_SIMULATOR_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            })\r\n}","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ component: Component, authed, ...rest}) => {\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            render={(props) => isLoggedIn() === true\r\n                ? <Component {...props} />\r\n                : <Redirect to={{pathname: '/login'}} />}\r\n        />\r\n    );\r\n}\r\nconst isLoggedIn = () => {\r\n    let token = localStorage.getItem('auth-token');\r\n    if(token) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport default PrivateRoute;","import React from 'react';\r\nimport AddCategoryComponent from './Categories/AddCategory';\r\nimport AddCandidateComponent from './Candidates/AddCandidate';\r\nimport DashboardComponent from './Dashboard';\r\n// import UsersComponent from './Users';\r\nimport UsersComponent from '../Containers/User/UserContainer';\r\nimport LoginComponent from './lib/LoginComponent';\r\nimport User401 from '../Containers/User/User401';\r\nimport UserForbidden from '../Containers/User/UserForbidden';\r\nimport ResourceNotFound from '../Containers/User/ResourceNotFound';\r\nimport { Route } from 'react-router-dom'\r\nimport CategoriesContainer from '../Containers/CategoryContainer';\r\nimport SkillsContainer from '../Containers/SkillContainer';\r\nimport TestConsoleContainer from '../Containers/TestConsole/TestConsoleContainer';\r\nimport McqContainer from '../Containers/McqContainer';\r\nimport BulkMcq from '../components/Mcq/BulkUpload';\r\nimport CandidatesContainer from '../Containers/CandidateContainer';\r\nimport AdminTestContainer from '../Containers/AdminTestContainer';\r\nimport McqList from '../components/Mcq/McqList';\r\nimport CandidateList from '../components/Candidates/CandidateList';\r\nimport InviteConsoleContainer from '../Containers/InviteConsole/InviteConsoleContainer';\r\nimport SimulatorConsoleContainer from '../Containers/Simulator/SimulatorConsoleContainer';\r\nimport PrivateRoute from '../components/lib/PrivateRoute';\r\n\r\nconst Routes = (props) => {\r\n    return (\r\n        <div>\r\n            <PrivateRoute exact path=\"/\" component={DashboardComponent} />\r\n            <Route path=\"/login\" component={LoginComponent} />\r\n            <Route path=\"/unauthorizedUser\" component={User401} />\r\n            <Route path=\"/userForbidden\" component={UserForbidden} />\r\n            <Route path=\"/notFound\" component={ResourceNotFound} />\r\n            <PrivateRoute path=\"/dashboard\" component={DashboardComponent} />\r\n            <PrivateRoute path=\"/tests\" component={AdminTestContainer} />\r\n            {/* <Route path=\"/testConsole\" component={TestConsoleContainer} /> */}\r\n            <PrivateRoute path=\"/testConsole\" component={TestConsoleContainer} />\r\n            <PrivateRoute path=\"/inviteConsole\" component={InviteConsoleContainer} />\r\n            <PrivateRoute path=\"/mcqs\" component={McqList} />\r\n            <PrivateRoute path=\"/addMcq\" component={McqContainer} />\r\n            <PrivateRoute path=\"/bulkMcq\" component={BulkMcq} />\r\n            <PrivateRoute path=\"/categories\" component={CategoriesContainer} />\r\n            <PrivateRoute path=\"/skills\" component={SkillsContainer} />\r\n            <PrivateRoute path=\"/addCategory\" component={AddCategoryComponent} />\r\n            {/* <Route path=\"/candidates\" component={CandidateList} /> */}\r\n            {/* <Route path=\"/addCandidate\" component={CandidatesContainer} /> */}\r\n            <PrivateRoute path=\"/users\" component={UsersComponent} />\r\n\r\n            <PrivateRoute path=\"/simulator\" component={SimulatorConsoleContainer} />\r\n        </div>\r\n    );\r\n}\r\nexport default Routes;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { SetUserInfo, LogoutCurrentUser } from '../actions/UserActions';\r\n\r\nimport Header from './layouts/Header';\r\nimport SideDrawer from './layouts/SideDrawer';\r\n\r\n// import McqComponent from './Mcq/McqList';\r\n// import AddMcqComponent from './Mcq/AddMcq';\r\n// import CategoriesComponent from './Categories/CategoryList';\r\n// import AddCategoryComponent from './Categories/AddCategory';\r\n// import DashboardComponent from './Dashboard';\r\n// import UsersComponent from './Users';\r\nimport Routes from './Routes';\r\nimport AuthHelper from '../AuthHelper';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing.unit * 7 + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing.unit * 9 + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 3,\r\n  },\r\n});\r\n\r\nclass Shell extends React.Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n  \r\n  componentDidMount = () => {\r\n    console.log('shell userinfo', AuthHelper.GetUserInfo());\r\n    // this.props.SetUserInfo(AuthHelper.GetUserInfo());\r\n  }\r\n  Logout = () => {\r\n    this.props.LogoutCurrentUser();\r\n    AuthHelper.GetHistory().push({\r\n      pathname: '/login'\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n    console.log('shell props', this.props);\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <Header classes={classes} \r\n                openState={this.state.open} \r\n                onDrawerOpen={this.handleDrawerOpen}\r\n                onLogout={() => this.Logout()}\r\n                />\r\n        <Router>\r\n          <SideDrawer classes={classes} \r\n                  openState={this.state.open} \r\n                  onDrawerClose={this.handleDrawerClose}\r\n                  theme={theme}\r\n                  />\r\n          <main className={classes.content}>\r\n            <div className={classes.toolbar} />\r\n                <Routes />\r\n          </main>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nShell.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state.userReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  SetUserInfo: (userInfo) => dispatch(SetUserInfo(userInfo)),\r\n  LogoutCurrentUser: () => dispatch(LogoutCurrentUser())\r\n  // AddTest: (model, editMode) => dispatch(AddTest(model, editMode)),\r\n  // UpdateTest: (model) => dispatch(UpdateTest(model)),\r\n  // FetchSkills: () => dispatch(FetchSkills()),\r\n  // FetchTests: () => dispatch(FetchTests()),\r\n  // CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n  // OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n  // CurrentTestFieldChange: (val, field, model) => dispatch(CurrentTestFieldChange(val, field, model))\r\n});\r\nexport default withStyles(styles, { withTheme: true })(connect(mapStateToProps, mapDispatchToProps)(Shell));\r\n// export default withStyles(styles, { withTheme: true })(Shell);\r\n","import { ADD_CATEGORY_SUCCESS, ADD_CATEGORY_FAIL, SELECT_CATEGORY,\r\n         UPDATE_CATEGORY_SUCCESS, UPDATE_CATEGORY_FAIL,\r\n         FETCH_CATEGORIES_SUCCESS, \r\n         FETCH_CATEGORIES_FAIL,\r\n         OPEN_SNACKBAR, \r\n         CLOSE_SNACKBAR, \r\n         CURRENT_CATEGORY_FIELD_CHANGE,\r\n         CURRENT_CATEGORY_FIELD_CHANGE_END, \r\n         CATEGORY_SEARCH_BEGIN,\r\n         CATEGORY_SEARCH_SUCCESS} from \"../actions/CategoryActions\";\r\n\r\nconst initial_current_Category = {\r\n    title: '',\r\n    description: ''\r\n}\r\n\r\nexport default (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ADD_CATEGORY_SUCCESS:\r\n        {\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                current_category: {title:'',description:''},\r\n                success_message: 'Category added successfully'\r\n            }\r\n        }\r\n        case UPDATE_CATEGORY_FAIL:\r\n        case ADD_CATEGORY_FAIL:\r\n        {\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        }\r\n        case SELECT_CATEGORY:\r\n        {\r\n            return {\r\n                ...state,\r\n                field_updated: !state.field_updated,\r\n                editMode: true,\r\n                current_category: action.payload\r\n            }\r\n        }\r\n        case UPDATE_CATEGORY_SUCCESS:\r\n        {\r\n            return {\r\n                ...state,\r\n                editMode: false,\r\n                current_category: {title:'',description:''},\r\n                success_message: 'Category Updated Successfully'\r\n            }\r\n        }\r\n        case CURRENT_CATEGORY_FIELD_CHANGE:\r\n        {\r\n            console.log('field change reducer');\r\n            console.log(action.payload);\r\n            \r\n            return {\r\n                ...state,\r\n                field_updated: true,\r\n                current_category: action.payload\r\n            }\r\n        }\r\n        case CURRENT_CATEGORY_FIELD_CHANGE_END:\r\n        {\r\n            return {\r\n                ...state,\r\n                field_updated: false\r\n            }\r\n        }\r\n        case FETCH_CATEGORIES_SUCCESS:\r\n        {\r\n            console.log('fetch categories reducer');\r\n            console.log(action.payload);\r\n            \r\n            return {\r\n                ...state,\r\n                error: null,\r\n                editMode: false,\r\n                current_category: {title:'',description:''},\r\n                success_message: '',\r\n                search_enabled: false,\r\n                categoryList: action.payload\r\n            }\r\n        }\r\n        case CATEGORY_SEARCH_BEGIN:\r\n        {\r\n            return {\r\n                ...state,\r\n                search_enabled: !state.search_enabled,\r\n                search_term: '',\r\n                filteredCategories: state.categoryList\r\n            }\r\n        }\r\n        // case CATEGORY_SEARCH_TERM_CHANGE:\r\n        // {\r\n        //     console.log('search term change reducer');\r\n        //     console.log(action.payload);\r\n            \r\n        //     return {\r\n        //         ...state,\r\n        //         search_term: action.payload\r\n        //     }\r\n        // }\r\n        case CATEGORY_SEARCH_SUCCESS:\r\n        {   \r\n            return {\r\n                ...state,\r\n                search_term: action.payload.searchTerm,\r\n                // search_enabled: false,\r\n                filteredCategories: action.payload.filteredCategories\r\n            }\r\n        }\r\n        case FETCH_CATEGORIES_FAIL:\r\n        {\r\n            return {\r\n                ...state,\r\n                current_category: initial_current_Category,\r\n                error: action.payload\r\n            }\r\n        }\r\n        case OPEN_SNACKBAR:\r\n        {\r\n            return {\r\n                ...state,\r\n                snack_open: true\r\n            }\r\n        }\r\n        case CLOSE_SNACKBAR:\r\n        {\r\n            return {\r\n                ...state,\r\n                snack_open: false\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport categoryReducer from \"./categoryReducer\";\r\nimport skillReducer from \"./skillReducer\";\r\nimport mcqReducer from \"./mcqReducer\";\r\nimport candidateReducer from './candidateReducer';\r\nimport adminTestReducer from './adminTestReducer';\r\nimport testConsoleReducer from './testConsoleReducer';\r\nimport inviteConsoleReducer from './inviteConsoleReducer';\r\nimport userReducer from './userReducer';\r\nimport questionSimulatorConsoleReducer from './questionSimulatorConsoleReducer';\r\n\r\nexport default combineReducers({\r\n    categoryReducer,\r\n    skillReducer,\r\n    mcqReducer,\r\n    candidateReducer,\r\n    adminTestReducer,\r\n    testConsoleReducer,\r\n    inviteConsoleReducer,\r\n    userReducer,\r\n    questionSimulatorConsoleReducer\r\n});","import { ADD_SKILL_SUCCESS, ADD_SKILL_FAIL,\r\n    FETCH_SKILLS_SUCCESS, \r\n    FETCH_SKILLS_FAIL,\r\n    OPEN_SNACKBAR, \r\n    CLOSE_SNACKBAR, \r\n    CURRENT_SKILL_FIELD_CHANGE,\r\n    CURRENT_SKILL_FIELD_CHANGE_END, \r\n    SKILL_SEARCH_BEGIN,\r\n    SKILL_SEARCH_SUCCESS} from \"../actions/SkillActions\";\r\n\r\n\r\nexport default (state = {}, action) => {\r\nswitch(action.type) {\r\n   case ADD_SKILL_SUCCESS:\r\n   {\r\n       return {\r\n           ...state,\r\n           error: null,\r\n           current_skill: {skill:''},\r\n           success_message: 'Skill added successfully'\r\n       }\r\n   }\r\n   case ADD_SKILL_FAIL:\r\n   {\r\n       return {\r\n           ...state,\r\n           error: action.payload\r\n       }\r\n   }\r\n   case CURRENT_SKILL_FIELD_CHANGE:\r\n   {\r\n       console.log('field change reducer');\r\n       console.log(action.payload);\r\n       \r\n       return {\r\n           ...state,\r\n           field_updated: true,\r\n           current_skill: action.payload\r\n       }\r\n   }\r\n   case CURRENT_SKILL_FIELD_CHANGE_END:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: false\r\n       }\r\n   }\r\n   case FETCH_SKILLS_SUCCESS:\r\n   {\r\n       console.log('fetch skills reducer');\r\n       console.log(action.payload);\r\n       \r\n       return {\r\n           ...state,\r\n           error: null,\r\n           current_skill: {skill:''},\r\n           editMode: false,\r\n           success_message: '',\r\n           search_enabled: false,\r\n           skillList: action.payload\r\n       }\r\n   }\r\n   case SKILL_SEARCH_BEGIN:\r\n   {\r\n       return {\r\n           ...state,\r\n           search_enabled: !state.search_enabled,\r\n           search_term: '',\r\n           filteredSkills: state.skillList\r\n       }\r\n   }\r\n   case SKILL_SEARCH_SUCCESS:\r\n   {   \r\n       return {\r\n           ...state,\r\n           search_term: action.payload.searchTerm,\r\n           filteredSkills: action.payload.filteredSkills\r\n       }\r\n   }\r\n   case FETCH_SKILLS_FAIL:\r\n   {\r\n        console.log('fail skill fetch: ' + action.payload);\r\n        return {\r\n           ...state,\r\n           current_skill: {skill:''},\r\n           error: action.payload\r\n       }\r\n   }\r\n   case OPEN_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: true\r\n       }\r\n   }\r\n   case CLOSE_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: false\r\n       }\r\n   }\r\n   default: {\r\n       return state;\r\n   }\r\n}\r\n}","import { ADD_MCQ_SUCCESS, ADD_MCQ_FAIL, SELECT_MCQ,\r\n    UPDATE_MCQ_SUCCESS, UPDATE_MCQ_FAIL, FETCH_MCQ_FAIL,\r\n    DELETE_MCQ_SUCCESS, DELETE_MCQ_FAIL,\r\n    FETCH_MCQ_SUCCESS, \r\n    OPEN_SNACKBAR, \r\n    CLOSE_SNACKBAR, \r\n    CURRENT_MCQ_FIELD_CHANGE,\r\n    CURRENT_MCQ_FIELD_CHANGE_END, \r\n    MCQ_SEARCH_BEGIN, MCQ_SEARCH_END,\r\n    MCQ_SEARCH_SUCCESS,\r\n    CHOICE_ADDED_TO_MCQ, \r\n    CURRENT_ANSWER_FIELD_CHANGE\r\n} from \"../actions/McqActions\";\r\nimport { FETCH_CATEGORIES_SUCCESS } from '../actions/CategoryActions'; \r\nimport { FETCH_SKILLS_SUCCESS } from \"../actions/SkillActions\";\r\n\r\nexport default (state = {}, action) => {\r\nswitch(action.type) {\r\n   case ADD_MCQ_SUCCESS:\r\n   {\r\n       return {\r\n            ...state,\r\n            error: null,\r\n            current_mcq: { \r\n                question:'',\r\n                description:'',\r\n                category: '',\r\n                skill: '',\r\n                minimumExperience: 0,\r\n                maximumExperience: 10,\r\n                choices: []\r\n                },\r\n            snack_open: true,\r\n            success_message: 'MCQ added successfully'\r\n       }\r\n   }\r\n   case DELETE_MCQ_FAIL:\r\n   case UPDATE_MCQ_FAIL:\r\n   case ADD_MCQ_FAIL:\r\n   {\r\n       return {\r\n           ...state,\r\n           error: action.payload\r\n       }\r\n   }\r\n   case SELECT_MCQ:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: !state.field_updated,\r\n           editMode: true,\r\n           current_MCQ: action.payload\r\n       }\r\n   }\r\n   case UPDATE_MCQ_SUCCESS:\r\n   {\r\n       return {\r\n           ...state,\r\n           editMode: false,\r\n           current_mcq: { \r\n                question:'',\r\n                description:'',\r\n                category: '',\r\n                skill: '',\r\n                minimumExperience: 0,\r\n                maximumExperience: 10,\r\n                choices: []\r\n           },\r\n           success_message: 'MCQ Updated Successfully'\r\n       }\r\n   }\r\n   case DELETE_MCQ_SUCCESS:\r\n   {\r\n       return {\r\n           ...state,\r\n           editMode: false,\r\n           snack_open: true,\r\n           current_mcq: { \r\n                question:'',\r\n                description:'',\r\n                category: '',\r\n                skill: '',\r\n                minimumExperience: 0,\r\n                maximumExperience: 10,\r\n                choices: []\r\n           },\r\n           success_message: 'MCQ Deleted Successfully'\r\n       }\r\n   }\r\n   case CURRENT_MCQ_FIELD_CHANGE:\r\n   {\r\n       console.log('field change reducer');\r\n       console.log(action.payload);\r\n       \r\n       return {\r\n           ...state,\r\n           field_updated: true,\r\n           current_mcq: action.payload\r\n       }\r\n   }\r\n   case CURRENT_MCQ_FIELD_CHANGE_END:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: false\r\n       }\r\n   }\r\n   case CURRENT_ANSWER_FIELD_CHANGE:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: !state.field_updated,\r\n           currentAnswer: action.payload\r\n       }\r\n   }\r\n   case FETCH_MCQ_SUCCESS:\r\n   {\r\n       console.log('fetch mcq reducer');\r\n       console.log(action.payload);\r\n       \r\n       return {\r\n            ...state,\r\n            error: null,\r\n            current_mcq: { \r\n                    question:'',\r\n                    description:'',\r\n                    category: '',\r\n                    skill: '',\r\n                    minimumExperience: 0,\r\n                    maximumExperience: 10,\r\n                    choices: []\r\n            },\r\n            snack_open: true,\r\n            success_message: action.payload.message,\r\n            mcqs: action.payload.data\r\n       }\r\n   }\r\n   case FETCH_SKILLS_SUCCESS:\r\n   {\r\n        console.log('fetch skills reducer');\r\n        console.log(action.payload);\r\n        \r\n        return {\r\n            ...state,\r\n            skills: action.payload\r\n        }\r\n   }\r\n   case FETCH_CATEGORIES_SUCCESS:\r\n   {\r\n       console.log('fetch categories reducer');\r\n       console.log(action.payload);\r\n       \r\n       return {\r\n           ...state,\r\n           error: null,\r\n           current_mcq: { \r\n                question:'',\r\n                description:'',\r\n                category: '',\r\n                skill: '',\r\n                choices: []\r\n           },\r\n           currentAnswer: {\r\n                content: '',\r\n                isCorrect: false\r\n           },\r\n           success_message: '',\r\n           search_enabled: false,\r\n           categories: action.payload\r\n       }\r\n   }\r\n   case CHOICE_ADDED_TO_MCQ: \r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: !state.field_updated,\r\n           current_mcq: action.payload,\r\n           currentAnswer: {\r\n               content: '',\r\n               isCorrect: false\r\n           }\r\n       }\r\n   }\r\n   case MCQ_SEARCH_BEGIN:\r\n   {\r\n       return {\r\n           ...state,\r\n           search_enabled: !state.search_enabled,\r\n           search_term: '',\r\n           //filteredCategories: state.categoryList\r\n       }\r\n   }\r\n   case MCQ_SEARCH_END:\r\n   {\r\n       return {\r\n           ...state,\r\n           search_enabled: !state.search_enabled,\r\n           search_term: '',\r\n           //filteredCategories: state.categoryList\r\n       }\r\n   }\r\n   case MCQ_SEARCH_SUCCESS:\r\n   {   \r\n       return {\r\n           ...state,\r\n           search_term: action.payload.searchTerm,\r\n           filteredCategories: action.payload.filteredCategories\r\n       }\r\n   }\r\n   case FETCH_MCQ_FAIL:\r\n   {\r\n       return {\r\n           ...state,\r\n           current_mcq: { \r\n                question:'',\r\n                description:'',\r\n                category: '',\r\n                skill: '',\r\n                answerId: 0,\r\n                choices: []\r\n            },\r\n           error: action.payload\r\n       }\r\n   }\r\n   case OPEN_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: true\r\n       }\r\n   }\r\n   case CLOSE_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: false\r\n       }\r\n   }\r\n   default: {\r\n       return state;\r\n   }\r\n}\r\n}","import { ADD_CANDIDATE_SUCCESS, ADD_CANDIDATE_FAIL, SELECT_CANDIDATE,\r\n    UPDATE_CANDIDATE_SUCCESS, UPDATE_CANDIDATE_FAIL, FETCH_CANDIDATE_FAIL,\r\n    FETCH_CANDIDATE_SUCCESS, \r\n    OPEN_SNACKBAR, \r\n    CLOSE_SNACKBAR, \r\n    CURRENT_CANDIDATE_FIELD_CHANGE,\r\n    CURRENT_CANDIDATE_FIELD_CHANGE_END, \r\n    CANDIDATE_SEARCH_BEGIN,\r\n    CANDIDATE_SEARCH_SUCCESS\r\n} from \"../actions/CandidateActions\";\r\nimport { FETCH_SKILLS_SUCCESS } from \"../actions/SkillActions\";\r\n\r\nexport default (state = {}, action) => {\r\nswitch(action.type) {\r\n   case ADD_CANDIDATE_SUCCESS:\r\n   {\r\n       return {\r\n           ...state,\r\n           error: null,\r\n           current_candidate: { \r\n               fullName:'',\r\n               email:'',\r\n               contactno: '',\r\n               experienceYears: 0,\r\n               experienceMonths: 10\r\n            },\r\n           success_message: 'CANDIDATE added successfully'\r\n       }\r\n   }\r\n   case UPDATE_CANDIDATE_FAIL:\r\n   case ADD_CANDIDATE_FAIL:\r\n   {\r\n       return {\r\n           ...state,\r\n           error: action.payload\r\n       }\r\n   }\r\n   case SELECT_CANDIDATE:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: !state.field_updated,\r\n           editMode: true,\r\n           current_CANDIDATE: action.payload\r\n       }\r\n   }\r\n   case UPDATE_CANDIDATE_SUCCESS:\r\n   {\r\n       return {\r\n           ...state,\r\n           editMode: false,\r\n           current_candidate: { \r\n                fullName:'',\r\n                email:'',\r\n                contactno: '',\r\n                skill: '',\r\n                experienceYears: 0,\r\n                experienceMonths: 10\r\n           },\r\n           success_message: 'CANDIDATE Updated Successfully'\r\n       }\r\n   }\r\n   case CURRENT_CANDIDATE_FIELD_CHANGE:\r\n   {\r\n       console.log('field change reducer');\r\n       console.log(action.payload);\r\n       \r\n       return {\r\n           ...state,\r\n           field_updated: true,\r\n           current_candidate: action.payload\r\n       }\r\n   }\r\n   case CURRENT_CANDIDATE_FIELD_CHANGE_END:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: false\r\n       }\r\n   }\r\n   case FETCH_CANDIDATE_SUCCESS:\r\n   {\r\n       console.log('fetch candidate reducer');\r\n       console.log(action.payload);\r\n       \r\n       return {\r\n           ...state,\r\n           error: null,\r\n           editMode: false,\r\n           current_candidate: { \r\n                fullName:'',\r\n                email:'',\r\n                contactno: '',\r\n                experienceYears: 0,\r\n                experienceMonths: 10\r\n           },\r\n           success_message: '',\r\n           search_enabled: false,\r\n           candidates: action.payload\r\n       }\r\n   }\r\n   case FETCH_SKILLS_SUCCESS:\r\n   {\r\n        console.log('fetch skills reducer');\r\n        console.log(action.payload);\r\n        \r\n        return {\r\n            ...state,\r\n            current_candidate: { \r\n                 fullName:'',\r\n                 email:'',\r\n                 contactno: '',\r\n                 experienceYears: 0,\r\n                 experienceMonths: 10\r\n            },\r\n            skills: action.payload\r\n        }\r\n   }\r\n   case CANDIDATE_SEARCH_BEGIN:\r\n   {\r\n       return {\r\n           ...state,\r\n           search_enabled: !state.search_enabled,\r\n           search_term: '',\r\n           filteredCandidates: state.contactnoList\r\n       }\r\n   }\r\n   case CANDIDATE_SEARCH_SUCCESS:\r\n   {   \r\n       return {\r\n           ...state,\r\n           search_term: action.payload.searchTerm,\r\n           filteredCandidates: action.payload.filteredCandidates\r\n       }\r\n   }\r\n   case FETCH_CANDIDATE_FAIL:\r\n   {\r\n       return {\r\n           ...state,\r\n           current_candidate: { \r\n                fullName:'',\r\n                email:'',\r\n                contactno: '',\r\n                experienceYears: 0,\r\n                experienceMonths: 10\r\n            },\r\n           error: action.payload\r\n       }\r\n   }\r\n   case OPEN_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: true\r\n       }\r\n   }\r\n   case CLOSE_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: false\r\n       }\r\n   }\r\n   default: {\r\n       return state;\r\n   }\r\n}\r\n}","import { ADD_TEST_SUCCESS, ADD_TEST_FAIL, SELECT_TEST,\r\n    UPDATE_TEST_SUCCESS, UPDATE_TEST_FAIL, FETCH_TESTS_FAIL,\r\n    FETCH_TESTS_SUCCESS, \r\n    OPEN_SNACKBAR, \r\n    CLOSE_SNACKBAR, \r\n    CURRENT_TEST_FIELD_CHANGE,\r\n    CURRENT_TEST_FIELD_CHANGE_END, \r\n    TEST_SEARCH_BEGIN,\r\n    TEST_SEARCH_SUCCESS,\r\n    CHOICE_ADDED_TO_TEST, \r\n    CURRENT_ANSWER_FIELD_CHANGE\r\n} from \"../actions/AdminTestActions\";\r\nimport { FETCH_CATEGORIES_SUCCESS } from '../actions/CategoryActions'; \r\nimport { FETCH_SKILLS_SUCCESS } from \"../actions/SkillActions\";\r\n\r\nexport default (state = {}, action) => {\r\nswitch(action.type) {\r\n   case ADD_TEST_SUCCESS:\r\n   {\r\n       console.log('add test success reducer');\r\n       return {\r\n           ...state,\r\n           error: null,\r\n           current_test: action.payload,\r\n           success_message: 'Test added successfully',\r\n           snack_open: true\r\n       }\r\n   }\r\n   case UPDATE_TEST_FAIL:\r\n   case ADD_TEST_FAIL:\r\n   {\r\n       return {\r\n           ...state,\r\n           error: action.payload\r\n       }\r\n   }\r\n   case SELECT_TEST:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: !state.field_updated,\r\n           editMode: true,\r\n           current_TEST: action.payload\r\n       }\r\n   }\r\n   case UPDATE_TEST_SUCCESS:\r\n   {\r\n       return {\r\n           ...state,\r\n           editMode: false,\r\n           current_mcq: { \r\n                question:'',\r\n                description:'',\r\n                category: '',\r\n                skill: '',\r\n                minimumExperience: 0,\r\n                maximumExperience: 10,\r\n                choices: []\r\n           },\r\n           success_message: 'TEST Updated Successfully'\r\n       }\r\n   }\r\n   case CURRENT_TEST_FIELD_CHANGE:\r\n   {\r\n       console.log('field change reducer');\r\n       console.log(action.payload);\r\n       \r\n       return {\r\n           ...state,\r\n           field_updated: true,\r\n           current_mcq: action.payload\r\n       }\r\n   }\r\n   case CURRENT_TEST_FIELD_CHANGE_END:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: false\r\n       }\r\n   }\r\n   case CURRENT_ANSWER_FIELD_CHANGE:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: !state.field_updated,\r\n           currentAnswer: action.payload\r\n       }\r\n   }\r\n   case FETCH_TESTS_SUCCESS:\r\n   {\r\n       console.log('fetch tests reducer');\r\n       console.log(action.payload);\r\n       let arr = [];\r\n       if(action.payload && action.payload.length > 0) {\r\n           action.payload.map((item, index) => {\r\n               arr.push(item);\r\n           })\r\n       }\r\n       return {\r\n           ...state,\r\n           error: null,\r\n           editMode: !state.editMode,\r\n           current_test: { \r\n                skill:'',\r\n                testName:'',\r\n                duration: 90,\r\n                experienceYears: 5,\r\n                status: 'draft',\r\n                search_enabled: !state.search_enabled,\r\n            },\r\n           success_message: '',\r\n           search_enabled: !state.search_enabled,\r\n           tests: arr\r\n       }\r\n   }\r\n   case FETCH_SKILLS_SUCCESS:\r\n   {\r\n        console.log('fetch skills reducer');\r\n        console.log(action.payload);\r\n        \r\n        return {\r\n            ...state,\r\n            skills: action.payload\r\n        }\r\n   }\r\n   case FETCH_CATEGORIES_SUCCESS:\r\n   {\r\n       console.log('fetch categories reducer');\r\n       console.log(action.payload);\r\n       \r\n       return {\r\n           ...state,\r\n           error: null,\r\n           current_test: { \r\n                question:'',\r\n                description:'',\r\n                category: '',\r\n                skill: '',\r\n                choices: []\r\n           },\r\n           currentAnswer: {\r\n                content: '',\r\n                isCorrect: false\r\n           },\r\n           success_message: '',\r\n           search_enabled: false,\r\n           categories: action.payload\r\n       }\r\n   }\r\n   case CHOICE_ADDED_TO_TEST: \r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: !state.field_updated,\r\n           current_mcq: action.payload,\r\n           currentAnswer: {\r\n               content: '',\r\n               isCorrect: false\r\n           }\r\n       }\r\n   }\r\n   case TEST_SEARCH_BEGIN:\r\n   {\r\n       return {\r\n           ...state,\r\n           search_enabled: !state.search_enabled,\r\n           search_term: '',\r\n           filteredCategories: state.categoryList\r\n       }\r\n   }\r\n   case TEST_SEARCH_SUCCESS:\r\n   {   \r\n       return {\r\n           ...state,\r\n           search_term: action.payload.searchTerm,\r\n           filteredCategories: action.payload.filteredCategories\r\n       }\r\n   }\r\n   case FETCH_TESTS_SUCCESS:\r\n   {\r\n       console.log('fetch tests reducer');\r\n       console.log(action.payload);\r\n       let arr = [];\r\n       if(action.payload && action.payload.length > 0) {\r\n           action.payload.map((item, index) => {\r\n               arr.push(item);\r\n           })\r\n       }\r\n       return {\r\n           ...state,\r\n           error: null,\r\n           editMode: !state.editMode,\r\n           current_test: { \r\n                skill:'',\r\n                testName:'',\r\n                duration: 90,\r\n                experienceYears: 5,\r\n                status: 'draft',\r\n                search_enabled: !state.search_enabled,\r\n            },\r\n           success_message: '',\r\n           search_enabled: !state.search_enabled,\r\n           tests: arr\r\n       }\r\n   }\r\n   case FETCH_TESTS_FAIL:\r\n   {\r\n        console.log('fetch test fail', action.payload);       \r\n        let payload = action.payload;\r\n        if(payload && payload.errorStatus === '401') {\r\n            console.log('return fetch test fail', action.payload);       \r\n            return {\r\n                ...state,\r\n                tests: [],\r\n                skills: [],\r\n                state_changed: !state.state_changed,\r\n                error: payload\r\n            }\r\n        }\r\n       return {\r\n           ...state,\r\n           current_mcq: { \r\n                question:'',\r\n                description:'',\r\n                category: '',\r\n                skill: '',\r\n                answerId: 0,\r\n                choices: []\r\n            },\r\n           error: null\r\n       }\r\n   }\r\n   case OPEN_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: true\r\n       }\r\n   }\r\n   case CLOSE_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: false\r\n       }\r\n   }\r\n   default: {\r\n       return state;\r\n   }\r\n}\r\n}","import { \r\n    FETCH_TEST_SUCCESS, \r\n    OPEN_SNACKBAR, \r\n    CLOSE_SNACKBAR,\r\n    PUBLISH_TEST_SUCCESS\r\n} from \"../actions/TestConsoleActions\";\r\nimport { ADD_QUESTION_TO_TEST } from \"../actions/TestConsoleActions\";\r\nimport { stat } from \"fs\";\r\n\r\nexport default (state = {}, action) => {\r\nswitch(action.type) {\r\n   case FETCH_TEST_SUCCESS:\r\n   {\r\n       console.log('fetch test reducer');\r\n       console.log(action.payload);\r\n       let test = action.payload;\r\n       return {\r\n           ...state,\r\n           current_test: action.payload,\r\n       }\r\n   }\r\n   case ADD_QUESTION_TO_TEST:\r\n   {\r\n       let mcqToAdd = action.payload;\r\n    //    if(!state.current_test.selectedMcqs){\r\n    //     state.current_test.selectedMcqs = [];\r\n    //    }\r\n    //    console.log('test console add mcq to test reducer');\r\n    //    let mcqList = state.current_test.selectedMcqs;\r\n    //    let filterIndex = state.current_test.selectedMcqs.findIndex(item => item.$loki === mcqToAdd.$loki);\r\n    //    if(filterIndex !== undefined && filterIndex > -1) {\r\n    //         mcqList.splice(filterIndex, 1);\r\n    //         mcqToAdd.selected = false;\r\n    //    }\r\n    //    else {\r\n    //        console.log('mcq added in reducer');\r\n    //         mcqToAdd.selected = true;\r\n    //         mcqList.push(mcqToAdd);\r\n    //    }\r\n    //    console.log(state.current_test.selectedMcqs);\r\n    //    console.log(mcqList);\r\n       return {\r\n            ...state,\r\n            mcqAdded: !state.mcqAdded,\r\n            current_test: action.payload\r\n            // current_test: {\r\n            //     ...state.current_test,\r\n            //     selectedMcqs: mcqList\r\n            // }\r\n        }\r\n   }\r\n//    case PUBLISH_TEST_SUCCESS: {\r\n//        return {\r\n//            ...state,\r\n//            m\r\n//        }\r\n//    }\r\n   case OPEN_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: true\r\n       }\r\n   }\r\n   case CLOSE_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: false\r\n       }\r\n   }\r\n   default: {\r\n       return state;\r\n   }\r\n}\r\n}","import { \r\n    SEND_TEST_INVITE_SUCCESS,\r\n    INVITE_INFO_FIELD_CHANGE\r\n} from \"../actions/InviteConsoleActions\";\r\nimport { FETCH_TEST_SUCCESS, OPEN_SNACKBAR, CLOSE_SNACKBAR } from '../actions/TestConsoleActions';\r\n\r\nexport default (state = {}, action) => {\r\nswitch(action.type) {\r\n   case SEND_TEST_INVITE_SUCCESS:\r\n   {\r\n       return {\r\n            ...state,\r\n            inivteAdded: 'yes',\r\n            current_test: action.payload\r\n        }\r\n   }\r\n   case FETCH_TEST_SUCCESS:\r\n   {\r\n        console.log('fetch test reducer');\r\n        console.log(action.payload);\r\n        let test = action.payload;\r\n        return {\r\n           ...state,\r\n           current_test: {\r\n               testId: (action.payload) ? action.payload.$loki : 0,\r\n               ...action.payload\r\n           },\r\n           inivteAdded: 'no',\r\n           inviteInfo: {}\r\n       }\r\n   }\r\n   case INVITE_INFO_FIELD_CHANGE:\r\n   {\r\n       console.log('invite field change reducer');\r\n       console.log(action.payload);\r\n       \r\n       return {\r\n           ...state,\r\n           field_updated: !state.field_updated,\r\n           inviteInfo: action.payload\r\n       }\r\n   }\r\n  case OPEN_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: true\r\n       }\r\n   }\r\n   case CLOSE_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: false\r\n       }\r\n   }\r\n   default: {\r\n       return state;\r\n   }\r\n}\r\n}","import { \r\n    ADD_USER_SUCCESS, \r\n    ADD_USER_FAIL, \r\n    SELECT_USER,\r\n    UPDATE_USER_SUCCESS, UPDATE_USER_FAIL, FETCH_USER_FAIL,\r\n    FETCH_USER_SUCCESS, \r\n    OPEN_SNACKBAR, \r\n    CLOSE_SNACKBAR, \r\n    CURRENT_USER_FIELD_CHANGE,\r\n    CURRENT_USER_FIELD_CHANGE_END, \r\n    USER_SEARCH_BEGIN,\r\n    USER_SEARCH_SUCCESS,\r\n    SET_USER_INFO_LOCAL,\r\n    LOGOUT_CURRENT_USER\r\n} from \"../actions/UserActions\";\r\nimport { FETCH_SKILLS_SUCCESS } from \"../actions/SkillActions\";\r\nimport { UNAUTHORIZED_ACCESS } from \"../actions/TestConsoleActions\";\r\nimport { stat } from \"fs\";\r\n\r\nexport default (state = {}, action) => {\r\nswitch(action.type) {\r\n   case ADD_USER_SUCCESS:\r\n   {\r\n       return {\r\n            ...state,\r\n            error: null,\r\n            current_USER: { \r\n               emailId:'',\r\n               role: 'guest'\r\n            },\r\n            snack_open: true,\r\n            success_message: 'User added successfully'\r\n       }\r\n   }\r\n   case UPDATE_USER_FAIL:\r\n   case ADD_USER_FAIL:\r\n   {\r\n       return {\r\n           ...state,\r\n           error: action.payload\r\n       }\r\n   }\r\n   case SELECT_USER:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: !state.field_updated,\r\n           editMode: true,\r\n           current_USER: action.payload\r\n       }\r\n   }\r\n   case UPDATE_USER_SUCCESS:\r\n   {\r\n       console.log('user updated successfully');\r\n       return {\r\n           ...state,\r\n           editMode: false,\r\n           current_user: { \r\n                emailId:'',\r\n                role: 'guest'\r\n           },\r\n           snack_open: true,\r\n           success_message: 'User Updated Successfully'\r\n       }\r\n   }\r\n   case CURRENT_USER_FIELD_CHANGE:\r\n   {\r\n       console.log('field change reducer');\r\n       console.log(action.payload);\r\n       \r\n       return {\r\n           ...state,\r\n           field_updated: true,\r\n           current_user: action.payload\r\n       }\r\n   }\r\n   case CURRENT_USER_FIELD_CHANGE_END:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: false\r\n       }\r\n   }\r\n   case FETCH_USER_SUCCESS:\r\n   {\r\n       console.log('fetch candidate reducer');\r\n       console.log(action.payload);\r\n       \r\n       return {\r\n           ...state,\r\n           error: null,\r\n           editMode: false,\r\n           current_user: { \r\n                emailId: '',\r\n                role: 'guest'\r\n           },\r\n           success_message: '',\r\n           search_enabled: false,\r\n           users: action.payload\r\n       }\r\n   }\r\n   case USER_SEARCH_BEGIN:\r\n   {\r\n       return {\r\n           ...state,\r\n           search_enabled: !state.search_enabled,\r\n           search_term: '',\r\n           filteredCandidates: state.contactnoList\r\n       }\r\n   }\r\n   case USER_SEARCH_SUCCESS:\r\n   {   \r\n       return {\r\n           ...state,\r\n           search_term: action.payload.searchTerm,\r\n           filteredCandidates: action.payload.filteredCandidates\r\n       }\r\n   }\r\n   case FETCH_USER_FAIL:\r\n   {\r\n       return {\r\n           ...state,\r\n           current_USER: { \r\n                fullName:'',\r\n                email:'',\r\n                contactno: '',\r\n                experienceYears: 0,\r\n                experienceMonths: 10\r\n            },\r\n           error: action.payload\r\n       }\r\n   }\r\n   case SET_USER_INFO_LOCAL:\r\n   {\r\n       return {\r\n           ...state,\r\n           currentUserLocal: action.payload\r\n       }\r\n   }\r\n   case LOGOUT_CURRENT_USER:\r\n   {\r\n       return {\r\n           ...state,\r\n           currentUserLocal: null\r\n       }\r\n   }\r\n   case OPEN_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: true\r\n       }\r\n   }\r\n   case CLOSE_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: false\r\n       }\r\n   }\r\n   default: {\r\n       return state;\r\n   }\r\n}\r\n}","import { LOAD_EXAM_SIMULATOR_SUCCESS } from '../actions/QuestionSimulatorConsoleActions';\r\n\r\nexport default (state = {}, action) => {\r\n    switch(action.type) {\r\n       case LOAD_EXAM_SIMULATOR_SUCCESS:\r\n       {\r\n           console.log('LOAD_EXAM_SIMULATOR_SUCCESS reducer');\r\n           return {\r\n               ...state,\r\n               candidateTestObject: action.payload\r\n           }\r\n       }\r\n       default: {\r\n           return state;\r\n       }    \r\n    }\r\n}","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport { GoogleLogin } from 'react-google-login';\nimport axios from 'axios';\n\nimport Shell from './components/Shell';\nimport SimulatorShell from './Containers/Simulator/SimulatorShell';\n\nimport './App.css';\n\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store\";\nimport config from './config';\nimport AuthHelper from './AuthHelper';\nimport { Paper, Grid, Button, IconButton, Typography } from '@material-ui/core';\nimport { DeveloperMode } from '@material-ui/icons';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAuthenticated: true,\n      user: null,\n      token: ''\n    };\n  }\n\n\n  googleResponse = (response) => {\n    console.log('response', response);\n    const tokenBlob = new Blob([JSON.stringify({access_token: response.accessToken}, null, 2)], {type : 'application/json'});\n    const options = {\n        method: 'POST',\n        body: tokenBlob,\n        mode: 'cors',\n        cache: 'default'\n    };\n    let url = config.adminApiUrl + 'auth/google';\n    console.log('url', url);\n    console.log('access_token', response.access_token);\n    axios.get(url, {\n      headers: {\n        access_token: response.accessToken\n      }\n    }).then((res) => {\n      console.log('res',res);\n      const token = res.headers['x-auth-token'];\n      localStorage.setItem(\"auth-token\", token);\n      this.setState({\n        isAuthenticated: true,\n        user: res.data\n      });\n    });\n    // axios.post(url, tokenBlob)\n    //       .then(r => {\n    //         console.log('internal server response', r);\n    //         const token = r.headers.get('x-auth-token');\n    //         r.json().then(user => {\n    //             if (token) {\n    //                 this.setState({\n    //                   isAuthenticated: true,\n    //                   user,\n    //                   token\n    //                 });\n    //             }\n    //         });\n    //       });\n  };\n/*\nclient_id=\"350931387343-l9s3gs4fnmbj4rk4r4nfvh5siega0s5g.apps.googleusercontent.com\",\nclient_secret=\"nMaeSsEr8e9-j26dstZ6VAJc\"\n*/\n  render() {\n    const { isAuthenticated, user } = this.state;\n    console.log('user', user);\n    return (\n      //(!isAuthenticated || !user) &&\n      // <div style={styles.grid}>\n      // <Grid container spacing={16} >\n      //   <Grid item sm={6} xs={6} md={6}>\n      //       <DeveloperMode className=\"large-svg\"/>\n      //   </Grid>\n      //   <Grid style={styles.rightGrid} item sm={6} xs={6} md={6}>\n      //       <div style={{textAlign: 'center'}}>\n      //           <Typography variant=\"h6\" noWrap style={{color: '#831057'}} >Tech Assessment</Typography>\n      //       </div>\n      //     <div style={{marginBottom: '0%', textAlign: 'center'}}>\n      //         <GoogleLogin\n      //                           clientId=\"350931387343-l9s3gs4fnmbj4rk4r4nfvh5siega0s5g.apps.googleusercontent.com\"\n      //                           buttonText=\"Login with Google\"\n      //                           onSuccess={this.googleResponse}\n      //                           onFailure={this.googleResponse}\n      //                           cookiePolicy={'single_host_origin'}\n      //                       />\n      //     </div>\n      //   </Grid>\n      // </Grid>\n      // </div>\n       /*isAuthenticated &&\n        user && (user.role === \"admin\" || user.role === \"recruiter\") &&\n      <Shell />*/ \n      <Provider store={configureStore()}>\n        <Shell />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n\nconst styles = {\n  grid: {\n    marginTop: '10%',\n    marginLeft: '20%',\n    marginRight: '20%',\n    marginBottom: '20%',\n    border: '3px solid #831057',\n    borderRadius: '10px',\n    // width: '40%',\n    // height: '60%',\n    padding: '10%',\n    paddingTop: '14%'\n  },\n  rightGrid: {\n    // background: '#394'\n  }\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\nexport default function configureStore() {\r\n    return createStore(\r\n        rootReducer,\r\n        applyMiddleware(thunk)\r\n    );\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}