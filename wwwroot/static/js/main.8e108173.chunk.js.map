{"version":3,"sources":["config.js","AuthHelper.js","actions/RedirectFromAction.js","repository.js","actions/UserActions.js","components/lib/TickComponent.js","components/layouts/Header.js","components/layouts/SideDrawer.js","components/Simulator/Faq.js","components/Simulator/WelcomeCandidate.js","Containers/Simulator/SimulatorShell.js","components/lib/LocalLoginComponent.js","components/lib/LoadingComponent.js","components/Categories/AddCategory.js","components/Candidates/SelectCandidateExperience.js","components/Candidates/AddCandidate.js","components/Dashboard.js","actions/OrgActions.js","components/lib/SnackbarComponent.js","Containers/User/EditUser.js","Containers/User/UsersList.js","Containers/User/AddUser.js","components/lib/LoginComponent.js","Containers/User/User401.js","Containers/User/UserContainer.js","Containers/User/UserForbidden.js","Containers/User/ResourceNotFound.js","components/Categories/CategoryList.js","actions/CategoryActions.js","Containers/CategoryContainer.js","Containers/Org/OrgList.js","Containers/Org/AddOrg.js","Containers/Org/OrgContainer.js","components/Skills/AddSkill.js","components/Skills/SkillList.js","Containers/SkillContainer.js","actions/SkillActions.js","actions/TestConsoleActions.js","components/Mcq/AnswerOptions.js","Containers/TestConsole/McqItem.js","Containers/TestConsole/SelectedMcqs.js","Containers/TestConsole/McqSelector.js","Containers/TestConsole/TestConsoleQuestions.js","Containers/InviteConsole/InviteList.js","Containers/TestConsole/TestConsoleCandidates.js","Containers/TestConsole/TestConsoleSettings.js","Containers/TestConsole/TestConsoleTabs.js","Containers/TestConsole/TestConsoleContainer.js","components/Mcq/AddAnswerOption.js","components/Mcq/SelectExperience.js","components/Mcq/AddMcq.js","actions/McqActions.js","Containers/McqContainer.js","components/Mcq/BulkUpload.js","Containers/CandidateContainer.js","components/AdminTest/AddTest.js","actions/CandidateActions.js","common/HelperFunctions.js","components/AdminTest/TestList.js","Containers/AdminTestContainer.js","actions/AdminTestActions.js","components/Mcq/McqList.js","components/Candidates/CandidateList.js","Containers/InviteConsole/InviteConsoleContainer.js","actions/InviteConsoleActions.js","Containers/InviteConsole/SendTestInvite.js","Containers/InviteConsole/InviteContainer.js","components/Simulator/Question.js","Containers/Simulator/QuestionSimulatorConsoleContainer.js","Containers/Simulator/SimulatorConsoleContainer.js","actions/QuestionSimulatorConsoleActions.js","HiTech/RmaCustomerDetails.js","HiTech/AddRmaProduct.js","HiTech/RmaProductList.js","HiTech/RmaVendorDetails.js","HiTech/RmaTermsAndConditions.js","HiTech/HiTechAddress.js","HiTech/AddRmaRequest.js","HiTech/RmaRequestList.js","HiTech/AddRmaRequestContainer.js","HiTech/RmaRequestActions.js","HiTech/ViewRmaRequest.js","HiTech/RmaRequestListContainer.js","components/lib/PrivateRoute.js","components/Routes.js","components/Shell.js","reducers/categoryReducer.js","reducers/orgReducer.js","HiTech/rmaReducer.js","reducers/rootReducer.js","reducers/skillReducer.js","reducers/mcqReducer.js","reducers/candidateReducer.js","reducers/adminTestReducer.js","reducers/testConsoleReducer.js","reducers/inviteConsoleReducer.js","reducers/userReducer.js","reducers/questionSimulatorConsoleReducer.js","App.js","store.js","serviceWorker.js","index.js"],"names":["domain","configValues","validHeaders","prop","name","config","initialize","Promise","resolve","reject","site_url","locationHref","window","location","href","url","indexOf","axios","get","then","res","console","log","data","catch","err","getAdminApiUrl","admin_api","getCandidateApiUrl","candidate_api","getValue","key","OrderedAlphabets","instance","history","AuthHelper","Login","token","headers","JSON","stringify","localStorage","setItem","GetUserInfo","userInfo","getItem","user","parse","getToken","isLoggedIn","UserRoles","LogOut","removeItem","SetHistory","propsHistory","GetHistory","RedirectFromAction","page","hist","push","interceptors","response","use","error","status","repository","getData","options","x-access-token","saveData","model","post","updateData","put","deleteData","delete","SetUserInfo","dispatch","type","payload","LogoutCurrentUser","TickComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","interval","componentDidMount","setInterval","_this$state$currentTi","state","currentTick","minutes","seconds","setState","parseInt","componentWillUnmount","clearInterval","render","react_default","a","createElement","index_es","variant","style","color","React","Component","Header","classes","openState","isTokenExpired","_React$useState","useState","_React$useState2","slicedToArray","_React$useState3","_React$useState4","anchorEl","setAnchorEl","open","Boolean","AppBar_default","position","className","classNames","appBar","defineProperty","appBarShift","Toolbar_default","disableGutters","isDrawerRequired","IconButton_default","edge","aria-label","onClick","onDrawerOpen","menuButton","hide","Menu_default","Typography_default","styles","paddingLeft","noWrap","welcomeMessage","isLogoutButtonRequired","event","currentTarget","aria-haspopup","AccountCircle_default","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","role","onLogout","isTickerRequired","lib_TickComponent","right","marginLeft","MenuItems","routeName","routeCaption","icon","Dashboard","app","Book","Assessment","SupervisorAccount","ViewQuilt","Polymer","Work","PermIdentity","getIcon","menuItem","SideDrawer","_classNames","_classNames2","theme","Drawer_default","drawer","drawerOpen","drawerClose","paper","toolbar","onDrawerClose","direction","ChevronRight_default","ChevronLeft_default","Divider_default","List_default","map","index","react_router_dom","to","ListItem_default","button","ListItemIcon_default","title","ListItemText_default","textDecoration","primary","Faq","instruction","Send_default","WelcomeCandidate","container","gutterBottom","align","paddingTop","textCenter","fontSize","SimulatorShell","localHandler","invitationId","result","errorMessage","pathname","inviteid","match","params","spacing","item","xs","sm","md","Simulator_WelcomeCandidate","Simulator_Faq","Button_default","size","connect","objectSpread","userReducer","LocalLoginComponent","emailId","password","onEmailIdChange","value","onPasswordChange","noValidate","autoComplete","subheader","label","onChange","e","target","margin","LoadingComponent","CircularProgress_default","AddCategoryComponent","display","editMode","Card_default","padding","lib_LoadingComponent","avatar","Avatar_default","Add_default","Edit_default","action","onAdd","CardContent_default","FormControl_default","formControl","TextField_default","category_meta","onFieldChange","multiline","rows","description","CardActions_default","actionButton","onSubmit","width","backgroundColor","years","months","SelectCandidateExperience","handleChange","handleClickOpen","handleClose","handleSubmit","onSubmitExperience","isTestAdmin","Dialog_default","disableBackdropClick","disableEscapeKeyDown","DialogTitle_default","DialogContent_default","InputLabel_default","htmlFor","Select_default","input","Input_default","MenuItem_default","DialogActions_default","AddCandidate","dense","fullName","email","contactno","Candidates_SelectCandidateExperience","card","cardHeader","cardAction","marginTop","textAlign","float","borderBottom","FetchOrgs","statusText","SnackbarComponent","openSnack","Snackbar_default","autoHideDuration","ContentProps","aria-describedby","message","snackMessage","Close_default","SnackbarContent_default","root","EditUser","user_meta","length","marginBottom","UsersList","handleEditClick","editIndex","userEditIndex","onUpdateUser","_this$props","users","orgs","Table_default","TableHead_default","TableRow_default","CustomTableCell","TableBody_default","react","User_EditUser","val","field","orgId","org_meta","icons_index_es","toUpperCase","onDeleteUser","withStyles","head","palette","common","black","white","body","TableCell","AddUser","fullWidth","labelWidth","LoginComponent","googleResponse","access_token","accessToken","google_login","clientId","buttonText","onSuccess","onFailure","cookiePolicy","top","left","User401","lib_LocalLoginComponent","UserContainer","reload","FetchUsers","onAddUser","DeleteUser","UpdateUser","current_user","orgList","split","User_User401","Grid_default","User_AddUser","CurrentUserFieldChange","User_UsersList","lib_SnackbarComponent","snack_open","CloseSnackbar","orgReducer","userModel","errorStatus","OpenSnackbar","UserForbidden","ResourceNotFound","CategoryList","ViewHeadline_default","onSearchEnable","searchEnabled","Search_default","concat","categories","Collapse_default","in","placeholder","searchTerm","onSearchCategory","category","divider","onCategorySelect","secondary","ListItemSecondaryAction_default","onDeleteCategory","Remove_default","UpdateCategory","categoryModel","FetchCategories","CategoryContainer","componentWillUpdate","success_message","componentWillReceiveProps","newprops","oldprops","search_enabled","filteredCategories","categoryList","Categories_AddCategory","AddCategory","current_category","CurrentCategoryFieldChange","Categories_CategoryList","SelectCategory","BeginSearch","DeleteCategory","search_term","SearchCategory","categoryReducer","filter","toLowerCase","OrgList","org","onOrgSelect","city","AddOrgComponent","OrgContainer","onAddOrg","UpdateOrg","AddOrg","current_org","Org_AddOrg","CurrentOrgFieldChange","Org_OrgList","SelectOrg","orgModel","AddSkillComponent","skill","SkillList","skills","onSearchSkill","skillItem","skill_meta","Chip_default","chip","SkillContainer","FetchSkills","filteredSkills","skillList","Skills_AddSkill","AddSkill","current_skill","CurrentSkillFieldChange","Skills_SkillList","SearchSkill","skillReducer","skillModel","FetchTest","testId","AnswerOptions","choices","onChoiceSelect","content","isCorrect","Transition","assign","McqItem","handleDelete","onDeleteMcq","mcq","markForDeletion","mcqItem","isSelectable","isEditable","isDeletable","isChecked","mcq_meta","question","onAddMcqToTest","selected","onRemoveMcqFromTest","checked","onEditClick","TransitionComponent","fullScreen","bottom","Mcq_AnswerOptions","SelectedMcqs","sortMcqs","mcqs","sort","b","questionOrderIndex","selectedMcqs","orderedSelectedMcqs","TestConsole_McqItem","onSelect","openMcq","McqSelector","mcqList","onSelectMcqItem","onSelectMcq","findIndex","TestConsoleQuestions","currentTest","test_meta","TestConsole_McqSelector","TestConsole_SelectedMcqs","InviteList","invitations","InviteList_CustomTableCell","invitation","component","scope","testName","candidateName","invitationStatus","invitedOn","completedOn","evaluateResults","responseId","TestConsoleCandidates","candidates","InviteConsole_InviteList","&:nth-of-type(odd)","background","default","TableRow","TestConsoleSettings","TestConsoleTabs","tabs","TestConsoleTabs_LinkTab","TestConsoleTabs_TabContainer","TestConsole_TestConsoleQuestions","TestConsole_TestConsoleCandidates","TestConsole_TestConsoleSettings","TabContainer","children","LinkTab","preventDefault","TestConsoleContainer","LoadTestMcqs","LoadTestCandidates","onAddTest","AddTest","current_test","AddMcqToTest","RemoveMcqFromTest","onPublish","PublishTest","headerButton","Link_default","goBack","TestConsole_TestConsoleTabs","getButton","testConsoleReducer","testModel","filterIndex","undefined","mcqId","splice","AddAnswerOption","_props$children","currentAnswer","onAnswerFieldChange","onAnswerAdd","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","FormControlLabel_default","control","Switch_default","ExpansionPanelActions_default","experienceLevel","SelectExperience","min","max","AddMcq","OutlinedInput_default","Mcq_SelectExperience","score","Mcq_AddAnswerOption","SearchMcq","FetchMcqs","isDeleted","McqContainer","onAddMcq","UpdateMcq","Mcq_AddMcq","AddAnswerChoice","current_mcq","CurrentMcqFieldChange","CurrentAnswerFieldChange","mcqReducer","mcqModel","answerModel","answerKeyIndex","SelectMcq","minimumExperience","maximumExperience","BulkUpload","handleFileLoaded","fileName","matrixArray","finalJson","columnIndex","validateHeaders","validCount","itemArray","rowIndex","colValue","colIndex","filteredHeaders","startsWith","minBulkCount","maxBulkCount","onUpload","isValid","idx","vh","matrix","matrixLength","handleError","_this$state","react_csv_reader_default","cssClass","onFileLoaded","onError","inputId","inputStyle","CandidateContainer","setTimeout","onAddCandidate","Candidates_AddCandidate","current_candidate","CurrentCandidateFieldChange","candidateReducer","candidateModel","UpdateCandidate","experienceYears","experienceMonths","duration","TestStatus","SendInviteRoles","GetCurrentUserRole","TestList","tests","TestList_CustomTableCell","test","createdOn","testStatus","CanSendInvite","AdminTestContainer","FetchTests","AdminTest_AddTest","CurrentTestFieldChange","AdminTest_TestList","adminTestReducer","UpdateTest","McqList","DeleteMcq","bulkDeleteMcq","BulkDeleteMcq","filteredMcqs","mcqToDisplay","EndSearch","Fab_default","mcqIdsToDelete","CandidateList","FetchCandidates","InviteConsoleContainer","inviteAdded","FetchInvitations","EvaluateResults","inviteConsoleReducer","SendTestInvite","inviteInfo","helperText","emailTo","emailSubject","margintop","editorControl","height","InviteContainer","onSendInvite","SendInvite","_this$props2","InviteConsole_SendTestInvite","InviteInfoFieldChange","invitation_meta","Question","selectedAnswers","choiceItem","choiceIndex","candidateResponse","responseKeys","onResponseChange","QuestionSimulatorConsoleContainer","currentQuestion","qEntity","questionNumberText","currentQuestionIndex","totalQuestions","response_meta","submitAnswers","Simulator_Question","choiceKey","goToPrevious","goToNext","SimulatorConsoleContainer","LoadExamSimulator","handle","candidateTestObject","Simulator_QuestionSimulatorConsoleContainer","ResponseChange","GoToPrevious","GoToNext","SubmitAnswers","questionSimulatorConsoleReducer","GetInvitation","invitationModel","responseKey","removeKeyIndex","slice","find","RmaCustomerDetails","customerName","address","width50","telephone","fax","contactPerson","paddingRight","AddRmaProduct","maxWidth","modelNo","quantity","invoiceNo","deliveryChallanNo","serialNo","productUseAddress","failureDescription","RmaProductList","HiTech_AddRmaProduct","product","onAddRmaProduct","current_product","onProductFieldChange","productList","RmaProductList_CustomTableCell","RmaVendorDetails","halfWidth","purchaseDate","vendorName","RmaTermsAndConditions","HiTechAddress","AddRmaRequestComponent","customerDetails","vendorDetails","Book_default","HiTech_RmaCustomerDetails","HiTech_RmaProductList","productItem","HiTech_RmaVendorDetails","onVendorDetailsFieldChange","HiTech_RmaTermsAndConditions","HiTech_HiTechAddress","RmaRequestList","rmaRequests","requestList","reverse","RmaRequestList_CustomTableCell","rmaRequest","onViewRma","AddRmaRequestContainer","InitializeRmaFields","current_rma_request","HiTech_AddRmaRequest","AddRmaRequest","CurrentRmaRequestFieldChange","VendorDetailsFieldChange","AddProductToRma","ProductFieldChange","saving","rmaReducer","rmaRequestModel","hitechApiUrl","field_version","ViewRmaRequest","renderCustomerDetails","group","renderVendorDetails","onBackToAllRequests","RmaRequestListContainer","FetchRmaRequests","selectedRmaRequestModel","HiTech_RmaRequestList","SelectRmaRequest","HiTech_ViewRmaRequest","GoBackToAllRequests","isAuthorized","PrivateRoute","_ref","rest","authed","objectWithoutProperties","react_router","Routes","lib_PrivateRoute","exact","path","DashboardComponent","BulkMcq","CategoriesContainer","SkillsContainer","UsersComponent","Shell","handleDrawerOpen","handleDrawerClose","Logout","_this2","site_title","CssBaseline_default","layouts_Header","components_Routes","layouts_SideDrawer","zIndex","transition","transitions","create","easing","sharp","leavingScreen","enteringScreen","marginRight","flexShrink","whiteSpace","overflowX","unit","breakpoints","up","alignItems","justifyContent","mixins","flexGrow","withTheme","initial_current_Category","initial_current_org","initial_state","appReducer","combineReducers","arguments","field_updated","current_MCQ","current_CANDIDATE","filteredCandidates","contactnoList","current_TEST","arr","state_changed","answerId","mcqAdded","inivteAdded","$loki","current_USER","currentUserLocal","candidateInfo","testObject","newState","viewRmaRequestModel","rootReducer","App","Blob","isAuthenticated","es","store","createStore","applyMiddleware","thunk","components_Shell","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8e108173.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nvar domain = 'http://localhost:3001';\r\n//domain = '';\r\nvar domainUrl = 'http://localhost:3000';\r\nvar configValues = {};\r\nconst validHeaders = [\r\n    { prop: \"category\", name: \"Category\" },\r\n    { prop: \"skill\", name: \"Skill\" },\r\n    { prop: \"question\", name: \"Title\" },\r\n    { prop: \"description\", name: \"Description\" },\r\n    { prop: \"score\", name: \"Score\" },\r\n    { prop: \"minimumExperience\", name: \"Min\" },\r\n    { prop: \"maximumExperience\", name: \"Max\" },\r\n    { prop: \"correctAnswer\", name: \"Answer\" },\r\n    { prop: \"choiceA\", name: \"A\" },\r\n    { prop: \"choiceB\", name: \"B\" },\r\n    { prop: \"choiceC\", name: \"C\" },\r\n    { prop: \"choiceD\", name: \"D\" },\r\n    { prop: \"choiceE\", name: \"E\" }\r\n];\r\n\r\nconst techAssessment = 'Tech Assessment';\r\nconst hitech = 'Highness Admin';\r\nconst hitechConfig = {\r\n    notifyEmailId: 'encasherr@gmail.com'\r\n}\r\n\r\nexport default class config {\r\n    static instance = config.instance || new config();\r\n\r\n    initialize = () => {\r\n        return new Promise((resolve, reject) => {\r\n            if(configValues && configValues.site_url) return;\r\n    \r\n            var locationHref = window.location.href;\r\n            var apiUrl = locationHref.indexOf('localhost:3000') > -1 ? domain : '';\r\n            let url = apiUrl + '/api/loadConfig';\r\n            axios.get(url)\r\n                .then((res) => {\r\n                    console.log('config values', res.data);\r\n                    configValues = res.data;\r\n                    if(configValues) {\r\n                        if(locationHref.indexOf('localhost:3000') > -1) {\r\n                            configValues.site_url = domain;\r\n                        }\r\n                        resolve(configValues);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    reject(err);  \r\n                });\r\n        })\r\n    }\r\n\r\n    getAdminApiUrl = () => {\r\n        return configValues.site_url + configValues.admin_api;\r\n    }\r\n\r\n    getCandidateApiUrl = () => {\r\n        return configValues.site_url + configValues.candidate_api;\r\n    }\r\n\r\n    getValue = (key) => {\r\n        return configValues[key];\r\n    }\r\n    \r\n    OrderedAlphabets = ['A','B','C','D','E','F','G','H','I','J'];\r\n\r\n    validHeaders = validHeaders;\r\n}\r\n","var history = {};\r\nconst AuthHelper = {\r\n    Login: (res) => {\r\n        const token = res.headers['x-auth-token'];\r\n        const data = JSON.stringify(res.data);\r\n        console.log('res.data', data);\r\n        localStorage.setItem(\"auth-token\", token);\r\n        localStorage.setItem(\"user-info\", data);\r\n    },\r\n    GetUserInfo: () => {\r\n        let userInfo = localStorage.getItem(\"user-info\");\r\n        if(userInfo) {\r\n            let user = JSON.parse(userInfo);\r\n            console.log('userinfo', user.name);\r\n            return user;\r\n        } else {\r\n            console.log('userinfo not available');\r\n        }\r\n        return null;\r\n    },\r\n    getToken: () => {\r\n        return localStorage.getItem('auth-token');\r\n    },\r\n    isLoggedIn: () => {\r\n        let token = localStorage.getItem('auth-token');\r\n        // console.log('token', token);\r\n        if(token) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    },\r\n    UserRoles: () => {\r\n        return [ \"guest\", \"recruiter\", \"candidate\", \"admin\" ];\r\n    },\r\n    LogOut: () => {\r\n        console.log('remove token');\r\n        localStorage.removeItem('auth-token');\r\n        localStorage.removeItem('user-info');\r\n        // let token = localStorage.getItem('auth-token');\r\n        // console.log('token', token);\r\n    },\r\n    SetHistory: (propsHistory) => {\r\n        console.log('set history', propsHistory);\r\n        history = propsHistory;\r\n    },\r\n    GetHistory: () => {\r\n        console.log('get history');\r\n        return history;\r\n    }\r\n}\r\nexport default AuthHelper;\r\n","import AuthHelper from \"../AuthHelper\";\r\n\r\n// import createHistory from 'history/createBrowserHistory';\r\n\r\n\r\nconst RedirectFromAction = (page) => {\r\n    let hist = AuthHelper.GetHistory();\r\n    console.log('redirect called', typeof(hist));\r\n    if(typeof(hist.push) === 'function'){\r\n        hist.push('/' + page);\r\n    }\r\n}\r\n// let history = createHistory();\r\n// const RedirectFromAction = (page) => {\r\n//     console.log('redirect to 401 called', history);\r\n//     // history.pop();\r\n//     history.push('/unauthorizedUser');\r\n// }\r\nexport default RedirectFromAction;","import axios from 'axios';\r\nimport AuthHelper from './AuthHelper';\r\nimport RedirectFromAction from './actions/RedirectFromAction';\r\nlet History = null;\r\naxios.interceptors.response.use(response => {\r\n        return response;\r\n    }, error => {\r\n        if(!error.response) throw error;\r\n    if (error.response.status === 401) {\r\n        console.log('intercept 401', error.response);\r\n        // RedirectFromAction('unauthorizedUser');\r\n    }\r\n    else if (error.response.status === 403) {\r\n        console.log('intercept 403', error.response);\r\n        RedirectFromAction('userForbidden');\r\n    }\r\n    else if (error.response.status === 404) {\r\n        console.log('intercept 404', error.response);\r\n        RedirectFromAction('notFound');\r\n    }\r\n    throw error.response;\r\n });\r\n\r\nconst getData = (url) => {\r\n    // History = history;\r\n    let accessToken = AuthHelper.getToken(); //AuthHelper.getToken();\r\n    let options = {\r\n        headers: {\r\n          \"x-access-token\": accessToken\r\n        }\r\n    };\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(url, options)\r\n        .then((res) => {\r\n            console.log('res', res);\r\n            if(res.status === 401) {\r\n                console.log('in resolve not authorized error received');\r\n                return reject(res);\r\n            }\r\n            resolve(res);\r\n        })\r\n        .catch((err) => {\r\n            console.log('err', err);\r\n            reject(err);\r\n        })\r\n    });\r\n    \r\n}\r\n\r\nconst saveData = (url, model) => {\r\n    // History = history;\r\n    let accessToken = AuthHelper.getToken();\r\n    let options = {\r\n        headers: {\r\n          \"x-access-token\": accessToken\r\n        }\r\n    };\r\n    return axios.post(url, model, options);\r\n}\r\n\r\nconst updateData = (url, model) => {\r\n    // History = history;\r\n    let accessToken = AuthHelper.getToken();\r\n    let options = {\r\n        headers: {\r\n          \"x-access-token\": accessToken\r\n        }\r\n    };\r\n    return axios.put(url, model, options);\r\n}\r\n\r\nconst deleteData = (url, model) => {\r\n    // History = history;\r\n    let accessToken = AuthHelper.getToken();\r\n    let options = {\r\n        headers: {\r\n          \"x-access-token\": accessToken\r\n        },\r\n        data: model\r\n    };\r\n    console.log('delete options', options);\r\n    return axios.delete(url, options);\r\n}\r\n\r\nexport default {\r\n    getData,\r\n    saveData,\r\n    updateData,\r\n    deleteData\r\n};","import axios from 'axios';\r\nimport config from '../config';\r\nimport repository from '../repository';\r\nimport { FETCH_SKILLS_BEGIN, FETCH_SKILLS_FAIL, FETCH_SKILLS_SUCCESS } from './SkillActions';\r\nimport AuthHelper from '../AuthHelper';\r\n\r\nexport const ADD_USER_BEGIN = 'ADD_USER_BEGIN';\r\nexport const ADD_USER_SUCCESS = 'ADD_USER_SUCCESS';\r\nexport const ADD_USER_FAIL = 'ADD_USER_FAIL';\r\nexport const USER_SEARCH_BEGIN = 'USER_SEARCH_BEGIN';\r\nexport const USER_SEARCH_SUCCESS = 'USER_SEARCH_SUCCESS';\r\nexport const UPDATE_USER_BEGIN = 'UPDATE_USER_BEGIN';\r\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS';\r\nexport const UPDATE_USER_FAIL = 'UPDATE_USER_FAIL';\r\nexport const SELECT_USER = 'SELECT_USER';\r\nexport const CURRENT_USER_FIELD_CHANGE = 'CURRENT_USER_FIELD_CHANGE';\r\nexport const CURRENT_USER_FIELD_CHANGE_END = 'CURRENT_USER_FIELD_CHANGE_END';\r\nexport const CURRENT_ANSWER_FIELD_CHANGE = 'CURRENT_ANSWER_FIELD_CHANGE';\r\nexport const CURRENT_ANSWER_FIELD_CHANGE_END = 'CURRENT_ANSWER_FIELD_CHANGE_END';\r\nexport const CHOICE_ADDED_TO_USER = 'CHOICE_ADDED_TO_USER';\r\nexport const FETCH_USER_BEGIN = 'FETCH_USER_BEGIN';\r\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS';\r\nexport const FETCH_USER_FAIL = 'FETCH_USER_FAIL';\r\nexport const SET_USER_INFO_LOCAL = 'SET_USER_INFO_LOCAL';\r\nexport const LOGOUT_CURRENT_USER = 'LOGOUT_CURRENT_USER';\r\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS';\r\nexport const DELETE_USER_FAIL = 'DELETE_USER_FAIL';\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\r\nexport const OPEN_SNACKBAR = 'OPEN_SNACKBAR';\r\n\r\n\r\nvar history = {};\r\nexport const SetHistory = (propsHistory) => dispatch => {\r\n    history = propsHistory;\r\n}\r\n\r\nexport const CurrentUserFieldChange = (val, field, model) => dispatch => {\r\n    switch(field)\r\n    {\r\n        case 'emailId':\r\n        {\r\n            model.user_meta.emailId = val;\r\n            dispatch({\r\n                type: CURRENT_USER_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'name':\r\n        {\r\n            model.user_meta.name = val;\r\n            dispatch({\r\n                type: CURRENT_USER_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'role':\r\n        {\r\n            model.user_meta.role = val;\r\n            dispatch({\r\n                type: CURRENT_USER_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'orgId':\r\n        {\r\n            model.user_meta.orgId = val;\r\n            dispatch({\r\n                type: CURRENT_USER_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        default:\r\n        {\r\n        }\r\n    }\r\n    dispatch({\r\n        type: CURRENT_USER_FIELD_CHANGE_END\r\n    });\r\n}\r\n\r\nexport const DeleteUser = (userModel) => dispatch => {\r\n    return new Promise((resolve, reject) => {\r\n\r\n        let url = config.instance.getAdminApiUrl() + 'user';\r\n        repository.deleteData(url, userModel)\r\n                .then((res) => {\r\n                    dispatch({\r\n                        type: DELETE_USER_SUCCESS,\r\n                        payload: res.data\r\n                    });\r\n                })\r\n                .then((res) => {\r\n                    resolve(true);\r\n                })\r\n                .catch((err) => {\r\n                    dispatch({\r\n                        type: DELETE_USER_FAIL,\r\n                        payload: err\r\n                    });\r\n                    reject(err);\r\n                });\r\n    })\r\n}\r\n\r\nexport const AddUser = (userModel) => dispatch => {\r\n    return new Promise((resolve, reject) => {\r\n\r\n        let model ={\r\n            user_meta: userModel\r\n        };\r\n        let url = config.instance.getAdminApiUrl() + 'user';\r\n        repository.saveData(url, userModel)\r\n                .then((res) => {\r\n                    dispatch({\r\n                        type: ADD_USER_SUCCESS,\r\n                        payload: res.data\r\n                    });\r\n                })\r\n                .then((res) => {\r\n                    resolve(true);\r\n                })\r\n                .catch((err) => {\r\n                    dispatch({\r\n                        type: ADD_USER_FAIL,\r\n                        payload: err\r\n                    });\r\n                    reject(err);\r\n                });\r\n    })\r\n}\r\n\r\nexport const FetchUsers = () => dispatch => {\r\n    let url = config.instance.getAdminApiUrl() + 'getAllUsers';\r\n    repository.getData(url, history)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: FETCH_USER_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_USER_FAIL,\r\n                payload: err.statusText\r\n            });\r\n        });\r\n}\r\n\r\nexport const UpdateUser = (userModel) => dispatch => {\r\n    return new Promise((resolve, reject) => {\r\n\r\n        let url = config.instance.getAdminApiUrl() + 'user';\r\n        repository.updateData(url, userModel, history)\r\n            .then((res) => {\r\n                dispatch({\r\n                    type: UPDATE_USER_SUCCESS\r\n                });\r\n            })\r\n            .then((res) => {\r\n                resolve(true);\r\n            })\r\n            .catch((err) => {\r\n                dispatch({\r\n                    type: UPDATE_USER_SUCCESS,\r\n                    payload: { errorStatus: '401' }\r\n                });\r\n                reject(err);\r\n            });\r\n    })\r\n}\r\n\r\nexport const SetUserInfo = (res) => dispatch => {\r\n    return new Promise((resolve, reject) => {\r\n        AuthHelper.Login(res);\r\n        let userInfo = AuthHelper.GetUserInfo();\r\n        dispatch({\r\n            type: SET_USER_INFO_LOCAL,\r\n            payload: userInfo\r\n        });\r\n        resolve(true);\r\n    })\r\n}\r\nexport const LogoutCurrentUser = () => dispatch => {\r\n    AuthHelper.LogOut();\r\n    dispatch({\r\n        type: LOGOUT_CURRENT_USER\r\n    });\r\n}\r\n\r\nexport const CloseSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: CLOSE_SNACKBAR\r\n    });\r\n}\r\nexport const OpenSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: OPEN_SNACKBAR\r\n    });\r\n}\r\n","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nclass TickComponent extends React.Component {\r\n    interval = 0;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentTick: {\r\n                minutes: 90,\r\n                seconds: 59\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.interval = setInterval(\r\n            () => {\r\n                let { minutes, seconds } = this.state.currentTick;\r\n                console.log('minutes', minutes);\r\n                this.setState({\r\n                    currentTick: {\r\n                        minutes: parseInt(minutes) - 1\r\n                    }\r\n                })\r\n            },\r\n            60000\r\n        );\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    render = () => {\r\n        let { currentTick } = this.state;\r\n        return (\r\n            <Typography variant=\"subtitle1\" style={{color: '#fff'}}>\r\n                Time Remaining: {currentTick.minutes} minutes\r\n            </Typography>\r\n        );\r\n    }\r\n}\r\nexport default TickComponent;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport classNames from 'classnames';\r\nimport { Button, Menu, MenuItem } from '@material-ui/core';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AuthHelper from '../../AuthHelper';\r\nimport config from '../../config';\r\nimport TickComponent from '../lib/TickComponent';\r\n\r\nconst Header = (props) => {\r\n    const { classes, openState, isTokenExpired } = props;\r\n    const logout = () => {\r\n        props.onLogout();\r\n    }\r\n    let userInfo = AuthHelper.GetUserInfo();\r\n    const [auth, setAuth] = React.useState(true);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    \r\n      const handleClose = () => {\r\n        setAnchorEl(null);\r\n      };\r\n      \r\n    return (\r\n        <div>\r\n        <AppBar\r\n            position=\"fixed\"\r\n            className={classNames(classes.appBar, {\r\n            [classes.appBarShift]: openState,\r\n            })}\r\n        >\r\n            <Toolbar disableGutters={!openState}>\r\n                {\r\n                    props.isDrawerRequired &&\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        edge=\"start\"\r\n                        aria-label=\"Open drawer\"\r\n                        onClick={() => props.onDrawerOpen()}\r\n                        className={classNames(classes.menuButton, {\r\n                        [classes.hide]: openState,\r\n                        })}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                }\r\n            <Typography  style={styles.paddingLeft} variant=\"h6\" color=\"inherit\" noWrap>\r\n                    <a href={config.instance.getValue('site_url')} style={{color: '#fff'}}>\r\n                        {config.instance.getValue('site_title')}\r\n                    </a>\r\n            </Typography>\r\n            {userInfo &&\r\n            <Typography variant=\"subtitle1\" color=\"inherit\" noWrap style={styles.welcomeMessage}>\r\n                {userInfo.name}\r\n            </Typography>\r\n            }\r\n            {\r\n                AuthHelper.isLoggedIn() && props.isLogoutButtonRequired && \r\n                <div style={styles.menuButton}>\r\n                <IconButton \r\n                    onClick={handleMenu}\r\n                    edge=\"end\"\r\n                    aria-label=\"Account of current user\"\r\n                    aria-haspopup=\"true\"\r\n                    color=\"inherit\"\r\n                    >\r\n                    <AccountCircle />\r\n                </IconButton>\r\n                <Menu\r\n                    id=\"menu-appbar\"\r\n                    anchorEl={anchorEl}\r\n                    anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                    }}\r\n                    keepMounted\r\n                    transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                    }}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    >\r\n                    <MenuItem >Role: {userInfo && userInfo.role}</MenuItem>\r\n                    <MenuItem onClick={logout} >Logout</MenuItem>\r\n                </Menu>\r\n                </div>\r\n            }\r\n            {\r\n                props.isTickerRequired &&\r\n                <IconButton style={styles.paddingLeft}>\r\n                    <TickComponent />\r\n                </IconButton>\r\n            }\r\n            \r\n            </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\nexport default Header;\r\nconst styles = {\r\n    menuButton: {\r\n        right: '4px'\r\n    },\r\n    welcomeMessage: {\r\n        marginLeft: '40%'\r\n    },\r\n    paddingLeft: {\r\n        paddingLeft: '1%'\r\n    }\r\n}","import React from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport classNames from 'classnames';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Dashboard, Book, Assessment, ViewQuilt, PermIdentity, Polymer, Airplay,\r\n    SupervisorAccount, Work  } from '@material-ui/icons';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport { Link } from 'react-router-dom'\r\nimport AuthHelper from '../../AuthHelper';\r\nimport { Avatar } from '@material-ui/core';\r\n\r\nconst MenuItems = [\r\n    { routeName: 'dashboard', routeCaption: 'Dashboard', icon: Dashboard, app: 'TeachAssesment' },\r\n    { routeName: 'mcqs', routeCaption: 'Library', icon: Book, app: 'TeachAssesment' },\r\n    { routeName: 'tests', routeCaption: 'Tests', icon: Assessment, app: 'TeachAssesment' },\r\n    { routeName: 'invitations', routeCaption: 'Invitations', icon: SupervisorAccount, app: 'TeachAssesment' },\r\n    { routeName: 'categories', routeCaption: 'Categories', icon: ViewQuilt, app: 'TeachAssesment' },\r\n    { routeName: 'skills', routeCaption: 'Skills', icon: Polymer, app: 'TeachAssesment' },\r\n    { routeName: 'orgs', routeCaption: 'Organizations', icon: Work, app: 'TeachAssesment' },\r\n    { routeName: 'users', routeCaption: 'Users', icon: PermIdentity, app: 'TeachAssesment' },\r\n\r\n    /* HiTech Routes */\r\n    // { routeName: 'rmaRequests', routeCaption: 'RMA', icon: Book, app: 'Hitech' },\r\n];\r\n\r\nconst getIcon = (menuItem) => {\r\n    /*if(menuItem.routeName === 'skills') {\r\n        return (\r\n            <Avatar>S</Avatar>\r\n        )\r\n    }*/\r\n    let icon = menuItem.icon;\r\n    return (\r\n        React.createElement(icon)\r\n    )\r\n}\r\n\r\nconst SideDrawer = (props) => {\r\n    const { classes, openState, theme } = props;\r\n    return (\r\n            <Drawer\r\n            variant=\"permanent\"\r\n            className={classNames(classes.drawer, {\r\n            [classes.drawerOpen]: openState,\r\n            [classes.drawerClose]: !openState,\r\n            })}\r\n            classes={{\r\n            paper: classNames({\r\n                [classes.drawerOpen]: openState,\r\n                [classes.drawerClose]: !openState,\r\n            }),\r\n            }}\r\n            open={openState}\r\n            >\r\n            <div className={classes.toolbar}>\r\n            <IconButton onClick={() => props.onDrawerClose()}>\r\n                {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n            </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n            {MenuItems.map((menuItem, index) => (\r\n                <div key={index}>\r\n                    {AuthHelper.isLoggedIn() && menuItem.routeName !== 'login' &&\r\n                    <Link to={\"/\" + menuItem.routeName} key={index}>\r\n                        <ListItem button key={menuItem.routeCaption}>\r\n                            {/* <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon> */}\r\n                            <ListItemIcon title={menuItem.routeCaption}>{getIcon(menuItem)}</ListItemIcon>\r\n                            <ListItemText style={{textDecoration: 'none'}} primary={menuItem.routeCaption} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    }\r\n                    {!AuthHelper.isLoggedIn() && menuItem.routeName === 'login' &&\r\n                    <Link to={\"/\" + menuItem.routeName} key={index}>\r\n                        <ListItem button key={menuItem.routeCaption}>\r\n                            <ListItemIcon title={menuItem.routeCaption}>{getIcon(menuItem)}</ListItemIcon>\r\n                            <ListItemText style={{textDecoration: 'none'}} primary={menuItem.routeCaption} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    }\r\n                    {menuItem.app === 'Hitech' &&\r\n                    <Link to={\"/\" + menuItem.routeName} key={index}>\r\n                        <ListItem button key={menuItem.routeCaption}>\r\n                            <ListItemIcon title={menuItem.routeCaption}>{getIcon(menuItem)}</ListItemIcon>\r\n                            <ListItemText style={{textDecoration: 'none'}} primary={menuItem.routeCaption} />\r\n                        </ListItem>\r\n                    </Link>}\r\n            </div>\r\n            ))}\r\n            </List>\r\n            </Drawer>\r\n                );\r\n}\r\nexport default SideDrawer;","import React from 'react';\r\nimport { List, ListItem, ListItemText, ListItemIcon  } from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nconst Faq = (props) => {\r\n    let instructions = [\r\n        \"This test has multiple choice questions\",\r\n        \"Each question has one or more correct answers\",\r\n        \"Please ensure you complete the test once you click on Start Test button\",\r\n        \"To start the test, click on Start Test button\",\r\n        \"Once you click on Start Test, remaining time will be displayed on top of screen\",\r\n        \"To submit your all responses to questions, click on Submit button on top right\",\r\n        \"Unless you click on Submit, your answers will not be submitted for evaluation, so just ensure you click on Submit before time elapses\"\r\n    ];\r\n    return (\r\n        <List>\r\n            {instructions.map((instruction, index) => {\r\n                return (\r\n                <ListItem key={index}>\r\n                    <ListItemIcon>\r\n                        <SendIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={instruction} />\r\n                </ListItem>\r\n                )  \r\n            })}\r\n        </List>\r\n    )\r\n}\r\nexport default Faq;","import React from 'react';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst WelcomeCandidate = (props) => {\r\n\r\n    return (\r\n        <Grid container style={styles.container}>\r\n            <Typography variant=\"h2\" gutterBottom={true} \r\n                align=\"center\"    color=\"primary\">Welcome to Tech Assessment</Typography>\r\n                <Divider />\r\n        </Grid>\r\n    );\r\n}\r\nexport default WelcomeCandidate;\r\nconst styles = {\r\n    container: {\r\n        paddingTop: '10%'\r\n    },\r\n    textCenter: {\r\n        fontSize: '28px',\r\n        paddingLeft: '25%',\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport config from '../../config';\r\nimport axios from 'axios';\r\nimport AuthHelper from '../../AuthHelper';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport { SetUserInfo } from '../../actions/UserActions';\r\n\r\nimport Faq from '../../components/Simulator/Faq';\r\nimport WelcomeCandidate from '../../components/Simulator/WelcomeCandidate';\r\n\r\n// const useStyles = makeStyles(theme => ({\r\nconst classes = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: 2,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n};\r\n\r\nclass SimulatorShell extends Component {\r\n\r\n    localHandler = (invitationId) => {\r\n          let url = config.instance.getCandidateApiUrl() + 'auth/local';\r\n          let data = {\r\n              invitationId: invitationId\r\n          }\r\n          axios.post(url, data).then((res) => {\r\n              const token = res.headers['x-auth-token'];\r\n              if(token) {\r\n                  this.props.SetUserInfo(res)\r\n                        .then((result) => {\r\n                            this.props.history.push('/startTest/' + invitationId);\r\n                        })\r\n              } else {\r\n                  this.setState({\r\n                      errorMessage: 'Candidate not registered. Please try again.'\r\n                  });    \r\n              }\r\n          }).catch((err) => {\r\n              if(this.props.history){\r\n                  this.props.history.push({\r\n                      pathname: '/userForbidden'\r\n                  });\r\n              }\r\n          });\r\n    }\r\n\r\n    render = () => {\r\n      let { inviteid } = this.props.match.params;\r\n      \r\n      if(inviteid) {\r\n        return (\r\n          <div>\r\n                <Grid container spacing={16}>\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                        <WelcomeCandidate />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                        <Faq />\r\n                        <Button type=\"button\" variant=\"contained\"\r\n                            color=\"primary\" size=\"large\" onClick={() => this.localHandler(inviteid)}>Start Test</Button>\r\n                    </Grid>\r\n                </Grid>\r\n          </div>\r\n        );\r\n      }\r\n      else {\r\n        return (\r\n          <div>\r\n              Page you are trying to open could not be found. Please check with your recruiter.\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state.userReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  SetUserInfo: (userInfo) => dispatch(SetUserInfo(userInfo)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SimulatorShell);\r\n","import React, { Component } from 'react';\r\nimport config from '../../config';\r\nimport axios from 'axios';\r\nimport AuthHelper from '../../AuthHelper';\r\nimport { SetUserInfo } from '../../actions/UserActions';\r\nimport { connect } from 'react-redux';\r\nimport { CardContent, FormControl, TextField, CardActions, Button, CardHeader } from '@material-ui/core';\r\n\r\nclass LocalLoginComponent extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            emailId: '',\r\n            password: '',\r\n            errorMessage: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        config.instance.initialize();\r\n    }\r\n\r\n    localHandler = () => {\r\n        let url = config.instance.getAdminApiUrl() + 'auth/local';\r\n        //url = 'http://localhost:3001/api/local';\r\n        let data = {\r\n            emailId: this.state.emailId, \r\n            password: this.state.password\r\n        }\r\n        axios.post(url, data).then((res) => {\r\n            const token = res.headers['x-auth-token'];\r\n            if(token) {\r\n                this.props.SetUserInfo(res).then((res) => {\r\n                    this.props.history.push({\r\n                        pathname: '/dashboard'\r\n                    });\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    errorMessage: 'Wrong Credentials. Please try again.'\r\n                });    \r\n            }\r\n        }).catch((err) => {\r\n            this.setState({\r\n                errorMessage: 'Invalid Credentials. Please check entered email and enter correct password.'\r\n            });    \r\n        });\r\n    }\r\n\r\n    onEmailIdChange = (value) => {\r\n        this.setState({\r\n            emailId: value\r\n        });\r\n    }\r\n    \r\n    onPasswordChange = (value) => {\r\n        this.setState({\r\n            password: value\r\n        });\r\n    }\r\n\r\n    render = () => {\r\n        let userInfo = AuthHelper.GetUserInfo();\r\n        let { errorMessage } = this.state;\r\n        console.log('userinfo in login', userInfo);\r\n        return (\r\n            <div>\r\n                {userInfo === null && \r\n                <form  noValidate autoComplete=\"off\">\r\n                    <CardHeader title=\"Login\"\r\n                    subheader={errorMessage}\r\n                    >\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                        <FormControl variant=\"outlined\">\r\n                            <TextField\r\n                                label=\"Email Id\"\r\n                                value={this.state.emailId}\r\n                                onChange={(e) => this.onEmailIdChange(e.target.value)}\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\" />\r\n                                \r\n                            <TextField\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                value={this.state.password}\r\n                                onChange={(e) => this.onPasswordChange(e.target.value)}\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\" />\r\n                        </FormControl>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <Button variant=\"contained\" size=\"large\" color=\"primary\"\r\n                            onClick={() => this.localHandler()}>\r\n                            Login\r\n                        </Button>\r\n                    </CardActions>\r\n                </form>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.userReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    SetUserInfo: (userInfo) => dispatch(SetUserInfo(userInfo)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LocalLoginComponent);\r\n","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst LoadingComponent = (props) => {\r\n    return (\r\n        <div>\r\n            <CircularProgress color=\"secondary\" />\r\n        </div>\r\n    );\r\n}\r\nexport default LoadingComponent;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Loading from '../lib/LoadingComponent';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\nconst AddCategoryComponent = (props) => {\r\n    let { model } = props;\r\n    let display = (props && props.editMode) ? 'block' : 'none';\r\n    return (\r\n        <Card style={{padding: \"4%\"}}>\r\n        {!model && <Loading />} \r\n        {model &&    \r\n            <form  noValidate autoComplete=\"off\">\r\n                <CardHeader \r\n                avatar={\r\n                    <Avatar aria-label=\"Recipe\" style={styles.avatar}>\r\n                        {!props.editMode && <AddIcon />}\r\n                        {props.editMode && <EditIcon />}\r\n                    </Avatar>\r\n                    }\r\n                    action={\r\n                        <Button style={{display: display}} onClick={() => props.onAdd()}>Add New</Button>\r\n                    }\r\n                    title={props.editMode ? \r\n                            \"Edit Category\" :\r\n                            \"Add Category\"} \r\n                            >\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                        <TextField\r\n                            id=\"outlined-name\"\r\n                            label=\"Title\"\r\n                            value={model.category_meta ? model.category_meta.title : ''}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'title', props.model)}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <br></br>\r\n                    <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                        <TextField\r\n                            id=\"outlined-name\"\r\n                            label=\"Description\"\r\n                            multiline\r\n                            rows=\"4\"\r\n                            value={model.category_meta ? model.category_meta.description : ''}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'description', props.model)}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <br></br>\r\n                    <br></br>\r\n                </CardContent>\r\n                <CardActions style={styles.actionButton}>\r\n                    <Button variant=\"contained\" size=\"large\" color=\"primary\" \r\n                                onClick={ () => props.onSubmit(props.model) }>\r\n                        {props.editMode ? 'Update' : 'Submit'}\r\n                    </Button>\r\n                </CardActions>\r\n            </form>}\r\n        </Card>\r\n    );\r\n}\r\nexport default AddCategoryComponent;\r\nconst styles={\r\n    formControl: {\r\n        width: '90%'\r\n    },\r\n    actionButton: {\r\n        marginLeft: '70%'\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst years = [\r\n    0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20\r\n];\r\nconst months = [\r\n    0,1,2,3,4,5,6,7,8,9,10,11\r\n];\r\n\r\nclass SelectCandidateExperience extends Component{\r\n\r\n    // state = {\r\n    //     open: false,\r\n    //     min: '',\r\n    // };\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        open: false,\r\n        years: 0,\r\n        months: 0\r\n      };\r\n    }\r\n\r\n      handleChange = name => event => {\r\n        switch(name)\r\n        {\r\n          case 'years':\r\n          {\r\n            this.setState({\r\n              years: event.target.value\r\n            });\r\n            break;\r\n          }\r\n          case 'months':\r\n          {\r\n            this.setState({\r\n              months: event.target.value\r\n            });\r\n            break;\r\n          }\r\n          default:{}\r\n        }\r\n    };\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n      this.handleClose();\r\n      this.props.onSubmitExperience(this.state.years, this.state.months);\r\n    }\r\n\r\n    render = () => {\r\n      let { isTestAdmin } = this.props; \r\n    return (\r\n        <div>\r\n        <Button variant=\"outlined\" onClick={this.handleClickOpen}>Experience: {this.state.years} - {this.state.months}</Button>\r\n        <Dialog\r\n          disableBackdropClick\r\n          disableEscapeKeyDown\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n        >\r\n          <DialogTitle>Select Experience Level</DialogTitle>\r\n          <DialogContent>\r\n            <form >\r\n                <br></br>\r\n                <br></br>\r\n              <FormControl style={styles.formControl} variant=\"outlined\" >\r\n                <InputLabel htmlFor=\"years-simple\">Years</InputLabel>\r\n                <Select\r\n                  value={this.state.years}\r\n                  onChange={this.handleChange('years')}\r\n                  input={<Input id=\"years-simple\" />}\r\n                >\r\n                {years.map((item, index) => {\r\n                  return <MenuItem key={index} value={item}>{item}</MenuItem>\r\n                })}\r\n                </Select>\r\n              </FormControl>\r\n              {!isTestAdmin && <FormControl style={styles.formControl} variant=\"outlined\" >\r\n                <InputLabel htmlFor=\"months-simple\">Months</InputLabel>\r\n                <Select\r\n                  value={this.state.months}\r\n                  onChange={this.handleChange('months')}\r\n                  input={<Input id=\"months-simple\" />}\r\n                >\r\n                {months.map((item, index) => {\r\n                  return <MenuItem key={index} value={item}>{item}</MenuItem>\r\n                })}\r\n                </Select>\r\n              </FormControl> }\r\n            </form>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleSubmit} color=\"primary\">\r\n              Ok\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    )\r\n    }\r\n}\r\nconst styles = {\r\n    \r\n      formControl: {\r\n        width:\"45%\", \r\n        marginLeft:\"5%\"\r\n      }\r\n    \r\n};\r\nexport default SelectCandidateExperience;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport SelectCandidateExperience from './SelectCandidateExperience';\r\nimport LoadingComponent from '../lib/LoadingComponent';\r\n\r\nconst AddCandidate = (props) => {\r\n        let { model } = props;\r\n\r\n        const onSubmitExperience = (years, months) => {\r\n            props.onFieldChange(years, 'experienceYears', props.model)\r\n            props.onFieldChange(months, 'experienceMonths', props.model)\r\n        }\r\n\r\n        return (\r\n            <Card>\r\n            {!model && <LoadingComponent /> } \r\n            {model &&    \r\n                <form  noValidate autoComplete=\"off\">\r\n                    <CardHeader avatar={\r\n                        <Avatar aria-label=\"Recipe\">\r\n                        +\r\n                        </Avatar>\r\n                    }\r\n                    title=\"Add Candidate\">\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                    <FormControl variant=\"outlined\" style={{width:\"80%\"}}>\r\n                        <TextField\r\n                            id=\"outlined-name\"\r\n                            label=\"Full Name\"\r\n                            className={styles.dense}\r\n                            value={model.fullName}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'fullName', props.model)}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <br></br>\r\n                    <FormControl variant=\"outlined\" style={{width:\"80%\"}}>\r\n                        <TextField\r\n                            id=\"outlined-email\"\r\n                            label=\"Email\"\r\n                            className={styles.dense}\r\n                            value={model.email}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'email', props.model)}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <br></br>\r\n                    <FormControl variant=\"outlined\" style={{width:\"80%\"}}>\r\n                        <TextField\r\n                            id=\"outlined-contactno\"\r\n                            label=\"Contact Number\"\r\n                            className={styles.dense}\r\n                            value={model.contactno}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'contactno', props.model)}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <br></br>\r\n                    <FormControl variant=\"outlined\" style={{width:\"80%\"}}>\r\n                        <SelectCandidateExperience onSubmitExperience={ (years, months) => onSubmitExperience(years, months) } />\r\n                    </FormControl>\r\n                    <br></br>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                    <Button variant=\"contained\" size=\"large\" color=\"primary\"\r\n                                    onClick={ () => props.onSubmit(props.model)}>\r\n                        Submit\r\n                    </Button>\r\n                    </CardActions>\r\n                </form>\r\n            }\r\n            </Card>\r\n        );\r\n}\r\nconst styles = theme => ({\r\n    formControl: {\r\n        width: '70%',\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n});\r\nexport default AddCandidate;","import React, { Component } from 'react';\r\nimport AuthHelper from '../AuthHelper';\r\nimport { connect } from 'react-redux';\r\nimport { SetUserInfo } from '../actions/UserActions';\r\nimport { Card, CardHeader, CardContent, Typography, CardActions, Button, Grid } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n    componentDidMount = () => {\r\n        AuthHelper.SetHistory(this.props.history);\r\n    }\r\n    \r\n    \r\n    render = () => {\r\n        return (\r\n            <div>\r\n                <Grid container>\r\n                    <Grid item xs={5} sm={5}>\r\n                        <Card style={styles.card}>\r\n                            <CardHeader title=\"Active Tests\" style={styles.cardHeader}>\r\n                            </CardHeader>\r\n                            <CardContent>\r\n                                <Typography variant=\"subtitle1\">\r\n                                    You have no active tests. Start Creating.\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions style={styles.cardAction}>\r\n                                <Link to=\"/testConsole\" >\r\n                                    <Button size=\"small\" variant=\"contained\" color=\"primary\">Add New</Button>\r\n                                </Link>\r\n                            </CardActions>\r\n                            \r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={1} sm={1} />\r\n                    <Grid item xs={5} sm={5}>\r\n                        <Card style={styles.card}>\r\n                            <CardHeader title=\"MCQ Library\" style={styles.cardHeader}>\r\n                            </CardHeader>\r\n                            <CardContent>\r\n                                <Typography variant=\"subtitle1\">\r\n                                    You have 10 MCQs in library. Keep adding.\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions style={styles.cardAction}>\r\n                                <Link to=\"/addMcq\" >\r\n                                    <Button size=\"small\" variant=\"contained\" color=\"primary\">Add New</Button>\r\n                                </Link>\r\n                            </CardActions>\r\n                            \r\n                        </Card>\r\n                    </Grid>\r\n                    <br></br><br></br>\r\n                    <Grid item xs={5} sm={5} style={{marginTop: '5%'}}>\r\n                        <Card style={styles.card}>\r\n                            <CardHeader title=\"Candidates\" style={styles.cardHeader}>\r\n                            </CardHeader>\r\n                            <CardContent>\r\n                                <Typography variant=\"subtitle1\">\r\n                                    Your 2 candidates are yet to take test.\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions style={styles.cardAction}>\r\n                                <Link to=\"/tests\" >\r\n                                    <Button size=\"small\" variant=\"contained\" color=\"primary\">View</Button>\r\n                                </Link>\r\n                            </CardActions>\r\n                            \r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={1} sm={1} />\r\n                    <Grid item xs={5} sm={5} style={{marginTop: '5%'}}>\r\n                        <Card style={styles.card}>\r\n                            <CardHeader title=\"Skills\" style={styles.cardHeader}>\r\n                            </CardHeader>\r\n                            <CardContent>\r\n                                <Typography variant=\"subtitle1\">\r\n                                    25 skills in your library\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions style={styles.cardAction}>\r\n                                <Link to=\"/skills\" >\r\n                                    <Button size=\"small\" variant=\"contained\" color=\"primary\">View</Button>\r\n                                </Link>\r\n                            </CardActions>\r\n                            \r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state.userReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    SetUserInfo: (userInfo) => dispatch(SetUserInfo(userInfo)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\nconst styles = {\r\n    card: {\r\n        textAlign: 'center'\r\n    },\r\n    cardAction: {\r\n        float: 'right'\r\n    },\r\n    cardHeader: {\r\n        borderBottom: '1px solid #3f51b5',\r\n        color: '#fff'\r\n    }\r\n}","import config from '../config';\r\nimport repository from '../repository';\r\n\r\nexport const ADD_ORG_BEGIN = 'ADD_ORG_BEGIN';\r\nexport const ADD_ORG_SUCCESS = 'ADD_ORG_SUCCESS';\r\nexport const ADD_ORG_FAIL = 'ADD_ORG_FAIL';\r\nexport const DELETE_ORG_BEGIN = 'DELETE_ORG_BEGIN';\r\nexport const DELETE_ORG_SUCCESS = 'DELETE_ORG_SUCCESS';\r\nexport const DELETE_ORG_FAIL = 'DELETE_ORG_FAIL';\r\nexport const UPDATE_ORG_BEGIN = 'UPDATE_ORG_BEGIN';\r\nexport const UPDATE_ORG_SUCCESS = 'UPDATE_ORG_SUCCESS';\r\nexport const UPDATE_ORG_FAIL = 'UPDATE_ORG_FAIL';\r\nexport const SELECT_ORG = 'SELECT_ORG';\r\nexport const CURRENT_ORG_FIELD_CHANGE = 'CURRENT_ORG_FIELD_CHANGE';\r\nexport const CURRENT_ORG_FIELD_CHANGE_END = 'CURRENT_ORG_FIELD_CHANGE_END';\r\nexport const FETCH_ORGS_BEGIN = 'FETCH_ORGS_BEGIN';\r\nexport const FETCH_ORGS_SUCCESS = 'FETCH_ORGS_SUCCESS';\r\nexport const FETCH_ORGS_FAIL = 'FETCH_ORGS_FAIL';\r\n\r\nexport const CurrentOrgFieldChange = (val, field, model) => dispatch => {\r\n    switch(field)\r\n    {\r\n        case 'name':\r\n        {\r\n            model.org_meta.name = val;\r\n            dispatch({\r\n                type: CURRENT_ORG_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'city':\r\n        {\r\n            model.org_meta.city = val;\r\n            dispatch({\r\n                type: CURRENT_ORG_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        default:\r\n        {\r\n            break;\r\n        }\r\n    }\r\n    dispatch({\r\n        type: CURRENT_ORG_FIELD_CHANGE_END\r\n    });\r\n}\r\n\r\nexport const AddOrg = (orgModel) => dispatch => {\r\n    \r\n        return new Promise((resolve, reject) => {\r\n            let url = config.instance.getAdminApiUrl() + 'org';\r\n            console.log('action model');\r\n            console.log(orgModel);\r\n            repository.saveData(url, orgModel)\r\n                .then((res) => {\r\n                    console.log('org saved: ' + res);\r\n                    dispatch({\r\n                        type: ADD_ORG_SUCCESS,\r\n                        payload: res.data\r\n                    });\r\n                })\r\n                .then((res) => {\r\n                    resolve(true);\r\n                })\r\n                .catch((err) => {\r\n                    dispatch({\r\n                        type: ADD_ORG_FAIL,\r\n                        payload: err.statusText\r\n                    });\r\n                    reject(err);\r\n                });\r\n        })\r\n}\r\n\r\nexport const DeleteOrg = (orgModel) => dispatch => {\r\n    let url = config.instance.getAdminApiUrl() + 'org';\r\n    repository.deleteData(url, orgModel)\r\n        .then((res) => {\r\n            dispatch(FetchOrgs());\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: DELETE_ORG_FAIL,\r\n                payload: err.statusText\r\n            });\r\n        });\r\n}\r\n\r\nexport const SelectOrg = (orgModel) => dispatch => {\r\n    console.log('select org', orgModel);\r\n    dispatch({\r\n        type: SELECT_ORG,\r\n        payload: orgModel\r\n    })\r\n}\r\n\r\nexport const UpdateOrg = (orgModel) => dispatch => {\r\n    return new Promise((resolve, reject) => {\r\n\r\n        let url = config.instance.getAdminApiUrl() + 'org';\r\n        repository.updateData(url, orgModel)\r\n            .then((res) => {\r\n                dispatch({\r\n                    type: UPDATE_ORG_SUCCESS\r\n                });\r\n            })\r\n            .then((res) => {\r\n                resolve(true);\r\n            })\r\n            .catch((err) => {\r\n                dispatch({\r\n                    type: UPDATE_ORG_FAIL,\r\n                    payload: err.statusText\r\n                });\r\n                reject(err);\r\n            });\r\n    })\r\n}\r\n\r\nexport const FetchOrgs = () => dispatch => {\r\n    dispatch({\r\n        type: FETCH_ORGS_BEGIN\r\n    });\r\n    let url = config.instance.getAdminApiUrl() + 'getAllOrgs';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            console.log('orgs fetched');\r\n            dispatch({\r\n                type: FETCH_ORGS_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_ORGS_FAIL,\r\n                payload: err.statusText\r\n            });\r\n        });\r\n}\r\n","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst SnackbarComponent = (props) => {\r\n    let { openSnack } = props;\r\n    return (\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={openSnack}\r\n          autoHideDuration={6000}\r\n          onClose={props.handleClose}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span id=\"message-id\">{props.snackMessage}</span>}\r\n          action={[\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"Close\"\r\n              color=\"inherit\"\r\n              onClick={props.handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>,\r\n          ]}\r\n        >\r\n        <SnackbarContent\r\n            style={styles.root}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\">\r\n                {/* <Icon /> */}\r\n                {props.snackMessage}\r\n                </span>\r\n            }\r\n            action={[\r\n                <IconButton\r\n                key=\"close\"\r\n                aria-label=\"Close\"\r\n                color=\"inherit\"\r\n                >\r\n                <CloseIcon />\r\n                </IconButton>,\r\n            ]}\r\n            />\r\n        </Snackbar>\r\n    );\r\n}\r\nexport default SnackbarComponent;\r\nconst styles = {\r\n    root: {\r\n        backgroundColor: '#394'\r\n    }\r\n}","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Card, Grid } from '@material-ui/core';\r\nimport { MenuItem, OutlinedInput, Select, InputLabel, IconButton } from '@material-ui/core';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LoadingComponent from '../../components/lib/LoadingComponent';\r\nimport AuthHelper from '../../AuthHelper';\r\n\r\nconst EditUser = (props) => {\r\n        let { model, UserRoles } = props;\r\n\r\n       \r\n        return (\r\n            <div>\r\n            {!model && <LoadingComponent /> } \r\n            {model &&    \r\n                <form  noValidate autoComplete=\"off\">\r\n                    <Grid container spacing={0}>\r\n                            <Grid item xs={6} sm={6}>\r\n                                <FormControl variant=\"standard\">\r\n                                   <Select\r\n                                        onChange={(e) => props.onFieldChange(e.target.value, 'role', model)}\r\n                                        value={model.user_meta.role}\r\n                                        >\r\n                                        <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                        </MenuItem>\r\n                                        {UserRoles && UserRoles.length > 0 &&\r\n                                            UserRoles.map((item, index) => {\r\n                                            return (\r\n                                                <MenuItem key={index} value={item}>{item}</MenuItem>\r\n                                            )\r\n                                        })}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6} sm={6}>\r\n                            </Grid>\r\n                    </Grid>\r\n                    \r\n\r\n                </form>\r\n            }\r\n            </div>\r\n        );\r\n}\r\nconst styles = theme => ({\r\n    formControl: {\r\n        width: '70%',\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n});\r\nexport default EditUser;","import React, { Fragment, Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Delete, Edit, Save, Undo } from '@material-ui/icons';\r\nimport LoadingComponent from '../../components/lib/LoadingComponent';\r\nimport { Button, Typography, IconButton } from '@material-ui/core';\r\nimport EditUser from './EditUser';\r\nimport { MenuItem, OutlinedInput, Select, InputLabel } from '@material-ui/core';\r\n\r\n\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nconst styles = {\r\n    formControl: {\r\n        width: '80%',\r\n        marginBottom: '4%'\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n};\r\n\r\nclass UsersList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userEditIndex: -1\r\n        };\r\n    }\r\n\r\n    handleEditClick = (editIndex) => {\r\n        this.setState({\r\n            userEditIndex: editIndex\r\n        })\r\n    }\r\n\r\n    onUpdateUser = (user) => {\r\n        this.props.onUpdateUser(user);\r\n        this.setState({\r\n            userEditIndex: -1\r\n        });\r\n    }\r\n\r\n    render = () => {\r\n        let { users, orgs, UserRoles } = this.props;\r\n        let { userEditIndex } = this.state;\r\n\r\n        return (\r\n            <div>\r\n            {!users && <LoadingComponent /> }\r\n            {users && users.length === 0 && <Typography align=\"center\" variant=\"subtitle1\">No Tests Found </Typography> }\r\n            {users && users.length > 0 && \r\n            <Table>\r\n                <TableHead>\r\n                <TableRow>\r\n                    <CustomTableCell>Email</CustomTableCell>\r\n                    <CustomTableCell align=\"left\">Display Name</CustomTableCell>\r\n                    <CustomTableCell align=\"left\">Role</CustomTableCell>\r\n                    <CustomTableCell>Org</CustomTableCell>\r\n                    <CustomTableCell></CustomTableCell>\r\n                </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {users.map((user, index) => (\r\n                    <Fragment key={index}>\r\n                    {index === userEditIndex && \r\n                    <TableRow>\r\n                        <CustomTableCell align=\"left\">\r\n                            <Typography variant=\"subtitle2\" >\r\n                                {user.user_meta ? user.user_meta.emailId : ''}\r\n                            </Typography>\r\n                        </CustomTableCell>\r\n                        <CustomTableCell align=\"left\">\r\n                            <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <TextField\r\n                                        id=\"outlined-name\"\r\n                                        label=\"Full Name\"\r\n                                        className={styles.dense}\r\n                                        value={user.user_meta.name}\r\n                                        onChange={(e) => this.this.props.onFieldChange(e.target.value, 'name', user)}\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                            </FormControl>\r\n                        </CustomTableCell>\r\n                        <CustomTableCell align=\"left\">\r\n                            <EditUser \r\n                                model={user} \r\n                                UserRoles={UserRoles}\r\n                                onFieldChange={ (val, field, model) => this.props.onFieldChange(val, field, model) } \r\n                            />\r\n                        </CustomTableCell>\r\n                        <CustomTableCell align=\"left\">\r\n                                <FormControl variant=\"standard\" style={styles.formControl}>\r\n                                   <Select\r\n                                        onChange={(e) => this.props.onFieldChange(e.target.value, 'orgId', user)}\r\n                                        value={user.user_meta.orgId ? user.user_meta.orgId : -1}\r\n                                        >\r\n                                        <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                        </MenuItem>\r\n                                        {orgs && orgs.length > 0 &&\r\n                                            orgs.map((item, index) => {\r\n                                                console.log('org item', item);\r\n                                            return (\r\n                                                <MenuItem key={index} value={item.id}>{item.org_meta.name}</MenuItem>\r\n                                            )\r\n                                        })}\r\n                                    </Select>\r\n                                </FormControl>\r\n                        </CustomTableCell>\r\n                        <CustomTableCell>\r\n                            <IconButton \r\n                                onClick={() => this.onUpdateUser(user)}\r\n                                edge=\"end\"\r\n                                color=\"primary\"\r\n                                >\r\n                                <Save />\r\n                            </IconButton>\r\n                            <IconButton \r\n                                // onClick={() => this.props.onUpdateUser(user)}\r\n                                edge=\"end\"\r\n                                color=\"secondary\"\r\n                                >\r\n                                <Undo />\r\n                            </IconButton>\r\n\r\n                        </CustomTableCell>\r\n                    </TableRow>\r\n                    }\r\n                    {index !== userEditIndex &&\r\n                    <TableRow>\r\n                        <CustomTableCell align=\"left\">\r\n                            <Typography variant=\"subtitle2\" >\r\n                                {user.user_meta ? user.user_meta.emailId : ''}\r\n                            </Typography>\r\n                        </CustomTableCell>\r\n                        <CustomTableCell align=\"left\">\r\n                            <Typography variant=\"subtitle2\" >\r\n                                {user.user_meta ? user.user_meta.name : ''}\r\n                            </Typography>\r\n                        </CustomTableCell>\r\n                        <CustomTableCell align=\"left\">\r\n                            {user.user_meta ? (user.user_meta.role ? user.user_meta.role.toUpperCase() : '') : ''}\r\n                        </CustomTableCell>\r\n                        <CustomTableCell align=\"left\">\r\n                            {user.org_meta ? (user.org_meta.name ? user.org_meta.name : '') : ''}\r\n                        </CustomTableCell>\r\n                        <CustomTableCell>\r\n                            <IconButton \r\n                                onClick={() => this.props.onDeleteUser(user)}\r\n                                edge=\"end\"\r\n                                color=\"inherit\"\r\n                                >\r\n                                <Delete />\r\n                            </IconButton>\r\n                            <IconButton \r\n                                onClick={() => this.handleEditClick(index)}\r\n                                edge=\"end\"\r\n                                color=\"primary\"\r\n                                >\r\n                                <Edit />\r\n                            </IconButton>\r\n                        </CustomTableCell>\r\n                    </TableRow>\r\n                    }\r\n                    </Fragment>\r\n                ))}\r\n                </TableBody>\r\n            </Table>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst CustomTableCell = withStyles(theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n      fontSize: 18\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nexport default UsersList;","import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader, DialogContent, Dialog, DialogTitle, DialogActions, Divider } from '@material-ui/core';\r\nimport { MenuItem, OutlinedInput, Select, InputLabel, IconButton } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LoadingComponent from '../../components/lib/LoadingComponent';\r\nimport { Close  } from '@material-ui/icons';\r\nimport AuthHelper from '../../AuthHelper';\r\nimport config from '../../config';\r\n\r\nclass AddUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n        \r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n      this.props.onSubmit(this.props.model);\r\n      this.handleClose();\r\n    }\r\n    \r\n    render = () => {\r\n        let { model, orgs, UserRoles } = this.props;\r\n        return (\r\n            <div>\r\n            {!model && <LoadingComponent /> } \r\n            {model && \r\n            <Card>   \r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>Add User</Button>\r\n                <Dialog\r\n                fullWidth={true}\r\n                open={this.state.open}\r\n                onClose={this.handleClose}\r\n                >\r\n                <DialogTitle onClose={this.handleClose}>Create New User</DialogTitle>\r\n                <Divider />\r\n                <DialogContent style={{padding: '4%'}}>\r\n                    <form  noValidate autoComplete=\"off\">\r\n                                <FormControl variant=\"standard\" style={styles.formControl}>\r\n                                    <InputLabel htmlFor=\"outlined-role-simple\">\r\n                                        Role\r\n                                    </InputLabel>\r\n                                    <Select\r\n                                        onChange={(e) => this.props.onFieldChange(e.target.value, 'role', model)}\r\n                                        value={model.user_meta.role}\r\n                                        input={\r\n                                            <OutlinedInput\r\n                                                labelWidth={85}\r\n                                                name=\"role\"\r\n                                                id=\"outlined-role-simple\"\r\n                                            />\r\n                                        }>\r\n                                        {UserRoles && UserRoles.length > 0 &&\r\n                                            UserRoles.map((item, index) => {\r\n                                            return (\r\n                                                <MenuItem key={index} value={item}>{item}</MenuItem>\r\n                                            )\r\n                                        })}\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <FormControl variant=\"standard\" style={styles.formControl}>\r\n                                    <InputLabel htmlFor=\"outlined-org-simple\">\r\n                                        Organization\r\n                                    </InputLabel>\r\n                                    <Select\r\n                                        onChange={(e) => this.props.onFieldChange(e.target.value, 'orgId', model)}\r\n                                        value={model.user_meta.orgId}\r\n                                        input={\r\n                                            <OutlinedInput\r\n                                                labelWidth={85}\r\n                                                name=\"org\"\r\n                                                id=\"outlined-org-simple\"\r\n                                            />\r\n                                        }>\r\n                                        {orgs && orgs.length > 0 &&\r\n                                            orgs.map((item, index) => {\r\n                                            return (\r\n                                                <MenuItem key={index} value={item.id}>{item.org_meta.name}</MenuItem>\r\n                                            )\r\n                                        })}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                <TextField\r\n                                    id=\"outlined-email\"\r\n                                    label=\"Email Id\"\r\n                                    className={styles.dense}\r\n                                    value={model.user_meta.emailId}\r\n                                    onChange={(e) => this.props.onFieldChange(e.target.value, 'emailId', model)}\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                <TextField\r\n                                    id=\"outlined-name\"\r\n                                    label=\"Full Name\"\r\n                                    className={styles.dense}\r\n                                    value={model.user_meta.name}\r\n                                    onChange={(e) => this.props.onFieldChange(e.target.value, 'name', model)}\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </FormControl>\r\n                    </form>\r\n                    </DialogContent>\r\n                    <Divider />\r\n                    <DialogActions>\r\n                        <Button variant=\"contained\" size=\"large\" color=\"primary\"\r\n                                        onClick={ () => this.handleSubmit(this.props.model)}>\r\n                            Create User\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Card>}\r\n        \r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst styles = {\r\n    formControl: {\r\n        width: '80%',\r\n        marginBottom: '4%'\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n};\r\nexport default AddUser;","import React, { Component } from 'react';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport config from '../../config';\r\nimport axios from 'axios';\r\nimport AuthHelper from '../../AuthHelper';\r\nimport { SetUserInfo } from '../../actions/UserActions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass LoginComponent extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            errorMessage: ''\r\n        };\r\n    }\r\n    googleResponse = (response) => {\r\n        let url = config.instance.getAdminApiUrl() + 'auth/google';\r\n        axios.get(url, {\r\n          headers: {\r\n            access_token: response.accessToken\r\n          }\r\n        }).then((res) => {\r\n            console.log('res',res);\r\n            const token = res.headers['x-auth-token'];\r\n            if(token) {\r\n                this.props.SetUserInfo(res);\r\n                this.props.history.push({\r\n                    pathname: '/dashboard'\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    errorMessage: 'Wrong Credentials. Please try again.'\r\n                });    \r\n            }\r\n        }).catch((err) => {\r\n            if(this.props.history){ \r\n                this.props.history.push({\r\n                    pathname: '/userForbidden'\r\n                });\r\n            }\r\n        });\r\n    }\r\n    \r\n    render = () => {\r\n        return (\r\n            <div style={styles.container}>\r\n                {this.state.errorMessage && <div>{this.state.errorMessage}</div>}\r\n                <GoogleLogin\r\n                            clientId=\"350931387343-l9s3gs4fnmbj4rk4r4nfvh5siega0s5g.apps.googleusercontent.com\"\r\n                            buttonText=\"Login\"\r\n                            onSuccess={this.googleResponse}\r\n                            onFailure={this.googleResponse}\r\n                            cookiePolicy={'single_host_origin'}\r\n                        />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst styles = {\r\n    container: {\r\n        top: '20%',\r\n        left: '25%'\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.userReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    SetUserInfo: (userInfo) => dispatch(SetUserInfo(userInfo)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginComponent);\r\n","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport LoginComponent from '../../components/lib/LoginComponent';\r\nimport LocalLoginComponent from '../../components/lib/LocalLoginComponent';\r\n\r\nconst User401 = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h2\">\r\n                User Not Authorized\r\n            </Typography>\r\n            <div>\r\n                {/* <LoginComponent /> */}\r\n                <LocalLoginComponent />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default User401;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {    FetchUsers, AddUser, CurrentUserFieldChange,\r\n            UpdateUser, DeleteUser, CloseSnackbar,\r\n            OpenSnackbar } from '../../actions/UserActions';            \r\nimport { FetchOrgs } from '../../actions/OrgActions';            \r\nimport Grid from '@material-ui/core/Grid';\r\nimport SnackbarComponent from '../../components/lib/SnackbarComponent';\r\nimport { Button, Card, CardHeader } from '@material-ui/core';\r\nimport LoadingComponent from '../../components/lib/LoadingComponent';\r\nimport UsersList from './UsersList';\r\nimport AddUserComponent from './AddUser';\r\nimport User401 from './User401';\r\nimport config from '../../config';\r\n\r\nclass UserContainer extends React.Component {\r\n    \r\n    componentDidMount = () => {\r\n        this.reload();\r\n    }\r\n\r\n\r\n    reload = () => {\r\n        this.props.FetchUsers();\r\n        this.props.FetchOrgs();\r\n    }\r\n\r\n    onAddUser = (model) => {\r\n        this.props.AddUser(model)\r\n                .then((res) => {\r\n                    this.reload();\r\n                });\r\n    }\r\n\r\n    onDeleteUser = (model) => {\r\n        this.props.DeleteUser(model)\r\n                .then((res) => {\r\n                    this.reload();\r\n                });\r\n    }\r\n\r\n    onUpdateUser = (model) => {\r\n        this.props.UpdateUser(model)\r\n            .then((res) => {\r\n                this.reload();\r\n            });   \r\n    }\r\n\r\n    render = () => {\r\n        let { current_user, users, orgList, error } = this.props;\r\n        let user_roles = config.instance.getValue('user_roles');\r\n        let UserRoles = user_roles.split(',');\r\n\r\n        if(error) {\r\n            return(\r\n                <User401 />\r\n            )\r\n        }\r\n\r\n        return(\r\n            <Grid container spacing={16}>\r\n                <Grid item xs={12} sm={12}>\r\n                {!current_user && <LoadingComponent />}\r\n                {current_user &&\r\n                <Card>\r\n                    <CardHeader action={\r\n                        <div>\r\n                    <AddUserComponent \r\n                        onSubmit={ (model) => this.onAddUser(model) }\r\n                        model={this.props.current_user}\r\n                        orgs={orgList}\r\n                        UserRoles={UserRoles}\r\n                        onFieldChange={ (val, field, model) => this.props.CurrentUserFieldChange(val, field, model) } \r\n                        />\r\n                           </div>\r\n                    }\r\n                    title=\"Users\"\r\n                    />\r\n                    <UsersList \r\n                        users={users} \r\n                        orgs={orgList}\r\n                        UserRoles={UserRoles}\r\n                        onFieldChange={ (val, field, model) => this.props.CurrentUserFieldChange(val, field, model) } \r\n                        onUpdateUser={ (model) => this.onUpdateUser(model) }\r\n                        onDeleteUser={ (model) => this.onDeleteUser(model) }\r\n                    />\r\n                </Card>\r\n                }\r\n                <SnackbarComponent \r\n                    openSnack={this.props.snack_open} handleClose={() => this.props.CloseSnackbar()} \r\n                    snackMessage={\"Data Saved Successfully!\"} \r\n                    /> \r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.userReducer,\r\n    ...state.orgReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    UpdateUser: (model) => dispatch(UpdateUser(model)),\r\n    DeleteUser: (model) => dispatch(DeleteUser(model)),\r\n    AddUser: (userModel) => dispatch(AddUser(userModel)),\r\n    FetchUsers: () => dispatch(FetchUsers()),\r\n    FetchOrgs: () => dispatch(FetchOrgs()),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    CurrentUserFieldChange: (val, field, model) => dispatch(CurrentUserFieldChange(val, field, model))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserContainer);","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport LoginComponent from '../../components/lib/LoginComponent';\r\nimport LocalLoginComponent from '../../components/lib/LocalLoginComponent';\r\n\r\nconst UserForbidden = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h6\" >\r\n                User Forbidden or User Not Found. \r\n            </Typography>\r\n            <Typography variant=\"body1\" >\r\n                Please check with Admin if your emailId is added to user list. \r\n            </Typography>\r\n            <div>\r\n                {/* <LoginComponent /> */}\r\n                <LocalLoginComponent />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default UserForbidden;","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst ResourceNotFound = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h6\" >\r\n                Not Found. \r\n            </Typography>\r\n        </div>\r\n    )\r\n}\r\nexport default ResourceNotFound;","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport { CardHeader, CardContent, IconButton } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListIcon from '@material-ui/icons/ViewHeadline';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Remove from '@material-ui/icons/Remove';\r\n\r\nconst CategoryList = (props) => {\r\n        console.log(props);\r\n        return (\r\n            <Card style={{padding: \"4%\"}}>\r\n                <CardHeader \r\n                    avatar={\r\n                        <Avatar aria-label=\"Recipe\" style={styles.avatar}>\r\n                            <ListIcon />\r\n                        </Avatar>\r\n                    }    \r\n                    action={\r\n                        <IconButton onClick={() => props.onSearchEnable()}>\r\n                            {!props.searchEnabled && <SearchIcon />}\r\n                            {props.searchEnabled && <CloseIcon />}\r\n                        </IconButton>\r\n                    }            \r\n                    title={`Categories ${props.categories ? \"(\"+props.categories.length+\")\" : \"\" }`}>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    {\r\n                        <Collapse in={props.searchEnabled}>\r\n                        <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                            <TextField\r\n                                id=\"outlined-name\"\r\n                                label=\"Search\"\r\n                                placeholder=\"Enter search text here\"\r\n                                value={props.searchTerm}\r\n                                onChange={(e) => props.onSearchCategory(e.target.value)}\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormControl>\r\n                        </Collapse>\r\n                    }\r\n                    <List dense={true}>\r\n                        {props.categories && props.categories.length > 0\r\n                        && props.categories.map((category, index) => {\r\n                            let item = category.category_meta;\r\n                            return(\r\n                            <ListItem key={category.id}\r\n                                divider={true}\r\n                                button={true} onClick={ () => props.onCategorySelect(category) }\r\n                            >\r\n                            <ListItemText\r\n                                primary={item.title}\r\n                                secondary={item.description}\r\n                                />\r\n                            <ListItemSecondaryAction>\r\n                                <IconButton onClick={() => props.onDeleteCategory(category)}>\r\n                                    <Remove fontSize=\"large\" color=\"secondary\" />\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction>\r\n                            </ListItem>)\r\n                        })}\r\n                        \r\n                    </List>\r\n                {(!props.categories || props.categories.length === 0) &&\r\n                <Typography variant=\"h6\" align=\"center\">\r\n                    There are currently no categories added\r\n                </Typography>}\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n}\r\n\r\nexport default CategoryList;\r\n\r\nconst styles = {\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    },\r\n    formControl: {\r\n        width: '70%'\r\n    }\r\n}","import config from '../config';\r\nimport repository from '../repository';\r\n\r\nexport const ADD_CATEGORY_BEGIN = 'ADD_CATEGORY_BEGIN';\r\nexport const ADD_CATEGORY_SUCCESS = 'ADD_CATEGORY_SUCCESS';\r\nexport const ADD_CATEGORY_FAIL = 'ADD_CATEGORY_FAIL';\r\nexport const DELETE_CATEGORY_BEGIN = 'DELETE_CATEGORY_BEGIN';\r\nexport const DELETE_CATEGORY_SUCCESS = 'DELETE_CATEGORY_SUCCESS';\r\nexport const DELETE_CATEGORY_FAIL = 'DELETE_CATEGORY_FAIL';\r\nexport const CATEGORY_SEARCH_BEGIN = 'CATEGORY_SEARCH_BEGIN';\r\nexport const CATEGORY_SEARCH_SUCCESS = 'CATEGORY_SEARCH_SUCCESS';\r\nexport const UPDATE_CATEGORY_BEGIN = 'UPDATE_CATEGORY_BEGIN';\r\nexport const UPDATE_CATEGORY_SUCCESS = 'UPDATE_CATEGORY_SUCCESS';\r\nexport const UPDATE_CATEGORY_FAIL = 'UPDATE_CATEGORY_FAIL';\r\nexport const SELECT_CATEGORY = 'SELECT_CATEGORY';\r\nexport const CURRENT_CATEGORY_FIELD_CHANGE = 'CURRENT_CATEGORY_FIELD_CHANGE';\r\nexport const CURRENT_CATEGORY_FIELD_CHANGE_END = 'CURRENT_CATEGORY_FIELD_CHANGE_END';\r\nexport const FETCH_CATEGORIES_BEGIN = 'FETCH_CATEGORIES_BEGIN';\r\nexport const FETCH_CATEGORIES_SUCCESS = 'FETCH_CATEGORIES_SUCCESS';\r\nexport const FETCH_CATEGORIES_FAIL = 'FETCH_CATEGORIES_FAIL';\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\r\nexport const OPEN_SNACKBAR = 'OPEN_SNACKBAR';\r\n\r\nexport const CurrentCategoryFieldChange = (val, field, model) => dispatch => {\r\n    switch(field)\r\n    {\r\n        case 'title':\r\n        {\r\n            model.category_meta.title = val;\r\n            dispatch({\r\n                type: CURRENT_CATEGORY_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'description':\r\n        {\r\n            model.category_meta.description = val;\r\n            dispatch({\r\n                type: CURRENT_CATEGORY_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        default:\r\n        {\r\n            break;\r\n        }\r\n    }\r\n    dispatch({\r\n        type: CURRENT_CATEGORY_FIELD_CHANGE_END\r\n    });\r\n}\r\n\r\nexport const AddCategory = (categoryModel, editMode) => dispatch => {\r\n    dispatch({\r\n        type: ADD_CATEGORY_BEGIN\r\n    });\r\n    let url = config.instance.getAdminApiUrl() + 'category';\r\n    if(!editMode) {\r\n        repository.saveData(url, categoryModel)\r\n            .then((res) => {\r\n                dispatch({\r\n                    type: ADD_CATEGORY_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({\r\n                    type: ADD_CATEGORY_FAIL,\r\n                    payload: err\r\n                });\r\n            });\r\n    }\r\n    else {\r\n        dispatch(UpdateCategory(categoryModel));\r\n    }\r\n}\r\n\r\nexport const DeleteCategory = (categoryModel) => dispatch => {\r\n    let url = config.instance.getAdminApiUrl() + 'category';\r\n    repository.deleteData(url, categoryModel)\r\n        .then((res) => {\r\n            dispatch(FetchCategories());\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: DELETE_CATEGORY_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const BeginSearch = () => dispatch => {\r\n    dispatch({\r\n        type: CATEGORY_SEARCH_BEGIN\r\n    });\r\n}\r\n\r\nexport const SearchCategory = (searchTerm, categoryList) => dispatch => {\r\n    if(categoryList && categoryList.length > 0) {\r\n        let filteredCategories = categoryList.filter((item) => {\r\n            return (\r\n                    item.title &&\r\n                    item.title.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1\r\n                    ) ||\r\n                    (\r\n                        item.description &&\r\n                        item.description.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1);\r\n        });\r\n        if(filteredCategories && filteredCategories.length > 0) {\r\n            dispatch({\r\n                type: CATEGORY_SEARCH_SUCCESS,\r\n                payload: {\r\n                    filteredCategories,\r\n                    searchTerm\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            dispatch({\r\n                type: CATEGORY_SEARCH_SUCCESS,\r\n                payload: {\r\n                    filteredCategories: [],\r\n                    searchTerm\r\n                }\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        dispatch({\r\n            type: CATEGORY_SEARCH_SUCCESS,\r\n            payload: {\r\n                filteredCategories: [],\r\n                searchTerm\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const SelectCategory = (categoryModel) => dispatch => {\r\n    dispatch({\r\n        type: SELECT_CATEGORY,\r\n        payload: categoryModel\r\n    })\r\n}\r\n\r\nexport const UpdateCategory = (categoryModel) => dispatch => {\r\n    dispatch({\r\n        type: UPDATE_CATEGORY_BEGIN\r\n    });\r\n    let url = config.instance.getAdminApiUrl() + 'category';\r\n    repository.updateData(url, categoryModel)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: UPDATE_CATEGORY_SUCCESS\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: UPDATE_CATEGORY_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const FetchCategories = () => dispatch => {\r\n    dispatch({\r\n        type: FETCH_CATEGORIES_BEGIN\r\n    });\r\n    let url = config.instance.getAdminApiUrl() + 'getAllCategories';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: FETCH_CATEGORIES_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_CATEGORIES_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const CloseSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: CLOSE_SNACKBAR\r\n    });\r\n}\r\nexport const OpenSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: OPEN_SNACKBAR\r\n    });\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AddCategoryComponent from '../components/Categories/AddCategory';\r\nimport CategoryList from '../components/Categories/CategoryList';\r\nimport {    AddCategory, FetchCategories, UpdateCategory, \r\n            CloseSnackbar, CurrentCategoryFieldChange,\r\n            OpenSnackbar, SelectCategory, DeleteCategory,\r\n            BeginSearch, SearchCategory } from '../actions/CategoryActions';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SnackbarComponent from '../components/lib/SnackbarComponent';\r\n\r\nclass CategoryContainer extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        this.reload();\r\n    }\r\n\r\n    componentWillUpdate = () => {\r\n        if(this.props.success_message !== '') {\r\n            this.props.FetchCategories();\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (newprops, oldprops) => {\r\n        if(newprops.success_message !== '') {\r\n            this.props.FetchCategories();\r\n            this.props.OpenSnackbar();\r\n        }\r\n    }\r\n\r\n    reload = () => {\r\n        this.props.FetchCategories();\r\n    }\r\n\r\n    render = () => {\r\n        let categories = [];\r\n        if(this.props.search_enabled) {\r\n            categories = this.props.filteredCategories;\r\n        }\r\n        else {\r\n            categories = this.props.categoryList;\r\n        }\r\n        return(\r\n            <Grid container spacing={16}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AddCategoryComponent \r\n                        onSubmit={ (model) => this.props.AddCategory(model, this.props.editMode) }\r\n                        model={this.props.current_category}\r\n                        editMode={this.props.editMode}\r\n                        onAdd={() => this.reload()}\r\n                        onFieldChange={ (val, field, model) => this.props.CurrentCategoryFieldChange(val, field, model) } />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <CategoryList categories={categories} \r\n                        onCategorySelect={ (item) => this.props.SelectCategory(item) } \r\n                        onSearchEnable={ () => this.props.BeginSearch() } \r\n                        onDeleteCategory={ (item) => this.props.DeleteCategory(item)}\r\n                        searchEnabled={this.props.search_enabled}\r\n                        searchTerm={this.props.search_term}\r\n                        onSearchCategory={ (searchTerm) => this.props.SearchCategory(searchTerm, this.props.categoryList) }/>\r\n                </Grid>\r\n                <SnackbarComponent \r\n                    openSnack={this.props.snack_open} handleClose={() => this.props.CloseSnackbar()} \r\n                    snackMessage={\"Data Saved Successfully!\"} \r\n                    /> \r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.categoryReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    AddCategory: (model, editMode) => dispatch(AddCategory(model, editMode)),\r\n    UpdateCategory: (model) => dispatch(UpdateCategory(model)),\r\n    SelectCategory: (model) => dispatch(SelectCategory(model)),\r\n    DeleteCategory: (model) => dispatch(DeleteCategory(model)),\r\n    FetchCategories: () => dispatch(FetchCategories()),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    BeginSearch: () => dispatch(BeginSearch()),\r\n    SearchCategory: (searchTerm, categoryList) => dispatch(SearchCategory(searchTerm, categoryList)),\r\n    CurrentCategoryFieldChange: (val, field, model) => dispatch(CurrentCategoryFieldChange(val, field, model))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryContainer);","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport { CardHeader, CardContent, IconButton } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListIcon from '@material-ui/icons/ViewHeadline';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Remove from '@material-ui/icons/Remove';\r\n\r\nconst OrgList = (props) => {\r\n        console.log(props);\r\n        return (\r\n            <Card style={{padding: \"4%\"}}>\r\n                <CardHeader \r\n                    avatar={\r\n                        <Avatar aria-label=\"Recipe\" style={styles.avatar}>\r\n                            <ListIcon />\r\n                        </Avatar>\r\n                    }    \r\n                    title={`Organizations ${props.orgs ? \"(\"+props.orgs.length+\")\" : \"\" }`}>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <List dense={true}>\r\n                        {props.orgs && props.orgs.length > 0\r\n                        && props.orgs.map((org, index) => {\r\n                            let item = org.org_meta;\r\n                            return(\r\n                            <ListItem key={org.id}\r\n                                divider={true}\r\n                                button={true} onClick={ () => props.onOrgSelect(org) }\r\n                            >\r\n                            <ListItemText\r\n                                primary={item.name}\r\n                                secondary={item.city}\r\n                                />\r\n                            </ListItem>)\r\n                        })}\r\n                        \r\n                    </List>\r\n                {(!props.orgs || props.orgs.length === 0) &&\r\n                <Typography variant=\"h6\" align=\"center\">\r\n                    There are currently no organizations added\r\n                </Typography>}\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n}\r\n\r\nexport default OrgList;\r\n\r\nconst styles = {\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    },\r\n    formControl: {\r\n        width: '70%'\r\n    }\r\n}","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Loading from '../../components/lib/LoadingComponent';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\nconst AddOrgComponent = (props) => {\r\n    let { model } = props;\r\n    let display = (props && props.editMode) ? 'block' : 'none';\r\n\r\n    return (\r\n        <Card style={{padding: \"4%\"}}>\r\n        {!model && <Loading />} \r\n        {model &&    \r\n            <form  noValidate autoComplete=\"off\">\r\n                <CardHeader \r\n                avatar={\r\n                    <Avatar aria-label=\"Recipe\" style={styles.avatar}>\r\n                        {!props.editMode && <AddIcon />}\r\n                        {props.editMode && <EditIcon />}\r\n                    </Avatar>\r\n                    }\r\n                    action={\r\n                        <Button style={{display: display}} onClick={() => props.onAdd()}>Add New</Button>\r\n                    }\r\n                    title={props.editMode ? \r\n                            \"Edit Organization\" :\r\n                            \"Add Organization\"} \r\n                            >\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                        <TextField\r\n                            id=\"outlined-name\"\r\n                            label=\"Name\"\r\n                            value={model.org_meta ? model.org_meta.name : ''}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'name', props.model)}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <br></br>\r\n                    <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                        <TextField\r\n                            id=\"outlined-city\"\r\n                            label=\"City\"\r\n                            value={model.org_meta ? model.org_meta.city : ''}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'city', props.model)}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <br></br>\r\n                    <br></br>\r\n                </CardContent>\r\n                <CardActions style={styles.actionButton}>\r\n                    <Button variant=\"contained\" size=\"large\" color=\"primary\" \r\n                                onClick={ () => props.onSubmit(props.model) }>\r\n                        {props.editMode ? 'Update' : 'Submit'}\r\n                    </Button>\r\n                </CardActions>\r\n            </form>}\r\n        </Card>\r\n    );\r\n}\r\nexport default AddOrgComponent;\r\nconst styles={\r\n    formControl: {\r\n        width: '90%'\r\n    },\r\n    actionButton: {\r\n        marginLeft: '70%'\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Button, Card, CardHeader, CardContent, CardActions } from '@material-ui/core';\r\nimport LoadingComponent from '../../components/lib/LoadingComponent';\r\nimport { KeyboardBackspace } from '@material-ui/icons';\r\nimport OrgList from './OrgList';\r\nimport AddOrgComponent from './AddOrg';\r\nimport {    AddOrg, FetchOrgs, UpdateOrg, \r\n            CurrentOrgFieldChange,\r\n            SelectOrg, DeleteOrg\r\n        } from '../../actions/OrgActions';\r\n\r\nclass OrgContainer extends React.Component {\r\n    \r\n    componentDidMount = () => {\r\n        this.reload();\r\n    }\r\n\r\n    reload = () => {\r\n        this.props.FetchOrgs();\r\n    }\r\n\r\n    onAddOrg = (model) => {\r\n        if(this.props.editMode) {\r\n            this.props.UpdateOrg(model)\r\n                    .then((res) => {\r\n                        this.reload();\r\n                    })\r\n        }\r\n        else {\r\n            this.props.AddOrg(model)\r\n                    .then((res) => {\r\n                        this.reload();\r\n                    })\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        let { orgList, current_org } = this.props;\r\n        console.log('current_org', current_org);\r\n\r\n        return(\r\n            <Grid container spacing={16}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AddOrgComponent\r\n                        onSubmit={ (model) => this.onAddOrg(model) }\r\n                        model={current_org}\r\n                        editMode={this.props.editMode}\r\n                        onAdd={() => this.reload()}\r\n                        onFieldChange={ (val, field, model) => this.props.CurrentOrgFieldChange(val, field, model) } />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <OrgList \r\n                        orgs={orgList} \r\n                        onOrgSelect={ (item) => this.props.SelectOrg(item) } \r\n                        />\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.orgReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    FetchOrgs: () => dispatch(FetchOrgs()),\r\n    AddOrg: (model) => dispatch(AddOrg(model)),\r\n    UpdateOrg: (model) => dispatch(UpdateOrg(model)),\r\n    SelectOrg: (model) => dispatch(SelectOrg(model)),\r\n    CurrentOrgFieldChange: (val, field, model) => dispatch(CurrentOrgFieldChange(val, field, model))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrgContainer);\r\nconst styles = {\r\n    actionButton: {\r\n        marginLeft: '80%'\r\n    }\r\n}","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader, Typography } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Loading from '../lib/LoadingComponent';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst AddSkillComponent = (props) => {\r\n    let { model } = props;\r\n    let display = (props && props.editMode) ? 'block' : 'none';\r\n    return (\r\n        <Card style={{padding: \"4%\"}}>\r\n        {!model && <Loading />} \r\n        {model &&    \r\n            <form  noValidate autoComplete=\"off\">\r\n                <CardHeader \r\n                avatar={\r\n                    <Avatar aria-label=\"Recipe\" style={styles.avatar}>\r\n                       <AddIcon />\r\n                    </Avatar>\r\n                    }\r\n                    title=\"Add Skill\">\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                        <TextField\r\n                            id=\"outlined-name\"\r\n                            label=\"Skill\"\r\n                            value={model.skill}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'skill', props.model)}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <br></br>\r\n                </CardContent>\r\n                <CardActions style={styles.actionButton}>\r\n                    <Button variant=\"contained\" size=\"large\" color=\"primary\" \r\n                                onClick={ () => props.onSubmit(props.model) }>\r\n                        Submit\r\n                    </Button>\r\n                </CardActions>\r\n            </form>}\r\n        </Card>\r\n    );\r\n}\r\nexport default AddSkillComponent;\r\nconst styles={\r\n    formControl: {\r\n        width: '90%'\r\n    },\r\n    actionButton: {\r\n        marginLeft: '70%'\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n}","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport List from '@material-ui/core/List';\r\nimport { CardHeader, CardContent, IconButton } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListIcon from '@material-ui/icons/ViewHeadline';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nconst SkillList = (props) => {\r\n        console.log(props);\r\n        return (\r\n            <Card style={{padding: \"4%\"}}>\r\n                <CardHeader \r\n                    avatar={\r\n                        <Avatar aria-label=\"Recipe\" style={styles.avatar}>\r\n                            <ListIcon />\r\n                        </Avatar>\r\n                    }    \r\n                    action={\r\n                        <IconButton onClick={() => props.onSearchEnable()}>\r\n                            {!props.searchEnabled && <SearchIcon />}\r\n                            {props.searchEnabled && <CloseIcon />}\r\n                        </IconButton>\r\n                    }            \r\n                    title={`Skills ${props.skills ? \"(\"+props.skills.length+\")\" : \"\" }`}>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    {\r\n                        <Collapse in={props.searchEnabled}>\r\n                        <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                            <TextField\r\n                                id=\"outlined-name\"\r\n                                label=\"Search\"\r\n                                placeholder=\"Enter search text here\"\r\n                                value={props.searchTerm}\r\n                                onChange={(e) => props.onSearchSkill(e.target.value)}\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormControl>\r\n                        </Collapse>\r\n                    }\r\n                    <List dense={true}>\r\n                        {props.skills && props.skills.length > 0\r\n                        && props.skills.map((skillItem, index) => {\r\n                            let item = skillItem.skill_meta;\r\n                            return(\r\n                            <Chip label={item.skill} key={skillItem.id}\r\n                                style={styles.chip}\r\n                                avatar={\r\n                                    <Avatar>\r\n                                        {item.skill ? item.skill[0] : 'S'}\r\n                                    </Avatar>   \r\n                                }/>\r\n                            )\r\n                        })}\r\n                        \r\n                    </List>\r\n                {(!props.skills || props.skills.length === 0) &&\r\n                <Typography variant=\"h6\" align=\"center\">\r\n                    There are currently no skills added\r\n                </Typography>}\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n}\r\n\r\nexport default SkillList;\r\n\r\nconst styles = {\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    },\r\n    formControl: {\r\n        width: '70%'\r\n    },\r\n    chip: {\r\n        margin: 10\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AddSkillComponent from '../components/Skills/AddSkill';\r\nimport SkillList from '../components/Skills/SkillList';\r\nimport {    AddSkill, FetchSkills,\r\n            CloseSnackbar, CurrentSkillFieldChange,\r\n            OpenSnackbar,\r\n            BeginSearch, SearchSkill } from '../actions/SkillActions';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SnackbarComponent from '../components/lib/SnackbarComponent';\r\n\r\nclass SkillContainer extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        console.log('did mount');\r\n        this.reload();\r\n    }\r\n\r\n    componentWillUpdate = () => {\r\n     console.log('container updated');\r\n        if(this.props.success_message !== '') {\r\n            this.props.FetchSkills();\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (newprops, oldprops) => {\r\n        console.log('receiving props');\r\n        console.log(newprops);\r\n        if(newprops.success_message !== '') {\r\n            this.props.FetchSkills();\r\n            this.props.OpenSnackbar();\r\n        }\r\n    }\r\n\r\n    reload = () => {\r\n        this.props.FetchSkills();\r\n    }\r\n\r\n    render = () => {\r\n        console.log('container render');\r\n        console.log(this.props);\r\n        let skills = [];\r\n        if(this.props.search_enabled) {\r\n            skills = this.props.filteredSkills;\r\n        }\r\n        else {\r\n            skills = this.props.skillList;\r\n        }\r\n        return(\r\n            <Grid container spacing={16}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AddSkillComponent \r\n                        onSubmit={ (model) => this.props.AddSkill(model, this.props.editMode) }\r\n                        model={this.props.current_skill}\r\n                        onAdd={() => this.reload()}\r\n                        onFieldChange={ (val, field, model) => this.props.CurrentSkillFieldChange(val, field, model) } />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <SkillList skills={skills} \r\n                        onSearchEnable={ () => this.props.BeginSearch() } \r\n                        searchEnabled={this.props.search_enabled}\r\n                        searchTerm={this.props.search_term}\r\n                        onSearchSkill={ (searchTerm) => this.props.SearchSkill(searchTerm, this.props.skillList) }/>\r\n                </Grid>\r\n                <SnackbarComponent \r\n                    openSnack={this.props.snack_open} handleClose={() => this.props.CloseSnackbar()} \r\n                    snackMessage={\"Data Saved Successfully!\"} \r\n                    /> \r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.skillReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    AddSkill: (model, editMode) => dispatch(AddSkill(model, editMode)),\r\n    FetchSkills: () => dispatch(FetchSkills()),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    BeginSearch: () => dispatch(BeginSearch()),\r\n    SearchSkill: (searchTerm, categoryList) => dispatch(SearchSkill(searchTerm, categoryList)),\r\n    CurrentSkillFieldChange: (val, field, model) => dispatch(CurrentSkillFieldChange(val, field, model))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SkillContainer);","import axios from 'axios';\r\nimport config from '../config';\r\nimport repository from '../repository';\r\n\r\nexport const ADD_SKILL_BEGIN = 'ADD_SKILL_BEGIN';\r\nexport const ADD_SKILL_SUCCESS = 'ADD_SKILL_SUCCESS';\r\nexport const ADD_SKILL_FAIL = 'ADD_SKILL_FAIL';\r\nexport const SKILL_SEARCH_BEGIN = 'SKILL_SEARCH_BEGIN';\r\nexport const SKILL_SEARCH_SUCCESS = 'SKILL_SEARCH_SUCCESS';\r\nexport const CURRENT_SKILL_FIELD_CHANGE = 'CURRENT_SKILL_FIELD_CHANGE';\r\nexport const CURRENT_SKILL_FIELD_CHANGE_END = 'CURRENT_SKILL_FIELD_CHANGE_END';\r\nexport const FETCH_SKILLS_BEGIN = 'FETCH_SKILLS_BEGIN';\r\nexport const FETCH_SKILLS_SUCCESS = 'FETCH_SKILLS_SUCCESS';\r\nexport const FETCH_SKILLS_FAIL = 'FETCH_SKILLS_FAIL';\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\r\nexport const OPEN_SNACKBAR = 'OPEN_SNACKBAR';\r\n\r\nexport const CurrentSkillFieldChange = (val, field, model) => dispatch => {\r\n    switch(field)\r\n    {\r\n        case 'skill':\r\n        {\r\n            model.skill_meta.skill = val;\r\n            dispatch({\r\n                type: CURRENT_SKILL_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n    }\r\n    dispatch({\r\n        type: CURRENT_SKILL_FIELD_CHANGE_END\r\n    });\r\n}\r\n\r\nexport const AddSkill = (skillModel) => dispatch => {\r\n    dispatch({\r\n        type: ADD_SKILL_BEGIN\r\n    });\r\n    let url = config.instance.getAdminApiUrl() + 'skill';\r\n    repository.saveData(url, skillModel)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: ADD_SKILL_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: ADD_SKILL_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n\r\n}\r\n\r\nexport const BeginSearch = () => dispatch => {\r\n    dispatch({\r\n        type: SKILL_SEARCH_BEGIN\r\n    });\r\n}\r\n\r\nexport const SearchSkill = (searchTerm, skillList) => dispatch => {\r\n    if(skillList && skillList.length > 0) {\r\n        let filteredSkills = skillList.filter((item) => {\r\n            return (\r\n                    item.skill &&\r\n                    item.skill.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1\r\n                    );\r\n        });\r\n        if(filteredSkills && filteredSkills.length > 0) {\r\n            dispatch({\r\n                type: SKILL_SEARCH_SUCCESS,\r\n                payload: {\r\n                    filteredSkills,\r\n                    searchTerm\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            dispatch({\r\n                type: SKILL_SEARCH_SUCCESS,\r\n                payload: {\r\n                    filteredSkills: [],\r\n                    searchTerm\r\n                }\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        dispatch({\r\n            type: SKILL_SEARCH_SUCCESS,\r\n            payload: {\r\n                filteredSkills: [],\r\n                searchTerm\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const FetchSkills = () => dispatch => {\r\n    dispatch({\r\n        type: FETCH_SKILLS_BEGIN\r\n    });\r\n    let url = config.instance.getAdminApiUrl() + 'getAllSkills';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: FETCH_SKILLS_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_SKILLS_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const CloseSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: CLOSE_SNACKBAR\r\n    });\r\n}\r\nexport const OpenSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: OPEN_SNACKBAR\r\n    });\r\n}\r\n","import config from '../config';\r\nimport repository from '../repository';\r\n\r\nexport const ADD_QUESTION_TO_TEST = 'ADD_QUESTION_TO_TEST';\r\nexport const PUBLISH_TEST_SUCCESS = 'PUBLISH_TEST_SUCCESS';\r\nexport const PUBLISH_TEST_FAIL = 'PUBLISH_TEST_FAIL';\r\nexport const FETCH_TEST_SUCCESS = 'FETCH_TEST_SUCCESS';\r\nexport const FETCH_TEST_FAIL = 'FETCH_TEST_FAIL';\r\nexport const FETCH_TEST_MCQS_SUCCESS = 'FETCH_TEST_MCQS_SUCCESS';\r\nexport const FETCH_TEST_MCQS_FAIL = 'FETCH_TEST_MCQS_FAIL';\r\nexport const FETCH_TEST_CANDIDATES_SUCCESS = 'FETCH_TEST_CANDIDATES_SUCCESS';\r\nexport const FETCH_TEST_CANDIDATES_FAIL = 'FETCH_TEST_CANDIDATES_FAIL';\r\nexport const TEST_PUBLISHED = 'TEST_PUBLISHED';\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\r\nexport const OPEN_SNACKBAR = 'OPEN_SNACKBAR';\r\n\r\nvar history = {};\r\nexport const SetHistory = (propsHistory) => dispatch => {\r\n    history = propsHistory;\r\n}\r\n\r\nexport const FetchTest = (testId) => dispatch => {\r\n    let url = config.instance.getAdminApiUrl() + 'getTest' + '?testId=' + testId;\r\n    repository.getData(url, history)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: FETCH_TEST_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_TEST_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const LoadTestMcqs = (testId) => dispatch => {\r\n    let url = config.instance.getAdminApiUrl() + `getMcqsByTestId?testId=${testId}`;\r\n    repository.getData(url)\r\n            .then((res) => {\r\n                dispatch({\r\n                    type: FETCH_TEST_MCQS_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            }).catch((err) => {\r\n                dispatch({\r\n                    type: FETCH_TEST_MCQS_FAIL,\r\n                    payload: err\r\n                })  \r\n            });\r\n}\r\n\r\nexport const LoadTestCandidates = (testId) => dispatch => {\r\n    let url = config.instance.getAdminApiUrl() + `getCandidatesByTestId?testId=${testId}`;\r\n    repository.getData(url)\r\n            .then((res) => {\r\n                dispatch({\r\n                    type: FETCH_TEST_CANDIDATES_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            }).catch((err) => {\r\n                dispatch({\r\n                    type: FETCH_TEST_CANDIDATES_FAIL,\r\n                    payload: err\r\n                })  \r\n            });\r\n}\r\n\r\nexport const AddMcqToTest = (mcqItem, testModel) => dispatch => {\r\n    return new Promise((resolve, reject) => {\r\n        let url = config.instance.getAdminApiUrl() + 'test';\r\n        \r\n        if(!testModel.test_meta.selectedMcqs){\r\n            testModel.test_meta.selectedMcqs = [];\r\n        }\r\n        let mcqList = testModel.test_meta.selectedMcqs;\r\n        let filterIndex = testModel.test_meta.selectedMcqs.findIndex(item => item.id === mcqItem.id);\r\n        if(filterIndex !== undefined && filterIndex > -1) {\r\n            return;\r\n        }\r\n        else {\r\n            testModel.test_meta.selectedMcqs.push({\r\n                mcqId: mcqItem.id\r\n            });\r\n        }\r\n        repository.updateData(url, testModel, history)\r\n            .then((res) => {\r\n                dispatch({\r\n                    type: ADD_QUESTION_TO_TEST,\r\n                    payload: res.data\r\n                });\r\n                resolve(true);\r\n            })\r\n            .catch((err) => {\r\n                reject(err);\r\n            });\r\n\r\n    })\r\n}\r\n\r\nexport const RemoveMcqFromTest = (mcqItem, testModel) => dispatch => {\r\n    let url = config.instance.getAdminApiUrl() + 'test';\r\n    \r\n    if(!testModel.test_meta.selectedMcqs){\r\n        testModel.test_meta.selectedMcqs = [];\r\n    }\r\n    let mcqList = testModel.test_meta.selectedMcqs;\r\n    let filterIndex = testModel.test_meta.selectedMcqs.findIndex(item => {\r\n        return item.mcqId === mcqItem.id\r\n    });\r\n    if(filterIndex !== undefined && filterIndex > -1) {\r\n        testModel.test_meta.selectedMcqs.splice(filterIndex, 1);\r\n    }\r\n    else {\r\n        return;\r\n    }\r\n    repository.updateData(url, testModel, history)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: ADD_QUESTION_TO_TEST,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n\r\n        })\r\n}\r\n\r\nexport const PublishTest = (testModel) => dispatch => {\r\n    \r\n    let url = config.instance.getAdminApiUrl() + 'test';\r\n    testModel.test_meta.status = 'published';\r\n    repository.updateData(url, testModel, history)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: TEST_PUBLISHED,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: PUBLISH_TEST_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n    \r\n}\r\n\r\nexport const CloseSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: CLOSE_SNACKBAR\r\n    });\r\n}\r\nexport const OpenSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: OPEN_SNACKBAR\r\n    });\r\n}\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport { Typography, Avatar } from '@material-ui/core';\r\n\r\nconst AnswerOptions = (props) => {\r\n        return (\r\n            <div>\r\n                <Typography variant=\"caption\">Choices</Typography>\r\n                <List dense={true}>\r\n                        {props.choices && props.choices.length > 0\r\n                        && props.choices.map((item, index) => {\r\n                            return(\r\n                            <ListItem key={index}\r\n                                divider={true}\r\n                                button={false} onClick={ () => props.onChoiceSelect && props.onChoiceSelect(item) }\r\n                            >\r\n                            <ListItemIcon>\r\n                                <Avatar>\r\n                                    {item.key}\r\n                                </Avatar>\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                primary={item.content}\r\n                                secondary={item.isCorrect ? 'Correct' : 'Wrong'}\r\n                                />\r\n                            </ListItem>)\r\n                        })}\r\n                        \r\n                </List>\r\n\r\n            </div>\r\n        );\r\n}\r\nexport default AnswerOptions;","import React, { Component } from 'react';\r\nimport { Card, CardContent, CardActions, ListItem, ListItemText, \r\n        ListItemSecondaryAction, IconButton, Slide,\r\n        Dialog, DialogTitle, DialogContent, Divider,\r\n        Typography, \r\n        DialogActions,\r\n        Button,\r\n        Checkbox} from '@material-ui/core';\r\nimport { AddBox, Close, Remove, Edit, Delete } from '@material-ui/icons';\r\nimport AnswerOptions from '../../components/Mcq/AnswerOptions';\r\n\r\nconst Transition = (props) => {\r\n    return <Slide direction=\"up\" {...props} />\r\n}\r\n\r\nclass McqItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n    \r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        console.log('handle close');\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.props.onDeleteMcq();\r\n        this.setState({ open: false });\r\n    }\r\n\r\n    handleChange = (mcq) => {\r\n        console.log('selected', mcq);\r\n        this.props.markForDeletion(mcq);\r\n    }\r\n\r\n    render = () => {\r\n        let { mcqItem, isSelectable, isEditable, \r\n                isDeletable, isChecked } = this.props;\r\n        let mcq = mcqItem ? mcqItem.mcq_meta : null; \r\n        // console.log(`mcq: ${JSON.parse(mcqItem.mcq_meta)}`);\r\n\r\n        return (\r\n            <div>\r\n            \r\n            {mcq && \r\n                <ListItem \r\n                    divider={true} \r\n                    onClick={this.handleClickOpen}\r\n                    button={true}\r\n                    >\r\n                    <ListItemText \r\n                                primary={ mcq.question }\r\n                                secondary={ `${mcq.category} - ${mcq.skill} ` } >\r\n                    </ListItemText>\r\n                    {isSelectable && \r\n                    <ListItemSecondaryAction>\r\n                        <IconButton onClick={() => this.props.onAddMcqToTest()}>\r\n                            {!mcq.selected && \r\n                            <AddBox fontSize=\"large\" color=\"secondary\" />\r\n                            }\r\n                        </IconButton>\r\n                    </ListItemSecondaryAction>}\r\n                    {isDeletable &&\r\n                    <ListItemSecondaryAction>\r\n                        <IconButton onClick={() => this.props.onRemoveMcqFromTest()}>\r\n                            <Remove fontSize=\"large\" color=\"secondary\" />\r\n                        </IconButton>\r\n                    </ListItemSecondaryAction>}\r\n                    {isEditable && \r\n                    <ListItemSecondaryAction>\r\n                        <Checkbox checked={isChecked} onChange={() => this.handleChange(mcq)} value=\"checkedA\" />\r\n                        <IconButton onClick={() => this.props.onEditClick(mcq)}>\r\n                            <Edit fontSize=\"small\" color=\"secondary\" />\r\n                        </IconButton>\r\n                    </ListItemSecondaryAction>}\r\n                </ListItem>\r\n            }\r\n            {mcq &&\r\n                <Dialog\r\n                    TransitionComponent={Transition}\r\n                    fullScreen\r\n                    style={{left: '20%', right: '20%', top: '10%', bottom: '10%' }}\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <DialogTitle onClose={this.handleClose}>\r\n                        <Typography variant=\"caption\">\r\n                            {mcq.question}\r\n                        </Typography>\r\n                        <Typography variant=\"caption\">\r\n                            {`${mcq.category} - ${mcq.skill}`}\r\n                        </Typography>\r\n                        <IconButton onClick={this.handleClose} style={{right: '4%', top: '1%', position:'absolute'}}>\r\n                            <Close />\r\n                        </IconButton>\r\n                    </DialogTitle>\r\n                    <Divider />\r\n                    <DialogContent style={{padding: '4%'}}>\r\n                        <p>{mcq.description}</p>\r\n                        <AnswerOptions choices={mcq.choices}/>\r\n                    </DialogContent>\r\n                    {isEditable &&\r\n                    <DialogActions>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={this.handleDelete} >\r\n                            Delete\r\n                        </Button>\r\n                    </DialogActions>\r\n                    }\r\n                </Dialog>\r\n            }\r\n            </div>\r\n                \r\n        );  \r\n    }\r\n}\r\nexport default McqItem;","import React from 'react';\r\nimport { Typography, List } from '@material-ui/core';\r\nimport McqItem from './McqItem';\r\n\r\nclass SelectedMcqs extends React.Component {\r\n\r\n    sortMcqs = (mcqs) => {\r\n        return mcqs.sort((a, b) => b.questionOrderIndex - a.questionOrderIndex);\r\n    }\r\n\r\n    render = () => {\r\n        let { selectedMcqs } = this.props;\r\n        let orderedSelectedMcqs = [];\r\n        if(selectedMcqs){\r\n            orderedSelectedMcqs = this.sortMcqs(selectedMcqs);\r\n        }\r\n        return (\r\n            <div>\r\n            {orderedSelectedMcqs && orderedSelectedMcqs.length > 0 &&\r\n                <List>\r\n                    {orderedSelectedMcqs.map((item, index) => {\r\n                        return (\r\n                            <McqItem mcqItem={item}  key={index}\r\n                                        onSelect={ () => this.props.openMcq(item) }\r\n                                        onRemoveMcqFromTest={ () => this.props.onRemoveMcqFromTest(item) }\r\n                                        isDeletable={true}\r\n                                        isSelectable={false} />\r\n                        );\r\n                    })}\r\n                </List>\r\n            }\r\n            {!selectedMcqs && \r\n                <Typography variant=\"subtitle1\">No questions selected</Typography>\r\n            }\r\n            {selectedMcqs && selectedMcqs.length === 0 && \r\n                <Typography variant=\"subtitle1\">No questions selected</Typography>\r\n            }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SelectedMcqs;","import React, { Component } from 'react';\r\nimport { Dialog, DialogContent, DialogTitle,\r\n    Divider, DialogActions, Card, CardHeader, Button, IconButton, CardContent, Slide, List, Typography } from '@material-ui/core';\r\nimport config from '../../config';\r\nimport axios from 'axios';\r\nimport McqItem from './McqItem';\r\nimport { Close } from '@material-ui/icons';\r\nimport repository from '../../repository';\r\n\r\nconst Transition = (props) => {\r\n    return <Slide direction=\"left\" {...props} />\r\n}\r\n\r\nclass McqSelector extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n            mcqList: [],\r\n            error: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n            \r\n        let url = config.instance.getAdminApiUrl() + 'getAllMcqs';\r\n        repository.getData(url)\r\n            .then((res) => {\r\n                console.log('MCQ fetched');\r\n                this.setState({\r\n                    mcqList: res.data,\r\n                    error: ''\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                this.setState({\r\n                    error: err\r\n                });\r\n            });\r\n    }\r\n\r\n    onSelectMcqItem = (mcqItem) => {\r\n        this.props.onSelectMcq(mcqItem);\r\n    }\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        console.log('handle close');\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    render = () => {\r\n        let { onAddMcqToTest, selectedMcqs } = this.props;\r\n        let { mcqList } = this.state;\r\n        if(selectedMcqs && selectedMcqs.length > 0) {\r\n            selectedMcqs.map((item, index) => {\r\n            })\r\n        }\r\n        return (\r\n            <div>\r\n            <Card>   \r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>Add Mcq To Test</Button>\r\n                <Dialog\r\n                TransitionComponent={Transition}\r\n                fullScreen\r\n                style={{left: '20%'}}\r\n                open={this.state.open}\r\n                onClose={this.handleClose}\r\n                >\r\n                    <DialogTitle onClose={this.handleClose}>\r\n                        <Typography variant=\"title\">\r\n                            Select MCQ to Add\r\n                        </Typography>\r\n                        <IconButton onClick={this.handleClose} style={{right: '4%', top: '1%', position:'absolute'}}>\r\n                            <Close />\r\n                        </IconButton>\r\n                    </DialogTitle>\r\n                    <Divider />\r\n                    <DialogContent style={{padding: '4%'}}>\r\n                    <List>\r\n                        {mcqList && mcqList.length > 0 &&\r\n                        mcqList.map((item, index) => {\r\n                            if(selectedMcqs && selectedMcqs.findIndex(mcq => {\r\n                                return (mcq.id == item.id) || (mcq.id === item.id)\r\n                            }) > -1) {\r\n                                item.selected = true;\r\n                            } else {\r\n                                item.selected = false;\r\n                            }\r\n                            return (\r\n                            <McqItem    mcqItem={item} key={index}\r\n                                        onAddMcqToTest={() => this.props.onSelectMcq(item) } \r\n                                        isSelectable={true}\r\n                                        isEditable={false} />\r\n                            );\r\n                        })}\r\n                    </List>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </Card>\r\n        \r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default McqSelector;","import React, { Component } from 'react';\r\nimport { Card, CardHeader, Button, IconButton, CardContent } from '@material-ui/core';\r\nimport { AddBox } from '@material-ui/icons';\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom';\r\nimport SelectedMcqs from './SelectedMcqs';\r\nimport McqSelector from'./McqSelector';\r\n\r\nclass TestConsoleQuestions extends Component {\r\n\r\n    render = () => {\r\n        let { selectedMcqs, currentTest } = this.props;\r\n        return (\r\n            <Card>\r\n                {currentTest && currentTest.test_meta.status==='draft' &&\r\n                <CardHeader action={\r\n                    <McqSelector \r\n                        onSelectMcq={(mcqItem) => this.props.onSelectMcq(mcqItem)} \r\n                        selectedMcqs={selectedMcqs}\r\n                        />\r\n                }\r\n                />\r\n                }\r\n                <CardContent>\r\n                    <SelectedMcqs\r\n                        onRemoveMcqFromTest={(mcqItem) => this.props.onRemoveMcqFromTest(mcqItem) } \r\n                        selectedMcqs={selectedMcqs} />\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\nexport default TestConsoleQuestions;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { PersonAdd } from '@material-ui/icons';\r\nimport LoadingComponent from '../../components/lib/LoadingComponent';\r\nimport { Typography } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst InviteList = (props) => {\r\n    let { invitations } = props;\r\n    console.log('invitations', invitations);\r\n    return (\r\n                <div>\r\n                {!invitations && <LoadingComponent /> }\r\n                {invitations && invitations.length === 0 && <Typography align=\"center\" variant=\"subtitle1\">No Invitations Found </Typography> }\r\n                {invitations && invitations.length > 0 && \r\n                <Table>\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <CustomTableCell>Test</CustomTableCell>\r\n                        <CustomTableCell align=\"left\">Candidate Name</CustomTableCell>\r\n                        <CustomTableCell align=\"left\">Status</CustomTableCell>\r\n                        <CustomTableCell align=\"left\">Invited On</CustomTableCell>\r\n                        <CustomTableCell align=\"left\">Completed On</CustomTableCell>\r\n                        <CustomTableCell align=\"left\">Results</CustomTableCell>\r\n                        {/* <CustomTableCell align=\"left\">Send Reminder</CustomTableCell> */}\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {invitations.map((invitation, index) => (\r\n                        <TableRow key={index}>\r\n                            <CustomTableCell component=\"th\" scope=\"row\">\r\n                                <Link to={ {pathname: \"/testConsole\", state: { testId: invitation.testId } }}>\r\n                                    {invitation.testName}\r\n                                </Link>\r\n                            </CustomTableCell>\r\n                            <CustomTableCell align=\"left\">{invitation.candidateName}</CustomTableCell>\r\n                            <CustomTableCell align=\"left\">{invitation.invitationStatus}</CustomTableCell>\r\n                            <CustomTableCell align=\"left\">{invitation.invitedOn}</CustomTableCell>\r\n                            <CustomTableCell align=\"left\">{invitation.completedOn}</CustomTableCell>\r\n                            <CustomTableCell align=\"left\">\r\n                                {\r\n                                    invitation.result && \r\n                                        invitation.result.indexOf('CLEARED') > -1 &&\r\n                                        <Typography color=\"primary\">{invitation.result}</Typography>\r\n                                }\r\n                                {\r\n                                    invitation.result && \r\n                                        invitation.result.indexOf('FAILED') > -1 &&\r\n                                        <Typography color=\"secondary\">{invitation.result}</Typography>\r\n                                }\r\n                                {\r\n                                    invitation.invitationStatus &&\r\n                                        invitation.invitationStatus.indexOf(\"INIT\") > -1 &&\r\n                                        <Typography>Not Taken</Typography>\r\n                                }\r\n                                {   \r\n                                    !invitation.result &&\r\n                                        (invitation.invitationStatus &&\r\n                                        invitation.invitationStatus.indexOf(\"COMPLETED\") > -1) &&\r\n                                    <Button color=\"primary\" size=\"small\" variant=\"contained\"\r\n                                       onClick={() => props.evaluateResults(invitation.responseId)} >Evaluate</Button>    \r\n                                }\r\n                            </CustomTableCell>\r\n                            {/* <CustomTableCell align=\"center\" scope=\"row\" component=\"th\">\r\n                                <Link to={ {pathname: \"/inviteConsole\", state: { testId: invitation.testId } }}>\r\n                                    <PersonAdd />\r\n                                </Link>\r\n                            </CustomTableCell> */}\r\n                        </TableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>\r\n                }\r\n            </div>\r\n        );\r\n}\r\nconst CustomTableCell = withStyles(theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nexport default InviteList;","import React, { Component } from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport { Card, CardHeader, CardContent } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport InviteList from '../InviteConsole/InviteList';\r\n\r\nclass TestConsoleCandidates extends Component {\r\n\r\n    render = () => {\r\n        let { candidates } = this.props;\r\n        return (\r\n            <InviteList\r\n                invitations={candidates}\r\n                />\r\n        )\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Typography variant=\"subtitle1\">No Invitations Sent</Typography> \r\n            </div> \r\n        )\r\n\r\n    }\r\n}\r\nconst CustomTableCell = withStyles(theme => ({\r\n    head: {\r\n      backgroundColor: '#3f51b5',\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst StyledTableCell = withStyles(theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n  \r\n  const StyledTableRow = withStyles(theme => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.background.default,\r\n      },\r\n    },\r\n}))(TableRow);\r\nexport default TestConsoleCandidates;","import React, { Component } from 'react';\r\n\r\nclass TestConsoleSettings extends Component {\r\n\r\n    render = () => {\r\n        return (\r\n            <div>WIP</div>\r\n        );\r\n    }\r\n}\r\nexport default TestConsoleSettings;","import React, { Component } from 'react';\r\nimport { AppBar, Tabs, Tab, Typography, Button } from '@material-ui/core';\r\nimport TestConsoleQuestions from './TestConsoleQuestions';\r\nimport TestConsoleCandidates from './TestConsoleCandidates';\r\nimport TestConsoleSettings from './TestConsoleSettings';\r\n\r\nclass TestConsoleTabs extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: 0\r\n        };\r\n    }\r\n\r\n    handleChange = (event, value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    render = () => {\r\n        let { value } = this.state;\r\n        let { tabs, selectedMcqs, currentTest, candidates } = this.props;\r\n        return(\r\n        <div>\r\n            <AppBar position=\"static\">\r\n                <Tabs variant=\"fullWidth\" value={value} onChange={this.handleChange}>\r\n                    <LinkTab label=\"Questions\" href=\"page1\" />\r\n                    <LinkTab label=\"Candidates\" href=\"page2\" />\r\n                    <LinkTab label=\"Settings\" href=\"page3\" />\r\n                </Tabs>\r\n            </AppBar>\r\n            {value === 0 && \r\n            <TabContainer>\r\n                <TestConsoleQuestions   \r\n                            selectedMcqs={selectedMcqs} \r\n                            onSelectMcq={ (mcqItem) => this.props.onAddMcqToTest(mcqItem) } \r\n                            onRemoveMcqFromTest={ (mcqItem) => this.props.onRemoveMcqFromTest(mcqItem) } \r\n                            currentTest={currentTest}\r\n                            /> \r\n            </TabContainer>}\r\n            {value === 1 && \r\n            <TabContainer>\r\n                <TestConsoleCandidates \r\n                    candidates={candidates}\r\n                /> \r\n            </TabContainer>}\r\n            {value === 2 && \r\n            <TabContainer>\r\n                <TestConsoleSettings /> \r\n            </TabContainer>}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst TabContainer = (props) => {\r\n    return (\r\n      <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n        {props.children}\r\n      </Typography>\r\n    );\r\n}\r\n\r\nconst LinkTab = (props) => {\r\n    return <Tab component=\"a\" onClick={event => event.preventDefault()} {...props} />;\r\n}\r\nexport default TestConsoleTabs;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {    FetchTest, AddMcqToTest, PublishTest, CloseSnackbar, SetHistory,\r\n    RemoveMcqFromTest, LoadTestMcqs, LoadTestCandidates, OpenSnackbar } from '../../actions/TestConsoleActions';            \r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SnackbarComponent from '../../components/lib/SnackbarComponent';\r\nimport TestConsoleTabs from './TestConsoleTabs';\r\nimport { Button, Card, CardHeader } from '@material-ui/core';\r\nimport TestConsoleQuestions from './TestConsoleQuestions';\r\nimport LoadingComponent from '../../components/lib/LoadingComponent';\r\nimport { KeyboardBackspace } from '@material-ui/icons';\r\n\r\nclass TestConsoleContainer extends React.Component {\r\n    \r\n    componentDidMount = () => {\r\n        this.props.SetHistory(this.props.history);\r\n        this.reload();\r\n    }\r\n\r\n    componentWillReceiveProps = (newprops, oldprops) => {\r\n        if(newprops.success_message !== '' && newprops.success_message !== undefined) {\r\n        }\r\n    }\r\n\r\n    reload = () => {\r\n        let { state } = this.props.location;\r\n        if(state){\r\n            this.props.FetchTest(state.testId, this.props.history);\r\n            this.props.LoadTestMcqs(state.testId);\r\n            this.props.LoadTestCandidates(state.testId);\r\n        }\r\n    }\r\n\r\n    onAddTest = (model) => {\r\n        this.props.AddTest(model, this.props.editMode)\r\n    }\r\n\r\n    onAddMcqToTest = (mcqItem) => {\r\n        let { current_test } = this.props;\r\n        this.props.AddMcqToTest(mcqItem, this.props.current_test)\r\n                .then((res) => {\r\n                    this.props.LoadTestMcqs(current_test.id);  \r\n                });\r\n    }\r\n    \r\n    onRemoveMcqFromTest = (mcqItem) => {\r\n        this.props.RemoveMcqFromTest(mcqItem, this.props.current_test);\r\n    }\r\n\r\n    onPublish = () => {\r\n        this.props.PublishTest(this.props.current_test);\r\n        this.reload();\r\n    }\r\n\r\n    render = () => {\r\n        let { current_test, selectedMcqs, candidates } = this.props;\r\n        if(current_test && current_test.selectedMcqs) {\r\n            console.log(current_test.selectedMcqs);\r\n        }\r\n        return(\r\n            <Grid container spacing={16}>\r\n                <Grid item xs={12} sm={12}>\r\n                {!current_test && <LoadingComponent />}\r\n                {current_test &&\r\n                <Card>\r\n                    <CardHeader action={\r\n                        <div>\r\n                        {current_test.test_meta.status === 'draft' && \r\n                        current_test.test_meta.selectedMcqs && \r\n                        current_test.test_meta.selectedMcqs.length > 0 &&\r\n                        <Button style={styles.headerButton} variant=\"contained\" color=\"primary\" size=\"small\"\r\n                                onClick={this.onPublish}\r\n                        >Publish</Button>}\r\n                        <Link style={styles.headerButton} href=\"#\" onClick={() => this.props.history.goBack()}>\r\n                            Back To Tests\r\n                        </Link>\r\n                        </div>\r\n                    }\r\n                    title={current_test.test_meta.testName}\r\n                     subheader={current_test.test_meta.status!=='draft' ? 'Published' : 'draft'}\r\n                    />\r\n                    <TestConsoleTabs \r\n                        tabs={tabs} \r\n                        onAddMcqToTest={(mcqItem) => this.onAddMcqToTest(mcqItem) }\r\n                        onRemoveMcqFromTest={ (mcqItem) => this.onRemoveMcqFromTest(mcqItem) } \r\n                        selectedMcqs={selectedMcqs} \r\n                        candidates={candidates}\r\n                        currentTest={current_test}\r\n                        />\r\n                </Card>\r\n                }\r\n                <SnackbarComponent \r\n                    openSnack={this.props.snack_open} handleClose={() => this.props.CloseSnackbar()} \r\n                    snackMessage={\"Data Saved Successfully!\"} \r\n                    /> \r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.testConsoleReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    SetHistory: (history) => dispatch(SetHistory(history)),\r\n    AddMcqToTest: (mcqItem, testModel) => dispatch(AddMcqToTest(mcqItem, testModel)),\r\n    RemoveMcqFromTest: (mcqItem, testModel) => dispatch(RemoveMcqFromTest(mcqItem, testModel)),\r\n    PublishTest: (testModel) => dispatch(PublishTest(testModel)),\r\n    FetchTest: (testId, history) => dispatch(FetchTest(testId, history)),\r\n    LoadTestMcqs: (testId) => dispatch(LoadTestMcqs(testId)),\r\n    LoadTestCandidates: (testId) => dispatch(LoadTestCandidates(testId)),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n});\r\nconst tabs = [\r\n    {key: 0, content: '<Button variant=\"container\" color=\"primary\">Page {index}</Button>'},\r\n    {key: 1, content: <TestConsoleQuestions /> },\r\n    {key: 2, content: getButton}\r\n]\r\nconst getButton = (index) => {\r\n    return 'abc'+index;\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TestConsoleContainer);\r\nconst styles = {\r\n    headerButton: {\r\n        marginLeft: '10px'\r\n    }\r\n}","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Grid } from '@material-ui/core';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AnswerOptions from './AnswerOptions';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\n\r\nconst AddAnswerOption = (props) => {\r\n        let { currentAnswer, onAnswerFieldChange, onAnswerAdd, model } = props.children;\r\n        // console.log('add option (model):');\r\n        // console.log(model);\r\n        return (\r\n            <ExpansionPanel>\r\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Grid container spacing={16}>\r\n                    <Grid item xs={6} sm={6}>\r\n                        <Typography variant=\"h6\">Answer Choices</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={5} sm={5}>\r\n                    </Grid>\r\n                    <Grid item xs={1} sm={1}>\r\n                        <Typography variant=\"subtitle1\" >Add Choice</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                    <div style={styles.formControl}>\r\n                    {currentAnswer && \r\n                        <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                            <TextField\r\n                                id=\"outlined-name\"\r\n                                label=\"Description\"\r\n                                multiline\r\n                                rows=\"6\"\r\n                                value={currentAnswer.content}\r\n                                onChange={ (e) => onAnswerFieldChange(e.target.value, 'content', currentAnswer) }\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormControl>\r\n                    }\r\n\r\n                    {currentAnswer && \r\n                        <FormControlLabel style={styles.formControl}\r\n                            control={\r\n                            <Switch\r\n                                // checked={currentAnswer.isCorrect}\r\n                                onChange={ (e) => onAnswerFieldChange(e.target.checked, 'isCorrect', currentAnswer) }\r\n                                value={currentAnswer.isCorrect}\r\n                            />\r\n                            }\r\n                            label=\"Is Correct\"\r\n                        /> \r\n                    }\r\n                    </div>\r\n                    <AnswerOptions choices={model.mcq_meta.choices} />\r\n                </ExpansionPanelDetails>\r\n                <Divider />\r\n                <ExpansionPanelActions>\r\n                <Button variant=\"outlined\" size=\"small\" color=\"primary\" onClick={ () => onAnswerAdd(currentAnswer) } >\r\n                    Add\r\n                </Button>\r\n                </ExpansionPanelActions>\r\n            </ExpansionPanel>\r\n        );\r\n}\r\nexport default AddAnswerOption;\r\nconst styles = {\r\n    formControl: {\r\n        width: '70%'\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst experienceLevel = [\r\n    0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20\r\n];\r\n\r\nclass SelectExperience extends Component{\r\n\r\n    state = {\r\n        open: false,\r\n        min: '',\r\n    };\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        open: false,\r\n        min: 0,\r\n        max: 10\r\n      };\r\n    }\r\n\r\n    // handleChange = (name, event) => {\r\n      handleChange = name => event => {\r\n        // this.setState({ [name]: Number(event.target.value) });\r\n        switch(name)\r\n        {\r\n          case 'min':\r\n          {\r\n            this.setState({\r\n              min: event.target.value\r\n            });\r\n            break;\r\n          }\r\n          case 'max':\r\n          {\r\n            this.setState({\r\n              max: event.target.value\r\n            });\r\n            break;\r\n          }\r\n          default:{}\r\n        }\r\n    };\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n      console.log('submit called');\r\n      this.handleClose();\r\n      this.props.onSubmitExperience(this.state.min, this.state.max);\r\n    }\r\n\r\n    render = () => {\r\n    return (\r\n        <div>\r\n        <Button variant=\"outlined\" onClick={this.handleClickOpen}>Experience Level: {this.state.min} - {this.state.max}</Button>\r\n        <Dialog\r\n          disableBackdropClick\r\n          disableEscapeKeyDown\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n        >\r\n          <DialogTitle>Select Experience Level</DialogTitle>\r\n          <DialogContent>\r\n            <form >\r\n                <br></br>\r\n                <br></br>\r\n              <FormControl style={styles.formControl} variant=\"outlined\" >\r\n                <InputLabel htmlFor=\"min-simple\">Minimum</InputLabel>\r\n                <Select\r\n                  value={this.state.min}\r\n                  onChange={this.handleChange('min')}\r\n                  input={<Input id=\"min-simple\" />}\r\n                >\r\n                {experienceLevel.map((item, index) => {\r\n                  return <MenuItem key={index} value={item}>{item}</MenuItem>\r\n                })}\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl style={styles.formControl} variant=\"outlined\" >\r\n                <InputLabel htmlFor=\"max-simple\">Maximum</InputLabel>\r\n                <Select\r\n                  value={this.state.max}\r\n                  onChange={this.handleChange('max')}\r\n                  input={<Input id=\"max-simple\" />}\r\n                >\r\n                {experienceLevel.map((item, index) => {\r\n                  return <MenuItem key={index} value={item}>{item}</MenuItem>\r\n                })}\r\n                </Select>\r\n              </FormControl>\r\n            </form>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleSubmit} color=\"primary\">\r\n              Ok\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    )\r\n    }\r\n}\r\nconst styles = {\r\n    \r\n      formControl: {\r\n        width:\"45%\", \r\n        marginLeft:\"5%\"\r\n      }\r\n    \r\n};\r\nexport default SelectExperience;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AddAnswerOptionComponent from './AddAnswerOption';\r\nimport SelectExperience from './SelectExperience';\r\nimport LoadingComponent from '../lib/LoadingComponent';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n// import { withRouter } from 'react-router-dom';\r\nimport { KeyboardBackspace } from '@material-ui/icons';\r\n\r\nconst AddMcq = (props) => {\r\n        let { model, editMode } = props;\r\n\r\n        const onSubmitExperience = (min, max) => {\r\n            props.onFieldChange(min, 'minimumExperience', props.model)\r\n            props.onFieldChange(max, 'maximumExperience', props.model)\r\n        }\r\n\r\n        return (\r\n            <Card>\r\n        {!model && <LoadingComponent />} \r\n        {model && model.mcq_meta &&   \r\n                        <form  noValidate autoComplete=\"off\">\r\n                            <CardHeader avatar={\r\n                                <Avatar aria-label=\"Recipe\" style={styles.avatar}>\r\n                                    <AddIcon />\r\n                                </Avatar>\r\n                            }\r\n                            action={\r\n                                <Button color=\"primary\" size=\"large\" variant=\"outlined\"\r\n                                        onClick={() => props.history.goBack() }>\r\n                                    <KeyboardBackspace />\r\n                                </Button>\r\n                            }\r\n                            title={editMode ? \"Edit MCQ\" : \"Add MCQ\"}\r\n                            subheader=\"Multiple Choice Question\">\r\n                            </CardHeader>\r\n                            <CardContent>\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <InputLabel htmlFor=\"outlined-category-simple\">\r\n                                        Category\r\n                                    </InputLabel>\r\n                                    <Select\r\n                                        onChange={(e) => props.onFieldChange(e.target.value, 'category', props.model)}\r\n                                        value={model.mcq_meta.category}\r\n                                        input={\r\n                                        <OutlinedInput\r\n                                            labelWidth={65}\r\n                                            name=\"category\"\r\n                                            id=\"outlined-category-simple\"\r\n                                        />\r\n                                        }>\r\n                                        <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                        </MenuItem>\r\n                                        {props.categories && props.categories.length > 0 &&\r\n                                            props.categories.map((category, index) => {\r\n                                                let item = category.category_meta;\r\n                                            return (\r\n                                                <MenuItem key={index} value={item.title}>{item.title}</MenuItem>\r\n                                            )\r\n                                        })}\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <TextField\r\n                                        id=\"outlined-name\"\r\n                                        label=\"Title\"\r\n                                        className={styles.dense}\r\n                                        value={model.mcq_meta.question}\r\n                                        onChange={(e) => props.onFieldChange(e.target.value, 'question', props.model)}\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <InputLabel\r\n                                        htmlFor=\"outlined-skill-simple\">\r\n                                        Skill\r\n                                    </InputLabel>\r\n                                    <Select\r\n                                        onChange={(e) => props.onFieldChange(e.target.value, 'skill', props.model)}\r\n                                        value={model.mcq_meta.skill}\r\n                                        input={\r\n                                        <OutlinedInput\r\n                                            labelWidth={30}\r\n                                            name=\"skill\"\r\n                                            id=\"outlined-skill-simple\"\r\n                                        />\r\n                                        }>\r\n                                        <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                        </MenuItem>\r\n                                        {props.skills && props.skills.map((skillItem, index) => {\r\n                                            let item = skillItem.skill_meta;\r\n                                            return (\r\n                                                <MenuItem key={index} value={item.skill}>{item.skill}</MenuItem>\r\n                                            )\r\n                                        })}\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <SelectExperience \r\n                                        onSubmitExperience={ (min, max) => onSubmitExperience(min, max) } />\r\n                                </FormControl>\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <TextField\r\n                                        id=\"outlined-name\"\r\n                                        label=\"Score\"\r\n                                        type=\"number\"\r\n                                        className={styles.dense}\r\n                                        value={model.mcq_meta.score}\r\n                                        onChange={(e) => props.onFieldChange(e.target.value, 'score', props.model)}\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <TextField\r\n                                        id=\"outlined-name\"\r\n                                        label=\"Question Description\"\r\n                                        multiline\r\n                                        rows=\"4\"\r\n                                        value={model.mcq_meta.description}\r\n                                        className={styles.dense}\r\n                                        onChange={(e) => props.onFieldChange(e.target.value, 'description', props.model)}\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </FormControl>\r\n                                <AddAnswerOptionComponent>\r\n                                    {props}\r\n                                </AddAnswerOptionComponent>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                            <Button variant=\"contained\" size=\"large\" color=\"primary\" \r\n                                    onClick={ () => props.onSubmit(props.model)}>\r\n                                Submit\r\n                            </Button>\r\n                            </CardActions>\r\n                        </form>\r\n        }\r\n                    </Card>\r\n                   \r\n        );\r\n}\r\nconst styles = {\r\n    formControl: {\r\n        width: '70%',\r\n        marginBottom: '1%'\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n};\r\nexport default AddMcq;","import axios from 'axios';\r\nimport config from '../config';\r\nimport repository from '../repository';\r\nimport { LogoutCurrentUser } from './UserActions';\r\nimport { FETCH_CATEGORIES_SUCCESS, FETCH_CATEGORIES_FAIL } from './CategoryActions';\r\n\r\nexport const ADD_MCQ_BEGIN = 'ADD_MCQ_BEGIN';\r\nexport const ADD_MCQ_SUCCESS = 'ADD_MCQ_SUCCESS';\r\nexport const ADD_MCQ_FAIL = 'ADD_MCQ_FAIL';\r\nexport const MCQ_SEARCH_END = 'MCQ_SEARCH_END';\r\nexport const MCQ_SEARCH_BEGIN = 'MCQ_SEARCH_BEGIN';\r\nexport const MCQ_SEARCH_SUCCESS = 'MCQ_SEARCH_SUCCESS';\r\nexport const UPDATE_MCQ_BEGIN = 'UPDATE_MCQ_BEGIN';\r\nexport const UPDATE_MCQ_SUCCESS = 'UPDATE_MCQ_SUCCESS';\r\nexport const UPDATE_MCQ_FAIL = 'UPDATE_MCQ_FAIL';\r\nexport const DELETE_MCQ_SUCCESS = 'DELETE_MCQ_SUCCESS';\r\nexport const DELETE_MCQ_FAIL = 'DELETE_MCQ_FAIL';\r\nexport const SELECT_MCQ = 'SELECT_MCQ';\r\nexport const CURRENT_MCQ_FIELD_CHANGE = 'CURRENT_MCQ_FIELD_CHANGE';\r\nexport const CURRENT_MCQ_FIELD_CHANGE_END = 'CURRENT_MCQ_FIELD_CHANGE_END';\r\nexport const CURRENT_ANSWER_FIELD_CHANGE = 'CURRENT_ANSWER_FIELD_CHANGE';\r\nexport const CURRENT_ANSWER_FIELD_CHANGE_END = 'CURRENT_ANSWER_FIELD_CHANGE_END';\r\nexport const CHOICE_ADDED_TO_MCQ = 'CHOICE_ADDED_TO_MCQ';\r\nexport const FETCH_MCQ_BEGIN = 'FETCH_MCQ_BEGIN';\r\nexport const FETCH_MCQ_SUCCESS = 'FETCH_MCQ_SUCCESS';\r\nexport const FETCH_MCQ_FAIL = 'FETCH_MCQ_FAIL';\r\nexport const FETCH_SKILLS_SUCCESS = 'FETCH_SKILLS_SUCCESS';\r\nexport const FETCH_SKILLS_FAIL = 'FETCH_SKILLS_FAIL';\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\r\nexport const OPEN_SNACKBAR = 'OPEN_SNACKBAR';\r\n\r\nexport const CurrentMcqFieldChange = (val, field, model) => dispatch => {\r\n    switch(field)\r\n    {\r\n        case 'question':\r\n        {\r\n            model.mcq_meta.question = val;\r\n            dispatch({\r\n                type: CURRENT_MCQ_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'description':\r\n        {\r\n            model.mcq_meta.description = val;\r\n            dispatch({\r\n                type: CURRENT_MCQ_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'category':\r\n        {\r\n            model.mcq_meta.category = val;\r\n            dispatch({\r\n                type: CURRENT_MCQ_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'skill':\r\n        {\r\n            model.mcq_meta.skill = val;\r\n            dispatch({\r\n                type: CURRENT_MCQ_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'minimumExperience':\r\n        {\r\n            model.mcq_meta.minimumExperience = val;\r\n            dispatch({\r\n                type: CURRENT_MCQ_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'maximumExperience':\r\n        {\r\n            model.mcq_meta.maximumExperience = val;\r\n            dispatch({\r\n                type: CURRENT_MCQ_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'score':\r\n        {\r\n            model.mcq_meta.score = val;\r\n            dispatch({\r\n                type: CURRENT_MCQ_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        default:\r\n        {\r\n        }\r\n    }\r\n    dispatch({\r\n        type: CURRENT_MCQ_FIELD_CHANGE_END\r\n    });\r\n}\r\n\r\nexport const CurrentAnswerFieldChange = (val, field, model) => dispatch => {\r\n    switch(field)\r\n    {\r\n        case 'content':\r\n        {\r\n            model.content = val;\r\n            dispatch({\r\n                type: CURRENT_ANSWER_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'isCorrect':\r\n        {\r\n            model.isCorrect = val;\r\n            dispatch({\r\n                type: CURRENT_ANSWER_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        default:\r\n        {\r\n        }\r\n    }\r\n    dispatch({\r\n        type: CURRENT_ANSWER_FIELD_CHANGE_END\r\n    });\r\n}\r\n\r\nexport const AddAnswerChoice = (answerModel, mcqModel) => dispatch => {\r\n    if(mcqModel) {\r\n        if(!mcqModel.mcq_meta.choices && mcqModel.mcq_meta.choices.length === 0) {\r\n            mcqModel.mcq_meta.choices = [];\r\n            answerModel.key = config.instance.OrderedAlphabets[0];\r\n        }\r\n        if(!answerModel.key) {\r\n            let answerKeyIndex = mcqModel.mcq_meta.choices.length === 0 ? 0 : mcqModel.mcq_meta.choices.length; \r\n            answerModel.key = config.instance.OrderedAlphabets[answerKeyIndex];\r\n        }\r\n\r\n\r\n        mcqModel.mcq_meta.choices.push(answerModel);\r\n    }\r\n    dispatch({\r\n        type: CHOICE_ADDED_TO_MCQ,\r\n        payload: mcqModel\r\n    })\r\n}\r\n\r\nexport const AddMcq = (mcqModel) => dispatch => {\r\n    return new Promise((resolve, reject) => {\r\n        dispatch({\r\n            type: ADD_MCQ_BEGIN\r\n        });\r\n        let url = config.instance.getAdminApiUrl() + 'mcq';\r\n        repository.saveData(url, mcqModel)\r\n            .then((res) => {\r\n                dispatch({\r\n                    type: ADD_MCQ_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            })\r\n            .then((res) => {\r\n                resolve(true);\r\n            })\r\n            .catch((err) => {\r\n                dispatch({\r\n                    type: ADD_MCQ_FAIL,\r\n                    payload: err\r\n                });\r\n                reject(err);\r\n            });\r\n\r\n    });\r\n}\r\n\r\nexport const UpdateMcq = (mcqModel) => dispatch => {\r\n    return new Promise((resolve, reject) => {\r\n\r\n        dispatch({\r\n            type: UPDATE_MCQ_BEGIN\r\n        });\r\n        let url = config.instance.getAdminApiUrl() + 'mcq';\r\n        repository.updateData(url, mcqModel)\r\n            .then((res) => {\r\n                dispatch({\r\n                    type: UPDATE_MCQ_SUCCESS\r\n                });\r\n            })\r\n            .then((res) => {\r\n                resolve(true);\r\n            })\r\n            .catch((err) => {\r\n                dispatch({\r\n                    type: UPDATE_MCQ_FAIL,\r\n                    payload: err\r\n                });\r\n                reject(err);\r\n            });\r\n    })\r\n}\r\n\r\nexport const DeleteMcq = (mcqModel) => dispatch => {\r\n    let url = config.instance.getAdminApiUrl() + 'mcq';\r\n    repository.deleteData(url, mcqModel)\r\n        .then((res) => {\r\n            dispatch(FetchMcqs(true));\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: DELETE_MCQ_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const BulkDeleteMcq = (mcqs) => dispatch => {\r\n    let url = config.instance.getAdminApiUrl() + 'bulkmcq';\r\n    let mcqIdsToDelete = [];\r\n    mcqs.map((item, index) => {\r\n        mcqIdsToDelete.push(item.id);\r\n    })\r\n    let data = {\r\n        mcqIdsToDelete: mcqIdsToDelete\r\n    }\r\n    repository.deleteData(url, data)\r\n        .then((res) => {\r\n            dispatch(FetchMcqs(true));\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: DELETE_MCQ_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const BeginSearch = () => dispatch => {\r\n    dispatch({\r\n        type: MCQ_SEARCH_BEGIN\r\n    });\r\n}\r\n\r\nexport const EndSearch = () => dispatch => {\r\n    dispatch({\r\n        type: MCQ_SEARCH_END\r\n    });\r\n}\r\n\r\n export const SearchMcq = (searchTerm, mcqList) => dispatch => {\r\n    if(mcqList && mcqList.length > 0) {\r\n        let filteredCategories = mcqList.filter((mcqItem) => {\r\n            let item = mcqItem.mcq_meta;\r\n            return (\r\n                    item.question &&\r\n                    item.question.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1\r\n                    ) ||\r\n                    (\r\n                        item.description &&\r\n                        item.description.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1);\r\n        });\r\n        if(filteredCategories && filteredCategories.length > 0) {\r\n            dispatch({\r\n                type: MCQ_SEARCH_SUCCESS,\r\n                payload: {\r\n                    filteredCategories,\r\n                    searchTerm\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            dispatch({\r\n                type: MCQ_SEARCH_SUCCESS,\r\n                payload: {\r\n                    filteredCategories: [],\r\n                    searchTerm\r\n                }\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        dispatch({\r\n            type: MCQ_SEARCH_SUCCESS,\r\n            payload: {\r\n                filteredCategories: [],\r\n                searchTerm\r\n            }\r\n        });\r\n    }\r\n }\r\n\r\n export const FetchCategories = () => dispatch => {\r\n    let url = config.instance.getAdminApiUrl() + 'getAllCategories';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: FETCH_CATEGORIES_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_CATEGORIES_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const FetchSkills = () => dispatch => {\r\n    let url = config.instance.getAdminApiUrl() + 'getAllSkills';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: FETCH_SKILLS_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_SKILLS_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const SelectMcq = (mcqModel) => dispatch => {\r\n    dispatch({\r\n        type: SELECT_MCQ,\r\n        payload: mcqModel\r\n    })\r\n}\r\n\r\n\r\nexport const FetchMcqs = (isDeleted) => dispatch => {\r\n    dispatch({\r\n        type: FETCH_MCQ_BEGIN\r\n    });\r\n    let url = config.instance.getAdminApiUrl() + 'getAllMcqs';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            let payload = {\r\n                data: res.data,\r\n                message: 'MCQs fetched successfully'\r\n            };\r\n            if(isDeleted) {\r\n                payload.message = 'MCQ deleted successfully';\r\n            }\r\n            dispatch({\r\n                type: FETCH_MCQ_SUCCESS,\r\n                payload: payload\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            if(err.data && err.data.message === 'Invalid token.') {\r\n                dispatch(LogoutCurrentUser());\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: FETCH_MCQ_FAIL,\r\n                    payload: err.statusText\r\n                });\r\n            }\r\n        });\r\n}\r\n\r\nexport const CloseSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: CLOSE_SNACKBAR\r\n    });\r\n}\r\nexport const OpenSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: OPEN_SNACKBAR\r\n    });\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AddMcqComponent from '../components/Mcq/AddMcq';\r\nimport {    AddMcq, FetchMcqs, UpdateMcq, FetchCategories, FetchSkills, \r\n            CloseSnackbar, CurrentMcqFieldChange, CurrentAnswerFieldChange,\r\n            OpenSnackbar, SelectMcq, AddAnswerChoice,\r\n            BeginSearch, SearchMcq } from '../actions/McqActions';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SnackbarComponent from '../components/lib/SnackbarComponent';\r\n\r\nclass McqContainer extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        this.reload();\r\n    }\r\n\r\n    componentWillUpdate = () => {\r\n        if(this.props.success_message !== '') {\r\n            this.props.FetchCategories();\r\n        }\r\n    }\r\n\r\n    reload = () => {\r\n        this.props.FetchCategories();\r\n        this.props.FetchSkills();\r\n    }\r\n\r\n    onAddMcq = (model) => {\r\n        let { state } = this.props.location;\r\n        let editMode = false;\r\n        if(state && state.mcq) {\r\n            editMode = true;\r\n            this.props.UpdateMcq(model)\r\n                .then((res) => {\r\n                    this.props.history.push('/mcqs');\r\n                });\r\n        }\r\n        else {\r\n            this.props.AddMcq(model)\r\n                    .then((res) => {\r\n                        this.props.history.push('/mcqs');\r\n                    });\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        let { state } = this.props.location;\r\n        let mcq = null;\r\n        if(state && state.mcq) {\r\n            mcq = state.mcq;\r\n        }\r\n        return(\r\n            <Grid container spacing={16}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <AddMcqComponent \r\n                        onSubmit={ (model) => this.onAddMcq(model) }\r\n                        onAnswerAdd={ (model) => this.props.AddAnswerChoice(model, this.props.current_mcq) }\r\n                        // model={this.props.current_mcq}\r\n                        model={mcq ? mcq : this.props.current_mcq}\r\n                        categories={this.props.categories}\r\n                        skills={this.props.skills}\r\n                        currentAnswer={this.props.currentAnswer}\r\n                        editMode={mcq ? true : false}\r\n                        onFieldChange={ (val, field, model) => this.props.CurrentMcqFieldChange(val, field, model) } \r\n                        onAnswerFieldChange={ (val, field, model) => this.props.CurrentAnswerFieldChange(val, field, model) } \r\n                        history={this.props.history}\r\n                        />\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.mcqReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    AddMcq: (model, editMode) => dispatch(AddMcq(model, editMode)),\r\n    AddAnswerChoice: (model, mcqModel) => dispatch(AddAnswerChoice(model, mcqModel)),\r\n    UpdateMcq: (model) => dispatch(UpdateMcq(model)),\r\n    SelectMcq: (model) => dispatch(SelectMcq(model)),\r\n    FetchCategories: () => dispatch(FetchCategories()),\r\n    FetchSkills: () => dispatch(FetchSkills()),\r\n    FetchMcqs: () => dispatch(FetchMcqs()),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    BeginSearch: () => dispatch(BeginSearch()),\r\n    SearchMcq: (searchTerm, mcqList) => dispatch(SearchMcq(searchTerm, mcqList)),\r\n    CurrentMcqFieldChange: (val, field, model) => dispatch(CurrentMcqFieldChange(val, field, model)),\r\n    CurrentAnswerFieldChange: (val, field, model) => dispatch(CurrentAnswerFieldChange(val, field, model))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(McqContainer);","import React from 'react';\r\nimport CSVReader from 'react-csv-reader';\r\nimport { Typography, Button } from '@material-ui/core';\r\nimport repository from '../../repository';\r\nimport config from '../../config';\r\n\r\nclass BulkUpload extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: \"\",\r\n            finalJson: {}\r\n        };\r\n    }\r\n\r\n    handleFileLoaded = (content, fileName) => {\r\n        console.log('fileName', fileName);\r\n        console.log('content', content);\r\n        let matrixArray = content;\r\n        let finalJson = {\r\n            mcqs: []\r\n        };\r\n        let headers = [];\r\n        let firstRow = matrixArray[0];\r\n        firstRow.map((item, columnIndex) => {\r\n            headers.push(item);\r\n        });\r\n        if (!this.validateHeaders(headers)) {\r\n            this.setState({\r\n                message: \"Invalid Headers. Please check the file format and try again.\"\r\n            });\r\n            return;\r\n        }\r\n        if (!this.validCount(matrixArray)) {\r\n            this.setState({\r\n                message: `Invalid number of records. Min: ${config.instance.minBulkCount}, Max: ${config.instance.maxBulkCount}`\r\n            });\r\n            return;\r\n        }\r\n        matrixArray.map((itemArray, rowIndex) => {\r\n            if (rowIndex === 0) {\r\n\r\n            }\r\n            else {\r\n                let mcq = {};\r\n                mcq.mcq_meta = {\r\n                    choices: []\r\n                };\r\n                let correctAnswer = \"\";\r\n                itemArray.map((colValue, colIndex) => {\r\n                    let filteredHeaders = config.instance.validHeaders.filter((item) => {\r\n                        return item.name === headers[colIndex];\r\n                    });\r\n\r\n                    if(filteredHeaders && filteredHeaders.length > 0) {\r\n                        let prop = filteredHeaders[0].prop;\r\n                        if(prop.startsWith(\"choice\")) {\r\n                            if(colValue) {\r\n                                mcq.mcq_meta.choices.push({\r\n                                    content: colValue,\r\n                                    isCorrect: correctAnswer \r\n                                });\r\n                            }\r\n                        }\r\n                        else {\r\n                            mcq.mcq_meta[prop] = colValue;\r\n                        }\r\n                    }\r\n                });\r\n                if(mcq.mcq_meta.question && mcq.mcq_meta.question !== '') {\r\n                    finalJson.mcqs.push(mcq);\r\n                }\r\n            }\r\n        });\r\n        this.setState({\r\n            finalJson: finalJson\r\n        });\r\n    }\r\n\r\n    onUpload = () => {\r\n        let { finalJson } = this.state;\r\n        let url = config.instance.getAdminApiUrl() + 'bulkMcq';\r\n        repository.saveData(url, finalJson)\r\n            .then((res) => {\r\n                this.setState({\r\n                    message: \"Successfully uploaded.\",\r\n                    finalJson: {}\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    message: \"Error in uploading file. Please try again.\"\r\n                });\r\n            })\r\n    }\r\n\r\n    validateHeaders = (headers) => {\r\n        \r\n        let isValid = true;\r\n        headers.map((item, idx) => {\r\n            let filteredHeaders = config.instance.validHeaders.filter((vh) => {\r\n                return vh.name === item;\r\n            });\r\n            if(filteredHeaders && filteredHeaders.length > 0) {\r\n            } else {\r\n                isValid = false;\r\n            }\r\n        });\r\n        return isValid;\r\n    }\r\n    \r\n    validCount = (matrix) => {\r\n        let matrixLength = matrix.length;\r\n        if(matrixLength < config.instance.minBulkCount || matrixLength > config.instance.maxBulkCount) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleError = (error) => {\r\n        console.log('error on upload', error);\r\n    }\r\n\r\n    render = () => {\r\n        const { message, finalJson } = this.state;\r\n        return (\r\n            <div>\r\n                <CSVReader\r\n                    cssClass=\"csv-reader-input\"\r\n                    label=\"Select CSV with Multiple Choice Questions\"\r\n                    onFileLoaded={this.handleFileLoaded}\r\n                    onError={this.handleError}\r\n                    inputId=\"bulkmcq\"\r\n                    inputStyle={{color: 'red'}}\r\n                />\r\n                <br></br>\r\n                <Typography color=\"primary\" variant=\"subtitle1\">{message}</Typography>\r\n                {finalJson && finalJson.mcqs && finalJson.mcqs.length > 0 &&\r\n                <Button color=\"primary\" variant=\"contained\" \r\n                        size=\"large\"\r\n                        onClick={this.onUpload}\r\n                        >Upload</Button>\r\n                }\r\n                {message === \"Successfully uploaded.\" && \r\n                    <Button color=\"primary\" variant=\"contained\" \r\n                    size=\"small\"\r\n                    onClick={() => this.props.history.goBack()}\r\n                    >Go Back</Button>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BulkUpload;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AddCandidateComponent from '../components/Candidates/AddCandidate';\r\nimport {    AddCandidate, UpdateCandidate, FetchSkills,  \r\n            CloseSnackbar, CurrentCandidateFieldChange,\r\n            OpenSnackbar } from '../actions/CandidateActions';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SnackbarComponent from '../components/lib/SnackbarComponent';\r\n\r\nclass CandidateContainer extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        this.reload();\r\n    }\r\n\r\n    componentWillReceiveProps = (newprops, oldprops) => {\r\n        if(newprops.success_message !== '' && newprops.success_message !== undefined) {\r\n            console.log('newprops.success_message');\r\n            console.log(newprops.success_message);\r\n            this.props.OpenSnackbar();\r\n            setTimeout(() => {\r\n                this.props.history.push('/candidates');\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    reload = () => {\r\n        this.props.FetchSkills();\r\n    }\r\n\r\n    onAddCandidate = (model) => {\r\n        this.props.AddCandidate(model, this.props.editMode);\r\n    }\r\n\r\n    render = () => {\r\n        console.log('this.props.current_candidate');\r\n        console.log(this.props.snack_open);\r\n        return(\r\n            <Grid container spacing={16}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <AddCandidateComponent \r\n                        onSubmit={ (model) => this.onAddCandidate(model) }\r\n                        model={this.props.current_candidate}\r\n                        skills={this.props.skills}\r\n                        editMode={this.props.editMode}\r\n                        onFieldChange={ (val, field, model) => this.props.CurrentCandidateFieldChange(val, field, model) } \r\n                        />\r\n                    \r\n                <SnackbarComponent \r\n                    openSnack={this.props.snack_open} handleClose={() => this.props.CloseSnackbar()} \r\n                    snackMessage={\"Data Saved Successfully!\"} \r\n                    /> \r\n            </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.candidateReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    AddCandidate: (model, editMode) => dispatch(AddCandidate(model, editMode)),\r\n    UpdateCandidate: (model) => dispatch(UpdateCandidate(model)),\r\n    FetchSkills: () => dispatch(FetchSkills()),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    CurrentCandidateFieldChange: (val, field, model) => dispatch(CurrentCandidateFieldChange(val, field, model))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CandidateContainer);","import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader, DialogContent, Dialog, DialogTitle, DialogActions, Divider } from '@material-ui/core';\r\nimport { MenuItem, OutlinedInput, Select, InputLabel, IconButton } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport SelectCandidateExperience from '../Candidates/SelectCandidateExperience';\r\nimport LoadingComponent from '../lib/LoadingComponent';\r\nimport { Close  } from '@material-ui/icons';\r\n\r\nclass AddTest extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n        \r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        console.log('handle close');\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n      console.log('submit called');\r\n      this.props.onSubmit(this.props.model);\r\n      this.handleClose();\r\n    }\r\n    \r\n    onSubmitExperience = (years, months) => {\r\n        this.props.onFieldChange(years, 'experienceLevel', this.props.model)\r\n    }\r\n\r\n    render = () => {\r\n        let { model } = this.props;\r\n        console.log('current_test');\r\n        console.log(model);\r\n        return (\r\n            <div>\r\n            {!model && <LoadingComponent /> } \r\n            {model && \r\n            <Card>   \r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>Create Test</Button>\r\n                \r\n                <Dialog\r\n                fullWidth={true}\r\n                open={this.state.open}\r\n                onClose={this.handleClose}\r\n                >\r\n                <DialogTitle onClose={this.handleClose}>Create a New Test</DialogTitle>\r\n                <Divider />\r\n                <DialogContent style={{padding: '4%'}}>\r\n                    <form  noValidate autoComplete=\"off\">\r\n                            <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                <InputLabel htmlFor=\"outlined-skill-simple\">\r\n                                    Skill\r\n                                </InputLabel>\r\n                                <Select\r\n                                    onChange={(e) => this.props.onFieldChange(e.target.value, 'skill', this.props.model)}\r\n                                    value={model.test_meta.skill}\r\n                                    input={\r\n                                    <OutlinedInput\r\n                                        labelWidth={65}\r\n                                        name=\"skill\"\r\n                                        id=\"outlined-skill-simple\"\r\n                                    />\r\n                                    }>\r\n                                    <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                    </MenuItem>\r\n                                    {this.props.skills && this.props.skills.length > 0 &&\r\n                                        this.props.skills.map((skillItem, index) => {\r\n                                            let item = skillItem.skill_meta;\r\n                                        return (\r\n                                            <MenuItem key={index} value={item.skill}>{item.skill}</MenuItem>\r\n                                        )\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                <TextField\r\n                                    id=\"outlined-testname\"\r\n                                    label=\"Test Name\"\r\n                                    className={styles.dense}\r\n                                    value={model.test_meta.testName}\r\n                                    onChange={(e) => this.props.onFieldChange(e.target.value, 'testName', this.props.model)}\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                <TextField\r\n                                    id=\"outlined-email\"\r\n                                    label=\"Test Duration (mins)\"\r\n                                    className={styles.dense}\r\n                                    value={model.test_meta.duration}\r\n                                    onChange={(e) => this.props.onFieldChange(e.target.value, 'duration', this.props.model)}\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                <SelectCandidateExperience \r\n                                        isTestAdmin={true}\r\n                                        onSubmitExperience={ (years, months) => this.onSubmitExperience(years, months) } />\r\n                            </FormControl>\r\n                    </form>\r\n                    </DialogContent>\r\n                    <Divider />\r\n                    <DialogActions>\r\n                        <Button variant=\"contained\" size=\"large\" color=\"primary\"\r\n                                        onClick={ () => this.handleSubmit(this.props.model)}>\r\n                            Create Test\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Card>}\r\n        \r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst styles = {\r\n    formControl: {\r\n        width: '80%',\r\n        marginBottom: '4%'\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n};\r\nexport default AddTest;","import axios from 'axios';\r\nimport config from '../config';\r\nimport repository from '../repository';\r\n\r\nimport { FETCH_SKILLS_BEGIN, FETCH_SKILLS_FAIL, FETCH_SKILLS_SUCCESS } from './SkillActions';\r\n\r\nexport const ADD_CANDIDATE_BEGIN = 'ADD_CANDIDATE_BEGIN';\r\nexport const ADD_CANDIDATE_SUCCESS = 'ADD_CANDIDATE_SUCCESS';\r\nexport const ADD_CANDIDATE_FAIL = 'ADD_CANDIDATE_FAIL';\r\nexport const CANDIDATE_SEARCH_BEGIN = 'CANDIDATE_SEARCH_BEGIN';\r\nexport const CANDIDATE_SEARCH_SUCCESS = 'CANDIDATE_SEARCH_SUCCESS';\r\nexport const UPDATE_CANDIDATE_BEGIN = 'UPDATE_CANDIDATE_BEGIN';\r\nexport const UPDATE_CANDIDATE_SUCCESS = 'UPDATE_CANDIDATE_SUCCESS';\r\nexport const UPDATE_CANDIDATE_FAIL = 'UPDATE_CANDIDATE_FAIL';\r\nexport const SELECT_CANDIDATE = 'SELECT_CANDIDATE';\r\nexport const CURRENT_CANDIDATE_FIELD_CHANGE = 'CURRENT_CANDIDATE_FIELD_CHANGE';\r\nexport const CURRENT_CANDIDATE_FIELD_CHANGE_END = 'CURRENT_CANDIDATE_FIELD_CHANGE_END';\r\nexport const CURRENT_ANSWER_FIELD_CHANGE = 'CURRENT_ANSWER_FIELD_CHANGE';\r\nexport const CURRENT_ANSWER_FIELD_CHANGE_END = 'CURRENT_ANSWER_FIELD_CHANGE_END';\r\nexport const CHOICE_ADDED_TO_CANDIDATE = 'CHOICE_ADDED_TO_CANDIDATE';\r\nexport const FETCH_CANDIDATE_BEGIN = 'FETCH_CANDIDATE_BEGIN';\r\nexport const FETCH_CANDIDATE_SUCCESS = 'FETCH_CANDIDATE_SUCCESS';\r\nexport const FETCH_CANDIDATE_FAIL = 'FETCH_CANDIDATE_FAIL';\r\n// export const FETCH_SKILLS_SUCCESS = 'FETCH_SKILLS_SUCCESS';\r\n// export const FETCH_SKILLS_FAIL = 'FETCH_SKILLS_FAIL';\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\r\nexport const OPEN_SNACKBAR = 'OPEN_SNACKBAR';\r\n\r\nexport const CurrentCandidateFieldChange = (val, field, model) => dispatch => {\r\n    console.log('CANDIDATE field change: ' + field);\r\n    console.log(val);\r\n    switch(field)\r\n    {\r\n        case 'fullName':\r\n        {\r\n            model.fullName = val;\r\n            dispatch({\r\n                type: CURRENT_CANDIDATE_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'email':\r\n        {\r\n            model.email = val;\r\n            dispatch({\r\n                type: CURRENT_CANDIDATE_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'contactno':\r\n        {\r\n            model.contactno = val;\r\n            dispatch({\r\n                type: CURRENT_CANDIDATE_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'experienceYears':\r\n        {\r\n            model.experienceYears = val;\r\n            dispatch({\r\n                type: CURRENT_CANDIDATE_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'experienceMonths':\r\n        {\r\n            model.experienceMonths = val;\r\n            dispatch({\r\n                type: CURRENT_CANDIDATE_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        default:\r\n        {\r\n        }\r\n    }\r\n    dispatch({\r\n        type: CURRENT_CANDIDATE_FIELD_CHANGE_END\r\n    });\r\n}\r\n\r\nexport const AddCandidate = (candidateModel, editMode) => dispatch => {\r\n    dispatch({\r\n        type: ADD_CANDIDATE_BEGIN\r\n    });\r\n    let url = config.instance.getAdminApiUrl() + 'candidate';\r\n        repository.saveData(url, candidateModel)\r\n            .then((res) => {\r\n                console.log('CANDIDATE saved: ' + res);\r\n                dispatch({\r\n                    type: ADD_CANDIDATE_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({\r\n                    type: ADD_CANDIDATE_FAIL,\r\n                    payload: err\r\n                });\r\n            });\r\n}\r\n\r\nexport const BeginSearch = () => dispatch => {\r\n    dispatch({\r\n        type: CANDIDATE_SEARCH_BEGIN\r\n    });\r\n}\r\n\r\n\r\n export const FetchCandidates = () => dispatch => {\r\n    let url = config.instance.getAdminApiUrl() + 'getAllCandidates';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: FETCH_CANDIDATE_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_CANDIDATE_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const FetchSkills = () => dispatch => {\r\n    dispatch({\r\n        type: FETCH_SKILLS_BEGIN\r\n    });\r\n    let url = config.instance.getAdminApiUrl() + 'getAllSkills';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: FETCH_SKILLS_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_SKILLS_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const SelectCandidate = (candidateModel) => dispatch => {\r\n    dispatch({\r\n        type: SELECT_CANDIDATE,\r\n        payload: candidateModel\r\n    })\r\n}\r\n\r\nexport const UpdateCandidate = (candidateModel) => dispatch => {\r\n    dispatch({\r\n        type: UPDATE_CANDIDATE_BEGIN\r\n    });\r\n    let url = config.instance.getAdminApiUrl() + 'candidate';\r\n    repository.updateData(url, candidateModel)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: UPDATE_CANDIDATE_SUCCESS\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: UPDATE_CANDIDATE_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const CloseSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: CLOSE_SNACKBAR\r\n    });\r\n}\r\nexport const OpenSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: OPEN_SNACKBAR\r\n    });\r\n}\r\n","import AuthHelper from '../AuthHelper';\r\n\r\nexport const TestStatus = {\r\n    Draft: 'DRAFT',\r\n    Published: 'PUBLISHED'\r\n}\r\n\r\nconst SendInviteRoles = [\"admin\", \"orgadmin\"];\r\nexport const CanSendInvite = (testStatus) => {\r\n    let role = GetCurrentUserRole();\r\n    if(SendInviteRoles.indexOf(role) === -1) {\r\n        return false;\r\n    }\r\n    return testStatus && testStatus.toUpperCase() === TestStatus.Published;\r\n}\r\nexport const GetCurrentUserRole = () => {\r\n    let user = AuthHelper.GetUserInfo();\r\n    if(user) {\r\n        return user.role;\r\n    }\r\n    return null;\r\n}\r\nexport const GetCurrentUserName = () => {\r\n    let user = AuthHelper.GetUserInfo();\r\n    if(user) {\r\n        return user.name;\r\n    }\r\n    return null;\r\n}","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { PersonAdd } from '@material-ui/icons';\r\nimport LoadingComponent from '../lib/LoadingComponent';\r\nimport { Typography } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { CanSendInvite } from '../../common/HelperFunctions';\r\n\r\nconst TestList = (props) => {\r\n    let { tests } = props;\r\n    return (\r\n        <div>\r\n        {!tests && <LoadingComponent /> }\r\n        {tests && tests.length === 0 && <Typography align=\"center\" variant=\"subtitle1\">No Tests Found </Typography> }\r\n        {tests && tests.length > 0 && \r\n        <Table>\r\n            <TableHead>\r\n            <TableRow>\r\n                <CustomTableCell>Test</CustomTableCell>\r\n                <CustomTableCell align=\"left\">Status</CustomTableCell>\r\n                <CustomTableCell align=\"left\">Created On</CustomTableCell>\r\n                <CustomTableCell align=\"left\">Author</CustomTableCell>\r\n                <CustomTableCell align=\"right\"></CustomTableCell>\r\n            </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n            {tests.map((test, index) => (\r\n                <TableRow key={index}>\r\n                <CustomTableCell component=\"th\" scope=\"row\">\r\n                    <Link to={ {pathname: \"/testConsole\", state: { testId: test.id } }}>\r\n                        {test.test_meta.testName}\r\n                    </Link>\r\n                </CustomTableCell>\r\n                <CustomTableCell align=\"left\"><Typography variant=\"subtitle2\" >{test.test_meta.status.toUpperCase()}</Typography></CustomTableCell>\r\n                <CustomTableCell align=\"left\">{test.test_meta.createdOn}</CustomTableCell>\r\n                <CustomTableCell align=\"left\">{test.user_meta.name}</CustomTableCell>\r\n                <CustomTableCell align=\"right\" scope=\"row\" component=\"th\">\r\n                    {CanSendInvite(test.test_meta.status) &&\r\n                    <Link to={ {pathname: \"/inviteConsole\", state: { testId: test.id } }}>\r\n                        <PersonAdd />\r\n                    </Link>\r\n                    }\r\n                </CustomTableCell>\r\n                </TableRow>\r\n            ))}\r\n            </TableBody>\r\n        </Table>\r\n        }\r\n        </div>\r\n    );\r\n}\r\nconst CustomTableCell = withStyles(theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nexport default TestList;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AddTestComponent from '../components/AdminTest/AddTest';\r\nimport {    AddTest, UpdateTest, FetchSkills, FetchTests,  \r\n            CloseSnackbar, CurrentTestFieldChange,\r\n            OpenSnackbar } from '../actions/AdminTestActions';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SnackbarComponent from '../components/lib/SnackbarComponent';\r\nimport { Button, Card, CardHeader } from '@material-ui/core';\r\nimport TestList from '../components/AdminTest/TestList';\r\n\r\nclass AdminTestContainer extends React.Component {\r\n    \r\n    componentDidMount = () => {\r\n        this.reload();\r\n    }\r\n\r\n\r\n\r\n    reload = () => {\r\n        this.props.FetchSkills();\r\n        this.props.FetchTests();\r\n    }\r\n\r\n    onAddTest = (model) => {\r\n        this.props.AddTest(model, this.props.editMode, this.props.history)\r\n                .then((res) => {\r\n                    this.reload();  \r\n                });\r\n    }\r\n\r\n    render = () => {\r\n        console.log('render admin test container');\r\n        return(\r\n            <Grid container spacing={16}>\r\n                <Grid item xs={12} sm={12}>\r\n                <Card>\r\n                    <CardHeader action={\r\n                    <AddTestComponent \r\n                        onSubmit={ (model) => this.onAddTest(model) }\r\n                        model={this.props.current_test}\r\n                        skills={this.props.skills}\r\n                        editMode={this.props.editMode}\r\n                        onFieldChange={ (val, field, model) => this.props.CurrentTestFieldChange(val, field, model) } \r\n                        />\r\n                    }\r\n                    title=\"Tests\" />\r\n                <TestList tests={this.props.tests} />\r\n                </Card>\r\n                <SnackbarComponent \r\n                    openSnack={this.props.snack_open} handleClose={() => this.props.CloseSnackbar()} \r\n                    snackMessage={\"Data Saved Successfully!\"} \r\n                    /> \r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.adminTestReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    AddTest: (model, editMode) => dispatch(AddTest(model, editMode)),\r\n    UpdateTest: (model) => dispatch(UpdateTest(model)),\r\n    FetchSkills: () => dispatch(FetchSkills()),\r\n    FetchTests: () => dispatch(FetchTests()),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    CurrentTestFieldChange: (val, field, model) => dispatch(CurrentTestFieldChange(val, field, model))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminTestContainer);","import axios from 'axios';\r\nimport config from '../config';\r\nimport repository from '../repository';\r\nimport { LogoutCurrentUser } from './UserActions';\r\nimport { FETCH_CATEGORIES_SUCCESS, FETCH_CATEGORIES_FAIL } from './CategoryActions';\r\n\r\nexport const ADD_TEST_BEGIN = 'ADD_TEST_BEGIN';\r\nexport const ADD_TEST_SUCCESS = 'ADD_TEST_SUCCESS';\r\nexport const ADD_TEST_FAIL = 'ADD_TEST_FAIL';\r\nexport const TEST_SEARCH_BEGIN = 'TEST_SEARCH_BEGIN';\r\nexport const TEST_SEARCH_SUCCESS = 'TEST_SEARCH_SUCCESS';\r\nexport const UPDATE_TEST_BEGIN = 'UPDATE_TEST_BEGIN';\r\nexport const UPDATE_TEST_SUCCESS = 'UPDATE_TEST_SUCCESS';\r\nexport const UPDATE_TEST_FAIL = 'UPDATE_TEST_FAIL';\r\nexport const SELECT_TEST = 'SELECT_TEST';\r\nexport const CURRENT_TEST_FIELD_CHANGE = 'CURRENT_TEST_FIELD_CHANGE';\r\nexport const CURRENT_TEST_FIELD_CHANGE_END = 'CURRENT_TEST_FIELD_CHANGE_END';\r\nexport const CURRENT_ANSWER_FIELD_CHANGE = 'CURRENT_ANSWER_FIELD_CHANGE';\r\nexport const CURRENT_ANSWER_FIELD_CHANGE_END = 'CURRENT_ANSWER_FIELD_CHANGE_END';\r\nexport const CHOICE_ADDED_TO_TEST = 'CHOICE_ADDED_TO_TEST';\r\nexport const FETCH_TEST_BEGIN = 'FETCH_TEST_BEGIN';\r\nexport const FETCH_TESTS_SUCCESS = 'FETCH_TESTS_SUCCESS';\r\nexport const FETCH_TESTS_FAIL = 'FETCH_TESTS_FAIL';\r\nexport const FETCH_SKILLS_SUCCESS = 'FETCH_SKILLS_SUCCESS';\r\nexport const FETCH_SKILLS_FAIL = 'FETCH_SKILLS_FAIL';\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\r\nexport const OPEN_SNACKBAR = 'OPEN_SNACKBAR';\r\n\r\nexport const CurrentTestFieldChange = (val, field, model) => dispatch => {\r\n    console.log('test field change: ' + field);\r\n    console.log(val);\r\n    switch(field)\r\n    {\r\n        case 'testName':\r\n        {\r\n            model.test_meta.testName = val;\r\n            dispatch({\r\n                type: CURRENT_TEST_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'skill':\r\n        {\r\n            model.test_meta.skill = val;\r\n            dispatch({\r\n                type: CURRENT_TEST_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'duration':\r\n        {\r\n            model.test_meta.duration = val;\r\n            dispatch({\r\n                type: CURRENT_TEST_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'experienceYears':\r\n        {\r\n            model.test_meta.experienceYears = val;\r\n            dispatch({\r\n                type: CURRENT_TEST_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        default:\r\n        {\r\n        }\r\n    }\r\n    dispatch({\r\n        type: CURRENT_TEST_FIELD_CHANGE_END\r\n    });\r\n}\r\n\r\nexport const AddTest = (testModel, editMode) => dispatch => {\r\n    return new Promise((resolve, reject) => {\r\n        dispatch({\r\n            type: ADD_TEST_BEGIN\r\n        });\r\n        let url = config.instance.getAdminApiUrl() + 'test';\r\n        testModel.test_meta.status = 'draft';\r\n        repository.saveData(url, testModel)\r\n            .then((res) => {\r\n                dispatch({\r\n                    type: ADD_TEST_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            })\r\n            .then((res) => {\r\n                resolve(true);\r\n            })\r\n            .catch((err) => {\r\n                dispatch({\r\n                    type: ADD_TEST_FAIL,\r\n                    payload: err\r\n                });\r\n                reject(err);\r\n            });\r\n\r\n    });\r\n}\r\n\r\n export const FetchCategories = () => dispatch => {\r\n    let url = config.instance.getAdminApiUrl() + 'getAllCategories';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: FETCH_CATEGORIES_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_CATEGORIES_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const FetchSkills = () => dispatch => {\r\n    let url = config.instance.getAdminApiUrl() + 'getAllSkills';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: FETCH_SKILLS_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_SKILLS_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const UpdateTest = (testModel) => dispatch => {\r\n    dispatch({\r\n        type: UPDATE_TEST_BEGIN\r\n    });\r\n    let url = config.instance.getAdminApiUrl() + 'test';\r\n    repository.updateData(url, testModel)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: UPDATE_TEST_SUCCESS\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: UPDATE_TEST_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const FetchTests = () => dispatch => {\r\n    dispatch({\r\n        type: FETCH_TEST_BEGIN\r\n    });\r\n    let url = config.instance.getAdminApiUrl() + 'getAllTests';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: FETCH_TESTS_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            if(err.data && err.data.message === 'Invalid token.') {\r\n                dispatch(LogoutCurrentUser());\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: FETCH_TESTS_FAIL,\r\n                    payload: err.statusText\r\n                });\r\n            }\r\n        });\r\n}\r\n\r\nexport const CloseSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: CLOSE_SNACKBAR\r\n    });\r\n}\r\nexport const OpenSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: OPEN_SNACKBAR\r\n    });\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {    FetchMcqs, DeleteMcq, BulkDeleteMcq,\r\n            CloseSnackbar,\r\n            OpenSnackbar, \r\n            BeginSearch, EndSearch, SearchMcq } from '../../actions/McqActions';\r\nimport { Link } from 'react-router-dom';\r\nimport { FormControl, Grid, Card, CardHeader, Button, CardContent, \r\n         List, ListItem, ListItemText, ListItemSecondaryAction,\r\n         Checkbox, TextField } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport McqItem from '../../Containers/TestConsole/McqItem';\r\nimport SnackbarComponent from '../lib/SnackbarComponent';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { Add, Search } from '@material-ui/icons';\r\nimport LoadingComponent from '../lib/LoadingComponent';\r\nimport User401 from '../../Containers/User/User401';\r\n\r\n//import BaseComponent from '../lib/BaseComponent';\r\n\r\nclass McqList extends Component {\r\n\r\n    constructor (props) {\r\n       super(props);\r\n       this.state = {\r\n          selectedMcqs: []\r\n       }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.FetchMcqs();\r\n    }\r\n\r\n    onAddMcqToTest = (mcqId) => {\r\n        this.props.AddMcqToTest(mcqId);\r\n    }\r\n\r\n    onEditClick = (mcq) => {\r\n        this.props.history.push({\r\n            pathname:  '/addMcq',\r\n            state: {\r\n                mcq: mcq\r\n            }\r\n        });\r\n    }\r\n\r\n    onDeleteMcq = (mcq) => {\r\n        this.props.DeleteMcq(mcq);\r\n    }\r\n\r\n    bulkDeleteMcq = () => {\r\n        let { selectedMcqs } = this.state;\r\n        if(selectedMcqs && selectedMcqs.length > 0) {\r\n            this.props.BulkDeleteMcq(selectedMcqs);\r\n        }        \r\n    }\r\n\r\n    markForDeletion = (mcq) => {\r\n        let { selectedMcqs } = this.state;\r\n        let filteredMcqs = selectedMcqs.filter((item)=>{\r\n            return item.id === mcq.id;\r\n        });\r\n        if(filteredMcqs && filteredMcqs.length > 0) {\r\n        } else {\r\n            selectedMcqs.push(mcq);\r\n            this.setState({selectedMcqs});\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        let { mcqs, search_term, filteredCategories, search_enabled, error } = this.props;\r\n        let { selectedMcqs } = this.state;\r\n        let mcqToDisplay = filteredCategories ? filteredCategories : mcqs;\r\n        if(!mcqToDisplay){\r\n            return (\r\n                <LoadingComponent />\r\n            )\r\n        }\r\n        return (\r\n            <Card>\r\n                <CardHeader\r\n                    action={\r\n                        <div>\r\n                            {selectedMcqs && selectedMcqs.length > 0 &&\r\n                            <Button color=\"primary\" onClick={() => this.bulkDeleteMcq()} size=\"small\">\r\n                                Delete\r\n                            </Button>}\r\n                            {!search_enabled &&\r\n                            <Button color=\"primary\" onClick={() => this.props.BeginSearch()} size=\"small\">\r\n                                <Search />\r\n                            </Button>}\r\n                            <Link to=\"/bulkMcq\" >\r\n                                <Button variant=\"contained\" color=\"primary\">Bulk Upload Mcq</Button>\r\n                            </Link>\r\n                        </div>\r\n                    }\r\n                    title=\"MCQ List\"\r\n                    subheader=\"Multiple Choice Questions\">\r\n                </CardHeader>\r\n                <CardContent>\r\n                    {search_enabled && \r\n                    <div>\r\n                        <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                        <TextField\r\n                                            id=\"outlined-name\"\r\n                                            label=\"Search\"\r\n                                            value={search_term}\r\n                                            className={styles.dense}\r\n                                            onChange={(e) => this.props.SearchMcq(e.target.value, mcqs)}\r\n                                            margin=\"normal\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                        </FormControl>\r\n                        <FormControl variant=\"outlined\" style={{width: '10%', marginTop: '2%'}}>\r\n                            <Button  color=\"primary\" size=\"small\" onClick={() => this.props.EndSearch()} >\r\n                                Hide Search\r\n                            </Button>\r\n                        </FormControl>\r\n                    </div>\r\n                    }\r\n                    {mcqToDisplay && \r\n                                    <Typography variant=\"caption\">\r\n                                        {mcqToDisplay.length} MCQs found\r\n                                    </Typography>}\r\n                    <Link to=\"/addMcq\" >\r\n                        <Fab color=\"primary\" aria-label=\"Add\" style={{right: 20, position: 'fixed', bottom: 20}}>\r\n                            <Add />\r\n                        </Fab>\r\n                    </Link>\r\n                    <List dense={true}>\r\n                        { mcqToDisplay && mcqToDisplay.length > 0 &&\r\n                          mcqToDisplay.map((item, index) => {\r\n                            return (\r\n                                <McqItem    mcqItem={item} key={index}\r\n                                            onEditClick={(mcq) => this.onEditClick(item)}\r\n                                            onDeleteMcq={() => this.onDeleteMcq(item)}\r\n                                            markForDeletion={() => this.markForDeletion(item)}\r\n                                            isSelectable={false} \r\n                                            isEditable={true} />\r\n                            )\r\n                        } )}\r\n                    </List>\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state.mcqReducer,\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    FetchMcqs: () => dispatch(FetchMcqs()),\r\n    DeleteMcq: (mcq) => dispatch(DeleteMcq(mcq)),\r\n    BulkDeleteMcq: (mcqs) => dispatch(BulkDeleteMcq(mcqs)),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    BeginSearch: () => dispatch(BeginSearch()),\r\n    EndSearch: () => dispatch(EndSearch()),\r\n    SearchMcq: (searchTerm, mcqList) => dispatch(SearchMcq(searchTerm, mcqList)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(McqList);\r\nconst styles = {\r\n    formControl: {\r\n        width: '70%'\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {    FetchCandidates, \r\n            CloseSnackbar,\r\n            OpenSnackbar, \r\n            BeginSearch//, SearchCandidate \r\n        } from '../../actions/CandidateActions';\r\nimport { Link } from 'react-router-dom';\r\nimport { FormControl, Grid, Card, CardHeader, Button, CardContent, List, ListItem } from '@material-ui/core';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nclass CandidateList extends Component {\r\n\r\n    componentDidMount = () => {\r\n        this.props.FetchCandidates();\r\n    }\r\n\r\n    render = () => {\r\n        let { candidates } = this.props;\r\n        return (\r\n            <Card>\r\n                <CardHeader\r\n                    action={\r\n                        <Link to=\"/addCandidate\" >\r\n                            <Button variant=\"contained\" color=\"primary\">Add Candidate</Button>\r\n                        </Link>\r\n                    }\r\n                    title=\"Candidate List\"\r\n                    subheader={\"For current recruiter\"}>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <List>\r\n                        { candidates && candidates.length > 0 &&\r\n                          candidates.map((item, index) => {\r\n                            return (\r\n                                <ListItem divider={false} key={index} >\r\n                                    <ExpansionPanel style={{width:'100%'}}>\r\n                                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                                        <Grid container spacing={16}>\r\n                                            <Grid item xs={6} sm={6}>\r\n                                                <Typography variant=\"h6\">{item.fullName}</Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={3} sm={3}>\r\n                                                <Typography variant=\"subtitle1\" >{item.email}</Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={2} sm={2}>\r\n                                                <Typography variant=\"subtitle1\" >\r\n                                                    {item.experienceYears} years {item.experienceMonths} months\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                            <div style={styles.formControl}>\r\n                                                {item.description && \r\n                                                    <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                                        <Typography variant=\"subtitle1\">\r\n                                                            No description\r\n                                                        </Typography>\r\n                                                    </FormControl>\r\n                                                }\r\n                                            </div>\r\n                                        </ExpansionPanelDetails>\r\n                                        <ExpansionPanelActions>\r\n                                        <Button variant=\"outlined\" size=\"small\" color=\"primary\" >\r\n                                            Edit\r\n                                        </Button>\r\n                                        </ExpansionPanelActions>\r\n                                    </ExpansionPanel>\r\n                                </ListItem>\r\n                            )\r\n                        } )}\r\n                    </List>\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state.candidateReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    FetchCandidates: () => dispatch(FetchCandidates()),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    BeginSearch: () => dispatch(BeginSearch())\r\n    //SearchCandidate: (searchTerm, candidateList) => dispatch(SearchCandidate(searchTerm, candidateList)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CandidateList);\r\nconst styles = {\r\n    formControl: {\r\n        width: '70%'\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {    CloseSnackbar,\r\n            OpenSnackbar } from '../../actions/TestConsoleActions';            \r\nimport { FetchInvitations, EvaluateResults } from '../../actions/InviteConsoleActions';            \r\nimport Grid from '@material-ui/core/Grid';\r\nimport SnackbarComponent from '../../components/lib/SnackbarComponent';\r\nimport { Button, Card, CardHeader, CardContent, CardActions } from '@material-ui/core';\r\nimport LoadingComponent from '../../components/lib/LoadingComponent';\r\nimport InviteList from './InviteList';\r\nimport { KeyboardBackspace } from '@material-ui/icons';\r\n\r\nclass InviteConsoleContainer extends React.Component {\r\n    \r\n    componentDidMount = () => {\r\n        this.reload();\r\n    }\r\n\r\n    componentWillReceiveProps = (newprops, oldprops) => {\r\n        if(newprops.success_message !== '' && newprops.success_message !== undefined) {\r\n            // this.props.OpenSnackbar();\r\n        }\r\n        if(newprops.inviteAdded === 'yes') {\r\n            this.props.history.push({\r\n                pathname:  '/tests'\r\n            });\r\n        }\r\n    }\r\n\r\n    reload = () => {\r\n        this.props.FetchInvitations();\r\n    }\r\n\r\n    render = () => {\r\n        return(\r\n            <Grid container spacing={16}>\r\n                <Grid item xs={12} sm={12} md={12}>\r\n                    <Card>\r\n                        <CardHeader\r\n                            title=\"Invitations\" />\r\n                        <CardContent>\r\n                            <InviteList \r\n                                invitations={this.props.invitations}\r\n                                evaluateResults={(responseId) => this.props.EvaluateResults(responseId) }/>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.inviteConsoleReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    FetchInvitations: () => dispatch(FetchInvitations()),\r\n    EvaluateResults: (responseId) => dispatch(EvaluateResults(responseId))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InviteConsoleContainer);\r\nconst styles = {\r\n    actionButton: {\r\n        marginLeft: '80%'\r\n    }\r\n}","import axios from 'axios';\r\nimport config from '../config';\r\nimport repository from '../repository';\r\nimport { LogoutCurrentUser } from './UserActions';\r\n\r\nexport const SEND_TEST_INVITE = 'SEND_TEST_INVITE';\r\nexport const FETCH_INVITES_BEGIN = 'FETCH_INVITES_BEGIN';\r\nexport const FETCH_INVITES_SUCCESS = 'FETCH_INVITES_SUCCESS';\r\nexport const FETCH_INVITES_FAIL = 'FETCH_INVITES_FAIL';\r\nexport const SEND_TEST_INVITE_SUCCESS = 'SEND_TEST_INVITE_SUCCESS';\r\nexport const SEND_TEST_INVITE_FAIL = 'SEND_TEST_INVITE_FAIL';\r\nexport const INVITE_INFO_FIELD_CHANGE = 'INVITE_INFO_FIELD_CHANGE';\r\nexport const EVALUATION_SUCCESS = 'EVALUATION_SUCCESS';\r\nexport const EVALUATION_FAILED = 'EVALUATION_FAILED';\r\n\r\nexport const FetchInvitations = () => dispatch => {\r\n    dispatch({\r\n        type: FETCH_INVITES_BEGIN\r\n    });\r\n    let url = config.instance.getCandidateApiUrl() + 'getAllInvites';\r\n\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            console.log('Invites fetched');\r\n\r\n            dispatch({\r\n                type: FETCH_INVITES_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            if(err.data && err.data.message === 'Invalid token.') {\r\n                dispatch(LogoutCurrentUser());\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: FETCH_INVITES_FAIL,\r\n                    payload: err\r\n                });\r\n            }\r\n        });\r\n}\r\n\r\nexport const EvaluateResults = (responseId) => dispatch => {\r\n    let url = config.instance.getCandidateApiUrl() + 'evaluateAnswers';\r\n    repository.saveData(url, { responseId: responseId})\r\n                .then((res) => {\r\n                    dispatch({\r\n                        type: EVALUATION_SUCCESS,\r\n                        payload: res.data\r\n                    });\r\n                }).catch((err) => {\r\n                    dispatch({\r\n                        type: EVALUATION_FAILED,\r\n                        payload: err\r\n                    });\r\n                });\r\n}\r\n\r\nexport const SendInvite = (testModel, inviteInfo) => dispatch => {\r\n    let url = config.instance.getCandidateApiUrl() + 'sendInvite';\r\n    \r\n    let model = {\r\n        invitation_meta: {\r\n            ...inviteInfo,\r\n            testId: testModel.id\r\n        }\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n        repository.saveData(url, model)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: SEND_TEST_INVITE_SUCCESS,\r\n                payload: res.data\r\n            });\r\n            resolve(true);\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: SEND_TEST_INVITE_FAIL,\r\n            });\r\n            reject(err);\r\n        });\r\n    });\r\n}\r\nexport const InviteInfoFieldChange = (val, field, model) => dispatch => {\r\n    switch(field)\r\n    {\r\n        case 'name':\r\n        {\r\n            model.name = val;\r\n            dispatch({\r\n                type: INVITE_INFO_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'emailTo':\r\n        {\r\n            model.emailTo = val;\r\n            dispatch({\r\n                type: INVITE_INFO_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n        case 'emailSubject':\r\n        {\r\n            model.emailSubject = val;\r\n            dispatch({\r\n                type: INVITE_INFO_FIELD_CHANGE,\r\n                payload: model\r\n            });\r\n            break;\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { FormControl,\r\n         TextField, \r\n         Button,\r\n         Typography,\r\n         Divider} from '@material-ui/core';\r\n// import { EditorState, convertToRaw, ContentState } from 'draft-js';\r\n// import { Editor } from 'react-draft-wysiwyg';\r\n// import draftToHtml from 'draftjs-to-html';\r\n// import htmlToDraft from 'html-to-draftjs';\r\nimport '../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport 'draft-js/dist/Draft.css';\r\n\r\n\r\nconst SendTestInvite = (props) => {\r\n    let { currentTest, inviteInfo } = props;\r\n    \r\n    return (\r\n        <div>\r\n                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                    <TextField\r\n                        id=\"outlined-name\"\r\n                        label=\"Candidate Name\"\r\n                        value={inviteInfo.name}\r\n                        onChange={(e) => props.onFieldChange(e.target.value, 'name')}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        helperText=\"Full name of the candidate\"\r\n                    />\r\n                </FormControl>\r\n                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                    <TextField\r\n                        id=\"outlined-email\"\r\n                        label=\"To\"\r\n                        value={inviteInfo.emailTo}\r\n                        onChange={(e) => props.onFieldChange(e.target.value, 'emailTo')}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        helperText=\"e.g. john@hotmail.com\"\r\n                    />\r\n                </FormControl>\r\n                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                    <TextField\r\n                        id=\"outlined-subject\"\r\n                        label=\"Subject\"\r\n                        value={inviteInfo.emailSubject}\r\n                        onChange={(e) => props.onFieldChange(e.target.value, 'emailSubject')}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                </FormControl>\r\n                    <Typography align=\"center\" variant=\"subtitle1\">\r\n                    You have been invited to attend the \r\n                    <Typography color=\"secondary\"> {currentTest.test_meta.testName}\r\n                    </Typography> \r\n                    challenge. We wish you all the best!\r\n                    </Typography>\r\n\r\n                    <div style={styles.margintop}>\r\n                    <Typography variant=\"button\" align=\"center\">\r\n                    Duration: {currentTest.test_meta.duration} mins\r\n                    <br></br><br></br>\r\n                    <a href=\"#\" style={styles.margintop}>\r\n                    <Button variant=\"contained\" align=\"center\" size=\"large\" color=\"secondary\">\r\n                                Start Challenge\r\n                    </Button>\r\n                    </a>\r\n                    </Typography>\r\n                    </div>\r\n                    <Divider style={styles.margintop}/>\r\n                    <Typography gutterBottom align=\"center\" variant=\"subtitle2\" style={styles.margintop}>\r\n                        For any technical queries, please refer to <a href=\"#\">FAQ</a> or email us at support@techassessment.com\r\n                    </Typography>\r\n        </div>\r\n    );\r\n}\r\nexport default SendTestInvite;\r\nconst styles ={\r\n    container: {\r\n        marginLeft: '15%'\r\n    },\r\n    formControl: {\r\n        width: '70%',\r\n        marginBottom: '1%',\r\n        marginLeft: '15%'\r\n    },\r\n    margintop: {\r\n        marginTop: '2%',\r\n        // marginLeft: '30%'\r\n    },\r\n    duration: {\r\n        marginTop: '4%',\r\n    },\r\n    editorControl: {\r\n        height: '100%'\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SnackbarComponent from '../../components/lib/SnackbarComponent';\r\nimport { Button, Card, CardHeader, CardContent, CardActions } from '@material-ui/core';\r\nimport LoadingComponent from '../../components/lib/LoadingComponent';\r\nimport SendTestInvite from './SendTestInvite';\r\nimport { KeyboardBackspace } from '@material-ui/icons';\r\n\r\nimport { SendInvite, InviteInfoFieldChange } from '../../actions/InviteConsoleActions';            \r\nimport { FetchTest, CloseSnackbar, OpenSnackbar } from '../../actions/TestConsoleActions';            \r\n\r\nclass InviteContainer extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        this.reload();\r\n    }\r\n\r\n    reload = () => {\r\n        let { state } = this.props.location;\r\n        console.log('reload: location state');\r\n        console.log(state);\r\n        if(state){\r\n            if(state.testId){\r\n                this.props.FetchTest(state.testId);\r\n            }\r\n        }\r\n    }\r\n    \r\n    onSendInvite = () => {\r\n        let { current_test, inviteInfo } = this.props;\r\n        console.log('after send invite current_test', current_test);\r\n        this.props.SendInvite(current_test, inviteInfo).then((res) => {\r\n            this.props.history.push({\r\n                pathname: '/testConsole', state: { testId: current_test.id }\r\n            });\r\n        });\r\n    }\r\n\r\n    render = () => {\r\n        let { current_test, inviteInfo, inviteAdded } = this.props;\r\n        console.log('invite console current_test', current_test);\r\n        return (\r\n            <Grid container spacing={16}>\r\n                <Grid item xs={12} sm={12} md={8}>\r\n                {!current_test && <LoadingComponent />}\r\n                {current_test && current_test.test_meta &&\r\n                <Card>\r\n                    <CardHeader \r\n                        action={\r\n                        <Button color=\"primary\" size=\"large\" variant=\"outlined\"\r\n                                onClick={() => this.props.history.goBack() }>\r\n                            <KeyboardBackspace />\r\n                        </Button>\r\n                        }\r\n                        title=\"Send Test Invites\"\r\n                        subheader={current_test.test_meta.testName}\r\n                    />\r\n                    <CardContent>\r\n                        <SendTestInvite\r\n                            // onSendInvite={(testInfo, inviteInfo) => this.onSendInvite(testInfo, inviteInfo) }\r\n                            selectedMcqs={current_test.test_meta.selectedMcqs} \r\n                            currentTest={current_test}\r\n                            inviteInfo={inviteInfo}\r\n                            onFieldChange={(val, field) => this.props.InviteInfoFieldChange(val, field, inviteInfo)}\r\n                        />\r\n                    </CardContent>\r\n                    <CardActions style={styles.actionButton}>\r\n                        <Button variant=\"contained\" size=\"large\" color=\"primary\"\r\n                                onClick={() => this.onSendInvite() }>\r\n                            Send Invite\r\n                        </Button>\r\n                    </CardActions>\r\n                </Card>\r\n                }\r\n                <SnackbarComponent \r\n                    openSnack={this.props.snack_open} handleClose={() => this.props.CloseSnackbar()} \r\n                    snackMessage={\"Data Saved Successfully!\"} \r\n                /> \r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state.inviteConsoleReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    SendInvite: (inviteInfo, testModel) => dispatch(SendInvite(inviteInfo, testModel)),\r\n    FetchTest: (testId) => dispatch(FetchTest(testId)),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    InviteInfoFieldChange: (val, field, inviteInfo) => dispatch(InviteInfoFieldChange(val, field, inviteInfo))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InviteContainer);\r\nconst styles = {\r\n    actionButton: {\r\n        marginLeft: '80%'\r\n    }\r\n}","import React from 'react';\r\nimport { Typography, Card, CardHeader, CardContent, FormControl,\r\n         FormLabel, CardActions,\r\n         Button, \r\n         Avatar} from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\n         \r\nconst Question = (props) => {\r\n    const { model, selectedAnswers } = props;\r\n    return (\r\n        <div>\r\n            <Typography variant=\"subtitle1\">\r\n                {model.mcq.mcq_meta.description}\r\n            </Typography>\r\n            <FormControl component=\"fieldset\">\r\n                <FormLabel component=\"legend\">Options</FormLabel>\r\n                {model.mcq.mcq_meta.choices && model.mcq.mcq_meta.choices.length > 0 &&\r\n                <List>\r\n                    {model.mcq.mcq_meta.choices.map((choiceItem, choiceIndex) => {\r\n                        return (\r\n                            <ListItem\r\n                            key={choiceIndex}\r\n                            button\r\n                            // selected={1 === 1}\r\n                            selected={model.candidateResponse.responseKeys.indexOf(choiceItem.key) > -1}\r\n                            onClick={event => props.onResponseChange(choiceItem.key)}>\r\n                            <ListItemIcon>\r\n                                <Avatar>\r\n                                    {choiceItem.key}\r\n                                </Avatar>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={choiceItem.content} />\r\n                            </ListItem>\r\n                        )\r\n                    })}\r\n                </List>\r\n                }\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\nexport default Question;","import React from 'react';\r\nimport { Typography, Card, CardHeader, CardContent, FormControl,\r\n         FormLabel, CardActions,\r\n         Button } from '@material-ui/core';\r\nimport AuthHelper from '../../AuthHelper';\r\nimport LoadingComponent from '../../components/lib/LoadingComponent';\r\nimport Question from '../../components/Simulator/Question';\r\n\r\nclass QuestionSimulatorConsoleContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let userInfo = AuthHelper.GetUserInfo();\r\n        console.log('userInfo', userInfo);\r\n        this.state = {\r\n            mcq: {},\r\n            selectedAnswers : []\r\n        };\r\n    }\r\n\r\n    render = () => {\r\n        let { model, currentQuestion } = this.props;\r\n        let { selectedAnswers } = this.state;\r\n        let qEntity = {};\r\n        let questionNumberText = '';\r\n        let currentQuestionIndex = 0;\r\n        let totalQuestions = 0;\r\n        if(model && currentQuestion) {\r\n            qEntity = currentQuestion;\r\n            if(model.response_meta && model.response_meta.mcqs) {\r\n                currentQuestionIndex = (qEntity.questionOrderIndex+1);\r\n                totalQuestions = model.response_meta.mcqs.length;\r\n                questionNumberText = 'Q.' + currentQuestionIndex + ' of ' + totalQuestions;\r\n            }\r\n        }\r\n        if(!qEntity) {\r\n            return (\r\n                <LoadingComponent />\r\n            )\r\n        }\r\n        else {\r\n        return (\r\n                <Card>\r\n                    <CardHeader \r\n                            action={\r\n                                <Button color=\"secondary\" size=\"large\" variant=\"contained\"\r\n                                        onClick={() => this.props.submitAnswers() }>\r\n                                    Submit\r\n                                </Button>\r\n                            }\r\n                            title={qEntity.mcq.mcq_meta.question}\r\n                            subheader={questionNumberText}>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                        <Question\r\n                            model = {qEntity}\r\n                            onResponseChange = {(choiceKey) => this.props.onResponseChange(choiceKey)} \r\n                        />\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        {currentQuestionIndex !== 1 &&\r\n                        <Button variant=\"contained\" size=\"small\" \r\n                                onClick={() => this.props.goToPrevious()} >Previous</Button>\r\n                        }\r\n                        {currentQuestionIndex !== totalQuestions &&\r\n                        <Button variant=\"contained\" size=\"small\" color=\"primary\"\r\n                                onClick={() => this.props.goToNext()}>Next</Button>\r\n                        }\r\n                    </CardActions>                    \r\n                </Card>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default QuestionSimulatorConsoleContainer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from '@material-ui/core';\r\nimport QuestionSimulatorConsoleContainer from './QuestionSimulatorConsoleContainer';\r\nimport { LoadExamSimulator, ResponseChange, SubmitAnswers,\r\n        GetInvitation,\r\n        GoToPrevious, GoToNext } from '../../actions/QuestionSimulatorConsoleActions';\r\nimport LoadingComponent from '../../components/lib/LoadingComponent';\r\n\r\nclass SimulatorConsoleContainer extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        let { inviteid } = this.props.match.params;\r\n        this.props.LoadExamSimulator(inviteid);\r\n    }\r\n\r\n    handle = () => {\r\n        this.props.history.push('/testLanding/3');\r\n    }\r\n\r\n    render = () => {\r\n        let { candidateTestObject, currentQuestion, status } = this.props;\r\n\r\n        if(!candidateTestObject) {\r\n            if(status) {\r\n                return (\r\n                    <div>\r\n                        {status.message}\r\n                    </div>\r\n                )\r\n            }\r\n            return <LoadingComponent />\r\n        }\r\n        return (\r\n        <div>\r\n        {    <QuestionSimulatorConsoleContainer \r\n                model={candidateTestObject}\r\n                currentQuestion={currentQuestion} \r\n                onResponseChange={ (choiceKey) => this.props.ResponseChange(choiceKey, currentQuestion, candidateTestObject.response_meta.mcqs)}\r\n                goToPrevious={() => this.props.GoToPrevious(currentQuestion, candidateTestObject.response_meta.mcqs)}\r\n                goToNext={() => this.props.GoToNext(currentQuestion, candidateTestObject.response_meta.mcqs)}\r\n                submitAnswers={() => this.props.SubmitAnswers(candidateTestObject)}/>\r\n        }\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state.questionSimulatorConsoleReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    GetInvitation: (invitationId) => dispatch(GetInvitation(invitationId)),\r\n    LoadExamSimulator: (invitationId) => dispatch(LoadExamSimulator(invitationId)),\r\n    ResponseChange: (choiceKey, currentQuestion, mcqList) => dispatch(ResponseChange(choiceKey, currentQuestion, mcqList)),\r\n    GoToPrevious: (currentQuestion, mcqs) => dispatch(GoToPrevious(currentQuestion, mcqs)),\r\n    GoToNext: (currentQuestion, mcqs) => dispatch(GoToNext(currentQuestion, mcqs)),\r\n    SubmitAnswers: (candidateTestObject) => dispatch(SubmitAnswers(candidateTestObject))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SimulatorConsoleContainer);\r\n","import config from '../config';\r\nimport repository from '../repository';\r\nimport AuthHelper from '../AuthHelper';\r\n\r\nexport const LOAD_EXAM_SIMULATOR_SUCCESS = 'LOAD_EXAM_SIMULATOR_SUCCESS';\r\nexport const GO_TO_PREVIOUS = 'GO_TO_PREVIOUS';\r\nexport const GO_TO_NEXT = 'GO_TO_NEXT';\r\nexport const CANDIDATE_RESPONSE_CHANGED = 'CANDIDATE_RESPONSE_CHANGED';\r\nexport const SUBMIT_ANSWERS_SUCCESS = 'SUBMIT_ANSWERS_SUCCESS';\r\nexport const SET_CANDIDATE_INFO = 'SET_CANDIDATE_INFO';\r\nexport const INVITATION_FETCH_FAILED = 'INVITATION_FETCH_FAILED';\r\n\r\nexport const ResponseChange = (responseKey, currentQuestion, mcqList) => dispatch => {\r\n    console.log('response changed', currentQuestion);\r\n    let mcqsWithResponses = [];\r\n    let mcqWithResponse = {\r\n        mcqId: currentQuestion.id\r\n    }\r\n    mcqList.map((mcqItem, index) => {\r\n        if (mcqItem.mcqId === currentQuestion.mcqId) {\r\n            if(mcqItem.candidateResponse &&\r\n                mcqItem.candidateResponse.responseKeys) {\r\n                    let removeKeyIndex = mcqItem.candidateResponse.responseKeys.indexOf(responseKey);\r\n                    if(removeKeyIndex > -1) {\r\n                        mcqItem.candidateResponse.responseKeys.slice(removeKeyIndex, 1);\r\n                    }\r\n                    else {\r\n                        mcqItem.candidateResponse.responseKeys.push(responseKey);\r\n                    }\r\n                    \r\n                    dispatch({\r\n                        type: CANDIDATE_RESPONSE_CHANGED,\r\n                        payload: mcqItem\r\n                    })\r\n                }\r\n        }\r\n    });\r\n}\r\n\r\nexport const GetInvitation = (invitationId) => dispatch => {\r\n    return new Promise((resolve, reject) => {\r\n        let url = config.instance.getCandidateApiUrl() + 'invitaion';\r\n        let invitationModel = {\r\n            invitationId: invitationId\r\n        };\r\n        repository.getData(url)\r\n                    .then((res) => {\r\n                        AuthHelper.Login(res);\r\n                        let userInfo = AuthHelper.GetUserInfo();\r\n                        dispatch({\r\n                            type: SET_CANDIDATE_INFO,\r\n                            payload: userInfo\r\n                        });\r\n                        resolve(true);\r\n                    })\r\n                    .catch((err) => {\r\n                        dispatch({\r\n                            type: INVITATION_FETCH_FAILED,\r\n                            payload: err\r\n                        });\r\n                        reject(err);\r\n                    });\r\n\r\n    })\r\n}\r\n\r\nexport const LoadExamSimulator = (invitationId) => dispatch => {\r\n    let userInfo = AuthHelper.GetUserInfo();\r\n    let url = config.instance.getCandidateApiUrl() + 'startTest';\r\n    let invitationModel = {\r\n        invitationId: invitationId\r\n    };\r\n    repository.saveData(url, invitationModel)\r\n            .then((res) => {\r\n                dispatch({\r\n                    type: LOAD_EXAM_SIMULATOR_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            })\r\n}\r\n\r\nexport const GoToPrevious = (currentQuestion, mcqList) => dispatch => {\r\n    if(mcqList && mcqList.length > 1){\r\n        let questionOrderIndex = currentQuestion.questionOrderIndex;\r\n        if(questionOrderIndex <= 0) return;\r\n        let newQuestion = mcqList.find((item) => {\r\n            return item.questionOrderIndex === questionOrderIndex - 1;\r\n        });\r\n        dispatch({\r\n            type: GO_TO_PREVIOUS,\r\n            payload: newQuestion \r\n        });\r\n    }\r\n}\r\n\r\nexport const GoToNext = (currentQuestion, mcqList) => dispatch => {\r\n    if(mcqList && mcqList.length > 1){\r\n        let questionOrderIndex = currentQuestion.questionOrderIndex;\r\n        if(questionOrderIndex >= mcqList.length-1) return;\r\n        let newQuestion = mcqList.find((item) => {\r\n            return item.questionOrderIndex === questionOrderIndex + 1;\r\n        });\r\n        dispatch({\r\n            type: GO_TO_NEXT,\r\n            payload: newQuestion \r\n        });\r\n    }\r\n}\r\n\r\nexport const SubmitAnswers = (candidateTestObject) => dispatch => {\r\n    let url = config.instance.getCandidateApiUrl() + 'submitAnswers';\r\n    \r\n    repository.saveData(url, candidateTestObject)\r\n            .then((res) => {\r\n                dispatch({\r\n                    type: SUBMIT_ANSWERS_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n            })\r\n}","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader, Typography } from '@material-ui/core';\r\n\r\n\r\nconst RmaCustomerDetails = (props) => {\r\n    let { model } = props;\r\n    // console.log('rmacustomermodel', model);\r\n    // console.log('model.telephone ? model.telephone : ',model.telephone ? model.telephone : '');\r\n    return (\r\n        <div>\r\n            {model && \r\n        <Card style={{padding: \"1%\"}}>\r\n            <CardHeader \r\n                title={<Typography variant=\"body2\">Customer Details</Typography>}>\r\n            </CardHeader>\r\n            <CardContent>\r\n                    <form  noValidate autoComplete=\"off\">\r\n                \r\n                    <FormControl variant=\"outlined\" style={styles.fullWidth}>\r\n                        <TextField\r\n                            id=\"outlined-name\"\r\n                            label=\"Customer Name\"\r\n                            value={model.customerName ? model.customerName : ''}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'customerName')}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl variant=\"outlined\" style={styles.fullWidth}>\r\n                        <TextField\r\n                            id=\"outlined-address\"\r\n                            label=\"Address\"\r\n                            value={model.address ? model.address : ''}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'address')}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl variant=\"outlined\" style={styles.width50}>\r\n                        <TextField\r\n                            id=\"outlined-tel\"\r\n                            label=\"Tel\"\r\n                            value={model.telephone ? model.telephone : ''}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'telephone')}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl variant=\"outlined\" style={styles.width50}>\r\n                        <TextField\r\n                            id=\"outlined-fax\"\r\n                            label=\"Fax\"\r\n                            value={model.fax ? model.fax : ''}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'fax')}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl variant=\"outlined\" style={styles.width50}>\r\n                        <TextField\r\n                            id=\"outlined-email\"\r\n                            label=\"Email\"\r\n                            value={model.email ? model.email : ''}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'email')}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl variant=\"outlined\" style={styles.width50}>\r\n                        <TextField\r\n                            id=\"outlined-contact\"\r\n                            label=\"Contact Person\"\r\n                            value={model.contactPerson ? model.contactPerson : ''}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'contactPerson')}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n            </form>\r\n            </CardContent>\r\n        </Card>}\r\n        </div>\r\n    );\r\n}\r\nexport default RmaCustomerDetails;\r\n\r\nconst styles={\r\n    fullWidth: {\r\n        width: '100%',\r\n        paddingLeft: '2%',\r\n        // paddingRight: '2%'\r\n    },\r\n    width50: {\r\n        width: '40%',\r\n        paddingLeft: '2%',\r\n        paddingRight: '2%'\r\n    },\r\n    actionButton: {\r\n        marginLeft: '70%'\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader, DialogContent, Dialog, DialogTitle, DialogActions, Divider, Grid } from '@material-ui/core';\r\nimport { MenuItem, OutlinedInput, Select, InputLabel, IconButton } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Close, Add } from '@material-ui/icons';\r\n\r\nclass AddRmaProduct extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n        \r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n      this.props.onSubmit(this.props.model);\r\n      this.handleClose();\r\n    }\r\n    \r\n    render = () => {\r\n        let { model } = this.props;\r\n        // console.log('current_product', model);\r\n        return (\r\n            <div>\r\n            {model && \r\n            <Card>   \r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}><Add /></Button>\r\n                <Dialog\r\n                fullWidth\r\n                maxWidth='lg'\r\n                open={this.state.open}\r\n                onClose={this.handleClose}\r\n                >\r\n                <DialogTitle onClose={this.handleClose}>Add product to RMA</DialogTitle>\r\n                <Divider />\r\n                <DialogContent style={{padding: '4%'}}>\r\n                    <form  noValidate autoComplete=\"off\">\r\n                        <Grid container spacing={16}>\r\n                            <Grid item sm={12} xs={12} md={5}>\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <TextField\r\n                                        id=\"outlined-modelNo\"\r\n                                        label=\"Model No\"\r\n                                        className={styles.dense}\r\n                                        value={model.modelNo ? model.modelNo : ''}\r\n                                        onChange={(e) => this.props.onFieldChange(e.target.value, 'modelNo')}\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </FormControl>\r\n                                </Grid>\r\n                            <Grid item sm={12} xs={12} md={5}>\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <TextField\r\n                                        id=\"outlined-desc\"\r\n                                        label=\"Description\"\r\n                                        className={styles.dense}\r\n                                        value={model.description ? model.description : ''}\r\n                                        onChange={(e) => this.props.onFieldChange(e.target.value, 'description')}\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </FormControl>\r\n                                </Grid>\r\n                                <Grid item sm={12} xs={12} md={5}>\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <TextField\r\n                                        id=\"outlined-qty\"\r\n                                        label=\"Qty\"\r\n                                        className={styles.dense}\r\n                                        value={model.quantity ? model.quantity : 0}\r\n                                        onChange={(e) => this.props.onFieldChange(e.target.value, 'quantity')}\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </FormControl>\r\n                                </Grid>\r\n                            <Grid item sm={12} xs={12} md={5}>\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <TextField\r\n                                        id=\"outlined-invoice\"\r\n                                        label=\"Invoice#\"\r\n                                        className={styles.dense}\r\n                                        value={model.invoiceNo ? model.invoiceNo : ''}\r\n                                        onChange={(e) => this.props.onFieldChange(e.target.value, 'invoiceNo')}\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </FormControl>\r\n                                </Grid>\r\n                            <Grid item sm={12} xs={12} md={5}>\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <TextField\r\n                                        id=\"outlined-deliveryChallanNo\"\r\n                                        label=\"Delivery Challan#\"\r\n                                        className={styles.dense}\r\n                                        value={model.deliveryChallanNo ? model.deliveryChallanNo : ''}\r\n                                        onChange={(e) => this.props.onFieldChange(e.target.value, 'deliveryChallanNo')}\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </FormControl>\r\n                                </Grid>\r\n                            <Grid item sm={12} xs={12} md={5}>\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <TextField\r\n                                        id=\"outlined-serialNo\"\r\n                                        label=\"Serial#\"\r\n                                        className={styles.dense}\r\n                                        value={model.serialNo ? model.serialNo : ''}\r\n                                        onChange={(e) => this.props.onFieldChange(e.target.value, 'serialNo')}\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </FormControl>\r\n                                </Grid>\r\n                            <Grid item sm={12} xs={12} md={5}>\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <TextField\r\n                                        id=\"outlined-productUseAddress\"\r\n                                        label=\"Location of product use\"\r\n                                        className={styles.dense}\r\n                                        value={model.productUseAddress ? model.productUseAddress : ''}\r\n                                        onChange={(e) => this.props.onFieldChange(e.target.value, 'productUseAddress')}\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </FormControl>\r\n                                </Grid>\r\n                            <Grid item sm={12} xs={12} md={5}>\r\n                                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                                    <TextField\r\n                                        id=\"outlined-failureDescription\"\r\n                                        label=\"Failure Description\"\r\n                                        multiline\r\n                                        rows=\"4\"\r\n                                        className={styles.dense}\r\n                                        value={model.failureDescription ? model.failureDescription : ''}\r\n                                        onChange={(e) => this.props.onFieldChange(e.target.value, 'failureDescription')}\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </FormControl>\r\n                                </Grid>\r\n                                </Grid>\r\n                    </form>\r\n                    </DialogContent>\r\n                    <Divider />\r\n                    <DialogActions>\r\n                        <Button variant=\"contained\" size=\"small\" color=\"default\"\r\n                                        onClick={ () => this.handleSubmit(this.props.model)}>\r\n                            Add Product\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Card>}\r\n        \r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst styles = {\r\n    formControl: {\r\n        width: '80%',\r\n        marginBottom: '4%'\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n};\r\nexport default AddRmaProduct;","import React, { Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport { CardHeader, CardContent, Typography } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport AddRmaProduct from './AddRmaProduct';\r\n\r\nconst RmaProductList = (props) => {\r\n    return (\r\n        <Card style={{padding: \"1%\"}}>\r\n            <CardHeader \r\n                action={\r\n                    <AddRmaProduct\r\n                        onSubmit={ (product) => props.onAddRmaProduct(product) }\r\n                        model={props.current_product}\r\n                        onFieldChange={ (val, field) => props.onProductFieldChange(val, field) } \r\n                        />\r\n                }         \r\n            title={<Typography variant=\"body2\">{`Products ${props.productList ? \"(\"+props.productList.length+\")\" : \"\" }`}</Typography>}>\r\n            </CardHeader>\r\n            <CardContent>\r\n                <Table>\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <CustomTableCell>Model No.</CustomTableCell>\r\n                        <CustomTableCell>Description</CustomTableCell>\r\n                        <CustomTableCell>Qty</CustomTableCell>\r\n                        <CustomTableCell>Invoice#</CustomTableCell>\r\n                        <CustomTableCell>Delivery Challan#</CustomTableCell>\r\n                        <CustomTableCell>Serial#</CustomTableCell>\r\n                        <CustomTableCell>Location of product use (complete address)</CustomTableCell>\r\n                        <CustomTableCell>Failure Description</CustomTableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {props.productList.map((product, index) => (\r\n                        <Fragment key={index}>\r\n                        <TableRow >\r\n                            <CustomTableCell>{product.modelNo}</CustomTableCell>\r\n                            <CustomTableCell>{product.description}</CustomTableCell>\r\n                            <CustomTableCell>{product.quantity}</CustomTableCell>\r\n                            <CustomTableCell>{product.invoiceNo}</CustomTableCell>\r\n                            <CustomTableCell>{product.deliveryChallanNo}</CustomTableCell>\r\n                            <CustomTableCell>{product.serialNo}</CustomTableCell>\r\n                            <CustomTableCell>{product.productUseAddress}</CustomTableCell>\r\n                            <CustomTableCell>{product.failureDescription}</CustomTableCell>\r\n                        </TableRow>\r\n                        </Fragment>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>\r\n            {(!props.productList || props.productList.length === 0) &&\r\n            <Typography variant=\"subtitle1\" align=\"center\">\r\n                Please add product details\r\n            </Typography>}\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\nconst CustomTableCell = withStyles(theme => ({\r\n    head: {\r\n    //   backgroundColor: theme.palette.common.black,\r\n    //   color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nexport default RmaProductList;\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader, Typography } from '@material-ui/core';\r\n\r\n\r\nconst RmaVendorDetails = (props) => {\r\n    let { model } = props;\r\n    return (\r\n        <div>\r\n            {model && \r\n        <Card style={{padding: \"1%\"}}>\r\n            <CardHeader \r\n                title={<Typography variant=\"caption\">If the product was not bought from us, please mention the details of purchase-</Typography>}>\r\n            </CardHeader>\r\n            <CardContent>\r\n                    <form  noValidate autoComplete=\"off\">\r\n                <FormControl variant=\"outlined\" style={styles.halfWidth}>\r\n                    <TextField\r\n                        id=\"outlined-purchaseDate\"\r\n                        label=\"Date of Purchase\"\r\n                        className={styles.dense}\r\n                        value={model.purchaseDate ? model.purchaseDate : ''}\r\n                        onChange={(e) => props.onFieldChange(e.target.value, 'purchaseDate')}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                </FormControl>\r\n                <FormControl variant=\"outlined\" style={styles.halfWidth}>\r\n                    <TextField\r\n                        id=\"outlined-vendorName\"\r\n                        label=\"Vendor / Supplier Name\"\r\n                        className={styles.dense}\r\n                        value={model.vendorName ? model.vendorName : ''}\r\n                        onChange={(e) => props.onFieldChange(e.target.value, 'vendorName')}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                </FormControl>\r\n                <FormControl variant=\"outlined\" style={styles.formControl}>\r\n                    <TextField\r\n                        id=\"outlined-address\"\r\n                        label=\"Location / Address\"\r\n                        multiline\r\n                        rows=\"4\"\r\n                        className={styles.dense}\r\n                        value={model.address ? model.address : ''}\r\n                        onChange={(e) => props.onFieldChange(e.target.value, 'address')}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                </FormControl>\r\n            </form>\r\n            </CardContent>\r\n        </Card>}\r\n        </div>\r\n    );\r\n}\r\nexport default RmaVendorDetails;\r\n\r\nconst styles = {\r\n    formControl: {\r\n        width: '90%',\r\n        marginLeft: '2%'\r\n    },\r\n    halfWidth: {\r\n        width: '40%',\r\n        marginLeft: '2%'\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n};","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst RmaTermsAndConditions = (props) => {\r\n    return (\r\n        <div className=\"divContainer\">\r\n        <Typography variant=\"body1\">1) All Accessories including cables &amp; power supply must only be returned back along with the product unless otherwise specified by us. </Typography>\r\n        <Typography variant=\"body1\">2) Warranty claim may be rejected if product is physically damaged. </Typography>\r\n        <Typography variant=\"body1\">3) All road tax, Octroi or any entry tax is payable by customer. </Typography>\r\n        <Typography variant=\"body1\">4) Customer should send the product to our warehouse address mentioned below on freight prepaid basis. </Typography>\r\n        </div>\r\n    );\r\n}\r\nexport default RmaTermsAndConditions;","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst HiTechAddress = (props) => {\r\n    return (\r\n        <div className=\"divContainer\">\r\n            <Typography variant=\"caption\">\r\n            Highness Microelectronics Pvt. Ltd.<br></br>\r\n            RMA Department (RMA#XXXXXXXX)</Typography>\r\n            <Typography variant=\"body2\">\r\n            8-C, 1 st Floor, New Tejpal Industrial Estate.,<br></br>\r\n            Kurla Andheri Road, Sakinaka, Mumbai - 400072.</Typography><br></br>\r\n        </div>\r\n    );\r\n}\r\nexport default HiTechAddress;\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader, Typography } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Loading from '../components/lib/LoadingComponent';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport RmaCustomerDetails from './RmaCustomerDetails';\r\nimport RmaProductList from './RmaProductList';\r\nimport RmaVendorDetails from './RmaVendorDetails';\r\nimport RmaTermsAndConditions from './RmaTermsAndConditions';\r\nimport HiTechAddress from './HiTechAddress';\r\nimport Book from '@material-ui/icons/Book';\r\n\r\nconst AddRmaRequestComponent = (props) => {\r\n    let { model } = props;\r\n    model.customerDetails = !model.customerDetails ? {} : model.customerDetails;\r\n    model.productList = !model.productList ? [] : model.productList;\r\n    model.current_product = !model.current_product ? {} : model.current_product;\r\n    model.vendorDetails = !model.vendorDetails ? {} : model.vendorDetails;\r\n    \r\n    let display = (props) ? 'block' : 'none';\r\n    return (\r\n        <Card style={{padding: \"1%\"}}>\r\n                    <CardHeader \r\n                        avatar={\r\n                            <Avatar aria-label=\"Recipe\" style={styles.avatar}>\r\n                                <Book />\r\n                            </Avatar>\r\n                            }\r\n                            title=\"Create RMA Request\">\r\n                    </CardHeader>\r\n                <CardContent>\r\n                    <RmaCustomerDetails\r\n                        model={model.customerDetails}\r\n                        onFieldChange={(val, field) => props.onFieldChange(val, field, model)}\r\n                    />\r\n                    <br></br>\r\n                    <RmaProductList\r\n                        current_product={model.current_product}\r\n                        productList={model.productList}\r\n                        onProductFieldChange={(val, field) => props.onProductFieldChange(val, field, model)}\r\n                        onAddRmaProduct={(productItem) => props.onAddRmaProduct(productItem, model)}\r\n                        />\r\n                    <br></br>\r\n                    <RmaVendorDetails\r\n                        model={model.vendorDetails}\r\n                        onFieldChange={(val, field) => props.onVendorDetailsFieldChange(val, field, model)}\r\n                        />\r\n                    <RmaTermsAndConditions />\r\n                    <HiTechAddress />\r\n                    \r\n                    <FormControl variant=\"outlined\" style={styles.width50}>\r\n                        <TextField\r\n                            id=\"outlined-emailTo\"\r\n                            label=\"Notify At\"\r\n                            value={model.emailTo ? model.emailTo : ''}\r\n                            onChange={(e) => props.onFieldChange(e.target.value, 'emailTo', model)}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                </CardContent>\r\n                <CardActions style={styles.actionButton}>\r\n                    <Button variant=\"contained\" size=\"large\" color=\"primary\" \r\n                                onClick={ () => props.onSubmit(model) }>\r\n                                Submit\r\n                    </Button>\r\n                </CardActions>\r\n        </Card>\r\n    );\r\n}\r\nexport default AddRmaRequestComponent;\r\nconst styles={\r\n    fullWidth: {\r\n        width: '100%',\r\n        paddingLeft: '2%',\r\n        // paddingRight: '2%'\r\n    },\r\n    width50: {\r\n        width: '40%',\r\n        paddingLeft: '2%',\r\n        paddingRight: '2%'\r\n    },\r\n    actionButton: {\r\n        // marginLeft: '70%'\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n}","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport { CardHeader, CardContent, Typography, Button } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst RmaRequestList = (props) => {\r\n    let { rmaRequests } = props;\r\n    let requestList = rmaRequests;\r\n    if(rmaRequests && rmaRequests.length > 0) {\r\n        requestList = rmaRequests.reverse();\r\n    }\r\n    return (\r\n        <Card style={{padding: \"1%\"}}>\r\n            <CardHeader \r\n                action={\r\n                    <Link to={ { pathname: \"/createRma\" }}>\r\n                        <Button variant=\"contained\" size=\"large\" color=\"primary\" >\r\n                                Create RMA Request\r\n                        </Button>\r\n                    </Link>\r\n                }         \r\n            title={<Typography variant=\"body2\">{`RMA Requests ${props.rmaRequests ? \"(\"+props.rmaRequests.length+\")\" : \"\" }`}</Typography>}>\r\n            </CardHeader>\r\n            <CardContent>\r\n                <Table>\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <CustomTableCell>Customer Name</CustomTableCell>\r\n                        <CustomTableCell>Email</CustomTableCell>\r\n                        <CustomTableCell>Contact Person</CustomTableCell>\r\n                        <CustomTableCell>Telephone</CustomTableCell>\r\n                        <CustomTableCell></CustomTableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {requestList && requestList.map((rmaRequest, index) => (\r\n                        <Fragment key={index}>\r\n                        <TableRow >\r\n                            <CustomTableCell>{rmaRequest.customerDetails.customerName}</CustomTableCell>\r\n                            <CustomTableCell>{rmaRequest.customerDetails.email}</CustomTableCell>\r\n                            <CustomTableCell>{rmaRequest.customerDetails.contactPerson}</CustomTableCell>\r\n                            <CustomTableCell>{rmaRequest.customerDetails.telephone}</CustomTableCell>\r\n                            <CustomTableCell align=\"right\" scope=\"row\" component=\"th\">\r\n                                <Button color=\"primary\" onClick={() => props.onViewRma(rmaRequest)}>View</Button>\r\n                            </CustomTableCell>\r\n                        </TableRow>\r\n                        </Fragment>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>\r\n            {(!props.rmaRequests || props.rmaRequests.length === 0) &&\r\n            <Typography variant=\"subtitle1\" align=\"center\">\r\n                No RMA requests found\r\n            </Typography>}\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\nconst CustomTableCell = withStyles(theme => ({\r\n    head: {\r\n    //   backgroundColor: theme.palette.common.black,\r\n    //   color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nexport default RmaRequestList;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AddRmaRequestComponent from './AddRmaRequest';\r\nimport RmaRequestList from './RmaRequestList';\r\nimport {    AddRmaRequest, FetchRmaRequests, \r\n            CloseSnackbar, CurrentRmaRequestFieldChange,\r\n            ProductFieldChange, VendorDetailsFieldChange,\r\n            AddProductToRma, InitializeRmaFields,\r\n            OpenSnackbar } from './RmaRequestActions';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SnackbarComponent from '../components/lib/SnackbarComponent';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardHeader } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nclass AddRmaRequestContainer extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        this.reload();\r\n    }\r\n\r\n    reload = () => {\r\n        this.props.InitializeRmaFields();\r\n    }\r\n\r\n    componentWillUpdate = () => {\r\n        console.log('component updated');\r\n        if(this.props.success_message) {\r\n            console.log('this.props.success_message');\r\n            this.props.history.push({\r\n                pathname: '/rmaRequests'\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = () => {\r\n        console.log('component will receive props');\r\n        if(this.props.success_message) {\r\n            console.log('receive props this.props.success_message');\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        return(\r\n            <div>\r\n                {this.props.current_rma_request && \r\n                    <AddRmaRequestComponent \r\n                        onSubmit={ (model) => this.props.AddRmaRequest(model) }\r\n                        model={this.props.current_rma_request}\r\n                        onFieldChange={ (val, field, model) => this.props.CurrentRmaRequestFieldChange(val, field, model) } \r\n                        onVendorDetailsFieldChange={ (val, field, model) => this.props.VendorDetailsFieldChange(val, field, model) } \r\n                        onAddRmaProduct={(productItem, model) => this.props.AddProductToRma(productItem, model) }\r\n                        onProductFieldChange={(val, field, model) => this.props.ProductFieldChange(val, field, model)}\r\n                        />\r\n                }\r\n                {this.props.success_message && !this.props.saving && \r\n                    <SnackbarComponent \r\n                        openSnack={true} handleClose={() => this.props.CloseSnackbar()} \r\n                        snackMessage={\"RMA request Saved Successfully!\"} /> \r\n                }\r\n                {this.props.saving && \r\n                    <SnackbarComponent \r\n                        openSnack={true} handleClose={() => this.props.CloseSnackbar()} \r\n                        snackMessage={\"Saving...\"} /> \r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.rmaReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    AddRmaRequest: (model) => dispatch(AddRmaRequest(model)),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n    CurrentRmaRequestFieldChange: (val, field, model) => dispatch(CurrentRmaRequestFieldChange(val, field, model)),\r\n    ProductFieldChange: (val, field, model) => dispatch(ProductFieldChange(val, field, model)),\r\n    VendorDetailsFieldChange: (val, field, model) => dispatch(VendorDetailsFieldChange(val, field, model)),\r\n    AddProductToRma: (productItem, model) => dispatch(AddProductToRma(productItem, model)),\r\n    InitializeRmaFields: () => dispatch(InitializeRmaFields())\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddRmaRequestContainer);\r\nconst styles={\r\n    fullWidth: {\r\n        width: '100%',\r\n        paddingLeft: '2%',\r\n        paddingRight: '2%'\r\n    },\r\n    width50: {\r\n        width: '50%',\r\n        paddingLeft: '2%',\r\n        paddingRight: '2%'\r\n    },\r\n    actionButton: {\r\n        marginLeft: '70%'\r\n    },\r\n    avatar: {\r\n        backgroundColor: '#555'\r\n    }\r\n}","import axios from 'axios';\r\nimport config from '../config';\r\nimport repository from '../repository';\r\n\r\nexport const INITIALIZE_RMA_FIELDS = 'INITIALIZE_RMA_FIELDS';\r\nexport const ADD_RMAREQUESTS_BEGIN = 'ADD_RMAREQUESTS_BEGIN';\r\nexport const ADD_RMAREQUESTS_SUCCESS = 'ADD_RMAREQUESTS_SUCCESS';\r\nexport const ADD_RMAREQUESTS_FAIL = 'ADD_RMAREQUESTS_FAIL';\r\nexport const FETCH_RMAREQUESTS_BEGIN = 'FETCH_RMAREQUESTS_BEGIN';\r\nexport const FETCH_RMAREQUESTS_SUCCESS = 'FETCH_RMAREQUESTS_SUCCESS';\r\nexport const FETCH_RMAREQUEST_SUCCESS = 'FETCH_RMAREQUEST_SUCCESS';\r\nexport const FETCH_RMAREQUEST_FAIL = 'FETCH_RMAREQUEST_FAIL';\r\nexport const SELECT_RMA_REQUEST = 'SELECT_RMA_REQUEST';\r\nexport const GOBACK_TO_ALL_REQUESTS = 'GOBACK_TO_ALL_REQUESTS';\r\nexport const FETCH_RMAREQUESTS_FAIL = 'FETCH_RMAREQUESTS_FAIL';\r\nexport const UPDATE_RMAREQUESTS_BEGIN = 'UPDATE_RMAREQUESTS_BEGIN';\r\nexport const UPDATE_RMAREQUESTS_SUCCESS = 'UPDATE_RMAREQUESTS_SUCCESS';\r\nexport const UPDATE_RMAREQUESTS_FAIL = 'UPDATE_RMAREQUESTS_FAIL';\r\nexport const CURRENT_RMAREQUESTS_FIELD_CHANGE = 'CURRENT_RMAREQUESTS_FIELD_CHANGE';\r\nexport const CURRENT_RMAREQUESTS_FIELD_CHANGE_END = 'CURRENT_RMAREQUESTS_FIELD_CHANGE_END';\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\r\nexport const OPEN_SNACKBAR = 'OPEN_SNACKBAR';\r\n\r\nexport const InitializeRmaFields = () => dispatch => {\r\n    dispatch({\r\n        type: INITIALIZE_RMA_FIELDS\r\n    })\r\n} \r\n\r\nexport const CurrentRmaRequestFieldChange = (val, field, model) => dispatch => {\r\n    if(field === 'emailTo'){\r\n        model.emailTo = val;\r\n    }\r\n    else {\r\n        if(!model.customerDetails) model.customerDetails = {};\r\n        model.customerDetails[field] = val;\r\n        model.field_version = model.field_version++;\r\n    }\r\n    dispatch({\r\n        type: CURRENT_RMAREQUESTS_FIELD_CHANGE,\r\n        payload: model\r\n    });\r\n}\r\n\r\nexport const AddProductToRma = (productItem, model) => dispatch => {\r\n    if(!model.productList) model.productList = [];\r\n    model.productList.push(productItem);\r\n    console.log('model.productList', model.productList.length);\r\n    dispatch({\r\n        type: CURRENT_RMAREQUESTS_FIELD_CHANGE,\r\n        payload: model\r\n    });\r\n}\r\n\r\nexport const VendorDetailsFieldChange = (val, field, model) => dispatch => {\r\n    if(!model.vendorDetails) model.vendorDetails = {};\r\n    model.vendorDetails[field] = val;\r\n    dispatch({\r\n        type: CURRENT_RMAREQUESTS_FIELD_CHANGE,\r\n        payload: model\r\n    });\r\n}\r\n\r\nexport const ProductFieldChange = (val, field, model) => dispatch => {\r\n    if(!model.current_product) model.current_product = {};\r\n    model.current_product[field] = val;\r\n    dispatch({\r\n        type: CURRENT_RMAREQUESTS_FIELD_CHANGE,\r\n        payload: model\r\n    });\r\n}\r\n\r\nexport const AddRmaRequest = (rmaRequestModel) => dispatch => {\r\n    dispatch({\r\n        type: ADD_RMAREQUESTS_BEGIN\r\n    });\r\n    let url = config.hitechApiUrl + 'rmaRequest';\r\n    console.log('action model');\r\n    console.log(rmaRequestModel);\r\n    //return;\r\n    repository.saveData(url, rmaRequestModel)\r\n        .then((res) => {\r\n            console.log('rma request saved: ' + res);\r\n            dispatch({\r\n                type: ADD_RMAREQUESTS_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: ADD_RMAREQUESTS_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const UpdateRmaRequest = (rmaRequestModel) => dispatch => {\r\n    dispatch({\r\n        type: UPDATE_RMAREQUESTS_BEGIN\r\n    });\r\n    let url = config.hitechApiUrl + 'rmaRequest';\r\n    repository.updateData(url, rmaRequestModel)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: UPDATE_RMAREQUESTS_SUCCESS\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: UPDATE_RMAREQUESTS_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const FetchRmaRequests = () => dispatch => {\r\n    dispatch({\r\n        type: FETCH_RMAREQUESTS_BEGIN\r\n    });\r\n    let url = config.hitechApiUrl + 'rmaRequests';\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            console.log('rma requests fetched');\r\n            dispatch({\r\n                type: FETCH_RMAREQUESTS_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_RMAREQUESTS_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const FetchRmaRequest = (rmaRequestId) => dispatch => {\r\n    \r\n    let url = config.hitechApiUrl + 'rmaRequest/' + rmaRequestId;\r\n    repository.getData(url)\r\n        .then((res) => {\r\n            console.log('rma single request fetched');\r\n            dispatch({\r\n                type: FETCH_RMAREQUEST_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: FETCH_RMAREQUEST_FAIL,\r\n                payload: err\r\n            });\r\n        });\r\n}\r\n\r\nexport const SelectRmaRequest = (rmaRequest) => dispatch => {\r\n    dispatch({\r\n        type: SELECT_RMA_REQUEST,\r\n        payload: rmaRequest\r\n    })\r\n}\r\n\r\nexport const GoBackToAllRequests = () => dispatch => {\r\n    dispatch({\r\n        type: GOBACK_TO_ALL_REQUESTS\r\n    })\r\n}\r\n\r\nexport const CloseSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: CLOSE_SNACKBAR\r\n    });\r\n}\r\nexport const OpenSnackbar = () => dispatch => {\r\n    dispatch({\r\n        type: OPEN_SNACKBAR\r\n    });\r\n}\r\n","import React from 'react';\r\nimport { Card, CardHeader, CardContent, Grid, Paper, Button, Divider, Chip } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom';\r\nimport RmaProductList from './RmaProductList';\r\nimport RmaVendorDetails from './RmaVendorDetails';\r\n\r\nclass ViewRmaRequest extends React.Component {\r\n    \r\n    renderCustomerDetails = (customerDetails) => {\r\n        return (\r\n            <Grid container spacing={16} style={styles.group}>\r\n                        <Grid item sm={3}>\r\n                            Customer Name\r\n                        </Grid>\r\n                        <Grid item sm={3}>\r\n                            <strong>{customerDetails.customerName}</strong>\r\n                        </Grid>\r\n                        <Grid item sm={3}>\r\n                            Contact Person\r\n                        </Grid>\r\n                        <Grid item sm={3}>\r\n                            <strong>{customerDetails.contactPerson}</strong>\r\n                        </Grid>\r\n                        <Grid item sm={3}>\r\n                            Telephone\r\n                        </Grid>\r\n                        <Grid item sm={3}>\r\n                            <strong>{customerDetails.telephone}</strong>\r\n                        </Grid>\r\n                        <Grid item sm={3}>\r\n                            Email\r\n                        </Grid>\r\n                        <Grid item sm={3}>\r\n                            <strong>{customerDetails.email}</strong>\r\n                        </Grid>\r\n\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    renderVendorDetails = (vendorDetails) => {\r\n        return (\r\n            <Grid container spacing={16} style={styles.group}> \r\n            <Grid item sm={3}>\r\n            Purchase Date\r\n        </Grid>\r\n        <Grid item sm={3}>\r\n            <strong>{vendorDetails.purchaseDate}</strong>\r\n        </Grid>\r\n        <Grid item sm={3}>\r\n            Vendor Name\r\n        </Grid>\r\n        <Grid item sm={3}>\r\n            <strong>{vendorDetails.vendorName}</strong>\r\n        </Grid>\r\n        <Grid item sm={3}>\r\n            Location\r\n        </Grid>\r\n        <Grid item sm={3}>\r\n            <strong>{vendorDetails.address}</strong>\r\n        </Grid>\r\n        </Grid>\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        let { model } = this.props;\r\n        console.log('view rma', model);\r\n        return (\r\n            <Card>\r\n                <CardHeader\r\n                    action={\r\n                        // <Link to={ { pathname: \"/rmaRequests\" }}>\r\n                            <Button color=\"primary\" size=\"small\" \r\n                                onClick={() => this.props.onBackToAllRequests()}>\r\n                                    Back to all requests\r\n                            </Button>\r\n                        // </Link>\r\n                    }         \r\n                    title={`RMA Request # ${model['$loki']}`}\r\n                />\r\n                <CardContent>\r\n                    <Grid container spacing={16}>\r\n                        {this.renderCustomerDetails(model.customerDetails)}\r\n                        <br></br>\r\n                        {this.renderVendorDetails(model.vendorDetails)}\r\n                        <RmaProductList\r\n                            productList={model.productList}\r\n                        />\r\n                        {model.emailTo && <Grid item sm={3}>\r\n                            <Chip label={`Notified to: ${model.emailTo}`}></Chip>\r\n                        </Grid>}\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\nexport default ViewRmaRequest;\r\nconst styles = {\r\n    group: {\r\n        padding: '2%'\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AddRmaRequestComponent from './AddRmaRequest';\r\nimport RmaRequestList from './RmaRequestList';\r\nimport {    FetchRmaRequests, SelectRmaRequest, \r\n            CloseSnackbar, GoBackToAllRequests,\r\n            OpenSnackbar } from './RmaRequestActions';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SnackbarComponent from '../components/lib/SnackbarComponent';\r\nimport { Link } from 'react-router-dom';\r\nimport ViewRmaRequest from './ViewRmaRequest';\r\n\r\nclass RmaRequestListContainer extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        console.log('did mount');\r\n        this.reload();\r\n    }\r\n\r\n    componentWillUpdate = () => {\r\n        if(this.props.success_message !== '') {\r\n            this.props.FetchRmaRequests();\r\n        }\r\n    }\r\n\r\n    reload = () => {\r\n        this.props.FetchRmaRequests();\r\n    }\r\n\r\n    render = () => {\r\n        let rmaRequests = [];\r\n        rmaRequests = this.props.rmaRequests;\r\n        if(rmaRequests)console.log('rmaRequests length', rmaRequests.length);\r\n        return(\r\n            <div>\r\n                {this.props.selectedRmaRequestModel === null &&\r\n                <RmaRequestList \r\n                    rmaRequests={rmaRequests}\r\n                    onViewRma={(rmaRequest) => this.props.SelectRmaRequest(rmaRequest)} \r\n                />}\r\n                {this.props.selectedRmaRequestModel &&\r\n                <ViewRmaRequest\r\n                    model={this.props.selectedRmaRequestModel}\r\n                    onBackToAllRequests={() => this.props.GoBackToAllRequests()}\r\n                />}\r\n                <SnackbarComponent \r\n                    openSnack={this.props.snack_open} handleClose={() => this.props.CloseSnackbar()} \r\n                    snackMessage={\"Data fetched Successfully!\"} /> \r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    ...state.rmaReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    FetchRmaRequests: () => dispatch(FetchRmaRequests()),\r\n    SelectRmaRequest: (rmaRequest) => dispatch(SelectRmaRequest(rmaRequest)),\r\n    GoBackToAllRequests: () => dispatch(GoBackToAllRequests()),\r\n    CloseSnackbar: () => dispatch(CloseSnackbar()),\r\n    OpenSnackbar: () => dispatch(OpenSnackbar()),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RmaRequestListContainer);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport AuthHelper from '../../AuthHelper';\r\n\r\nconst PrivateRoute = ({ component: Component, authed, ...rest}) => {\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            render={(props) => isAuthorized() === true\r\n                ? <Component {...props} />\r\n                : <Redirect to={{pathname: '/login'}} />}\r\n        />\r\n    );\r\n}\r\nconst isAuthorized = () => {\r\n    let token = localStorage.getItem('auth-token');\r\n    if(token) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport default PrivateRoute;","import React from 'react';\r\nimport AddCategoryComponent from './Categories/AddCategory';\r\nimport AddCandidateComponent from './Candidates/AddCandidate';\r\nimport DashboardComponent from './Dashboard';\r\nimport UsersComponent from '../Containers/User/UserContainer';\r\nimport LoginComponent from './lib/LoginComponent';\r\nimport LocalLoginComponent from './lib/LocalLoginComponent';\r\nimport User401 from '../Containers/User/User401';\r\nimport UserForbidden from '../Containers/User/UserForbidden';\r\nimport ResourceNotFound from '../Containers/User/ResourceNotFound';\r\nimport { Route } from 'react-router-dom'\r\nimport CategoriesContainer from '../Containers/CategoryContainer';\r\nimport OrgContainer from '../Containers/Org/OrgContainer';\r\nimport SkillsContainer from '../Containers/SkillContainer';\r\nimport TestConsoleContainer from '../Containers/TestConsole/TestConsoleContainer';\r\nimport McqContainer from '../Containers/McqContainer';\r\nimport BulkMcq from '../components/Mcq/BulkUpload';\r\nimport CandidatesContainer from '../Containers/CandidateContainer';\r\nimport AdminTestContainer from '../Containers/AdminTestContainer';\r\nimport McqList from '../components/Mcq/McqList';\r\nimport CandidateList from '../components/Candidates/CandidateList';\r\nimport InviteConsoleContainer from '../Containers/InviteConsole/InviteConsoleContainer';\r\nimport InviteContainer from '../Containers/InviteConsole/InviteContainer';\r\nimport SimulatorConsoleContainer from '../Containers/Simulator/SimulatorConsoleContainer';\r\nimport SimulatorShell from '../Containers/Simulator/SimulatorShell';\r\n\r\nimport AddRmaRequest from '../HiTech/AddRmaRequestContainer';\r\nimport RmaRequestList from '../HiTech/RmaRequestListContainer';\r\nimport ViewRmaRequest from '../HiTech/ViewRmaRequest';\r\n\r\nimport PrivateRoute from '../components/lib/PrivateRoute';\r\n\r\nconst Routes = (props) => {\r\n    return (\r\n        <div>\r\n            <PrivateRoute exact path=\"/\" component={DashboardComponent} />\r\n            <Route path=\"/login\" component={LocalLoginComponent} />\r\n            <Route path=\"/unauthorizedUser\" component={User401} />\r\n            <Route path=\"/userForbidden\" component={UserForbidden} />\r\n            <Route path=\"/notFound\" component={ResourceNotFound} />\r\n            <PrivateRoute path=\"/dashboard\" component={DashboardComponent} />\r\n            <PrivateRoute path=\"/tests\" component={AdminTestContainer} />\r\n            {/* <Route path=\"/testConsole\" component={TestConsoleContainer} /> */}\r\n            <PrivateRoute path=\"/testConsole\" component={TestConsoleContainer} />\r\n            <PrivateRoute path=\"/inviteConsole\" component={InviteContainer} />\r\n            <PrivateRoute path=\"/invitations\" component={InviteConsoleContainer} />\r\n            <PrivateRoute path=\"/mcqs\" component={McqList} />\r\n            <PrivateRoute path=\"/addMcq\" component={McqContainer} />\r\n            <PrivateRoute path=\"/bulkMcq\" component={BulkMcq} />\r\n            <PrivateRoute path=\"/categories\" component={CategoriesContainer} />\r\n            <PrivateRoute path=\"/orgs\" component={OrgContainer} />\r\n            <PrivateRoute path=\"/skills\" component={SkillsContainer} />\r\n            <PrivateRoute path=\"/addCategory\" component={AddCategoryComponent} />\r\n            {/* <Route path=\"/candidates\" component={CandidateList} /> */}\r\n            {/* <Route path=\"/addCandidate\" component={CandidatesContainer} /> */}\r\n            <PrivateRoute path=\"/users\" component={UsersComponent} />\r\n\r\n            <Route path=\"/startTest/:inviteid\" component={SimulatorConsoleContainer} />\r\n            <Route path=\"/testLanding/:inviteid\" component={SimulatorShell} />\r\n\r\n            {/* Routes for HiTech*/}\r\n            <Route path=\"/rmaRequests\" component={RmaRequestList} />\r\n            <Route path=\"/createRma\" component={AddRmaRequest} />\r\n            <Route path=\"/viewRma\" component={ViewRmaRequest} />\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Routes;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { SetUserInfo, LogoutCurrentUser } from '../actions/UserActions';\r\n\r\nimport Header from './layouts/Header';\r\nimport SideDrawer from './layouts/SideDrawer';\r\nimport SimulatorShell from '../Containers/Simulator/SimulatorShell';\r\nimport LocalLoginComponent from '../components/lib/LocalLoginComponent';\r\nimport LoadingComponent from '../components/lib/LoadingComponent';\r\nimport Routes from './Routes';\r\nimport AuthHelper from '../AuthHelper';\r\nimport config from '../config';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing.unit * 7 + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing.unit * 9 + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 3,\r\n  },\r\n});\r\n\r\nclass Shell extends React.Component {\r\n  state = {\r\n    open: false,\r\n    config: {}\r\n  };\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n  \r\n  componentDidMount = () => {\r\n    config.instance.initialize()\r\n        .then((res) => {\r\n            this.setState({\r\n              config: res\r\n            });\r\n        })\r\n\r\n  }\r\n  Logout = () => {\r\n    this.props.LogoutCurrentUser();\r\n  }\r\n\r\n  render() {\r\n        const { classes, theme, isTokenExpired } = this.props;\r\n        let user = AuthHelper.GetUserInfo();\r\n\r\n        let { config } = this.state;\r\n        if(!config.site_title) {\r\n          return (\r\n            <LoadingComponent />\r\n          )\r\n        }\r\n\r\n        if(user && user.role === 'candidate') {\r\n            return (\r\n              <div className={classes.root}>\r\n                  <CssBaseline />\r\n                  <Header classes={classes} \r\n                        openState={this.state.open} \r\n                        isTickerRequired={true}\r\n                        isDrawerRequired={false}\r\n                        isLogoutButtonRequired={false}\r\n                        isTokenExpired={isTokenExpired}\r\n                        />\r\n                    <Router>\r\n                      <main className={classes.content}>\r\n                        <div className={classes.toolbar} />\r\n                            <Routes />\r\n                      </main>\r\n                    </Router>\r\n              </div>\r\n            );\r\n        }\r\n        return (\r\n          <div className={classes.root}>\r\n            <CssBaseline />\r\n            <Header classes={classes} \r\n                    openState={this.state.open} \r\n                    onDrawerOpen={this.handleDrawerOpen}\r\n                    onLogout={() => this.Logout()}\r\n                    isTickerRequired={false}\r\n                    isDrawerRequired={true}\r\n                    isLogoutButtonRequired={true}\r\n                    isTokenExpired={isTokenExpired}\r\n                    />\r\n            <Router>\r\n              <SideDrawer classes={classes} \r\n                      openState={this.state.open} \r\n                      onDrawerClose={this.handleDrawerClose}\r\n                      theme={theme}\r\n                      />\r\n              <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                    <Routes />\r\n              </main>\r\n            </Router>\r\n          </div>\r\n          );\r\n    }\r\n}\r\n\r\nShell.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state.userReducer\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  SetUserInfo: (userInfo) => dispatch(SetUserInfo(userInfo)),\r\n  LogoutCurrentUser: () => dispatch(LogoutCurrentUser())\r\n});\r\nexport default withStyles(styles, { withTheme: true })(connect(mapStateToProps, mapDispatchToProps)(Shell));\r\n","import { ADD_CATEGORY_SUCCESS, ADD_CATEGORY_FAIL, SELECT_CATEGORY,\r\n         UPDATE_CATEGORY_SUCCESS, UPDATE_CATEGORY_FAIL,\r\n         FETCH_CATEGORIES_SUCCESS, \r\n         FETCH_CATEGORIES_FAIL,\r\n         OPEN_SNACKBAR, \r\n         CLOSE_SNACKBAR, \r\n         CURRENT_CATEGORY_FIELD_CHANGE,\r\n         CURRENT_CATEGORY_FIELD_CHANGE_END, \r\n         CATEGORY_SEARCH_BEGIN,\r\n         CATEGORY_SEARCH_SUCCESS} from \"../actions/CategoryActions\";\r\n\r\nconst initial_current_Category = {\r\n    id: 0, category_meta: {title:'',description:''}\r\n}\r\n\r\nexport default (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ADD_CATEGORY_SUCCESS:\r\n        {\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                current_category: {title:'',description:''},\r\n                success_message: 'Category added successfully'\r\n            }\r\n        }\r\n        case UPDATE_CATEGORY_FAIL:\r\n        case ADD_CATEGORY_FAIL:\r\n        {\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        }\r\n        case SELECT_CATEGORY:\r\n        {\r\n            return {\r\n                ...state,\r\n                field_updated: !state.field_updated,\r\n                editMode: true,\r\n                current_category: action.payload\r\n            }\r\n        }\r\n        case UPDATE_CATEGORY_SUCCESS:\r\n        {\r\n            return {\r\n                ...state,\r\n                editMode: false,\r\n                current_category: {title:'',description:''},\r\n                success_message: 'Category Updated Successfully'\r\n            }\r\n        }\r\n        case CURRENT_CATEGORY_FIELD_CHANGE:\r\n        {\r\n            \r\n            return {\r\n                ...state,\r\n                field_updated: true,\r\n                current_category: action.payload\r\n            }\r\n        }\r\n        case CURRENT_CATEGORY_FIELD_CHANGE_END:\r\n        {\r\n            return {\r\n                ...state,\r\n                field_updated: false\r\n            }\r\n        }\r\n        case FETCH_CATEGORIES_SUCCESS:\r\n        {\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                editMode: false,\r\n                current_category: {id: 0, category_meta: {title:'',description:''}},\r\n                success_message: '',\r\n                search_enabled: false,\r\n                categoryList: action.payload\r\n            }\r\n        }\r\n        case CATEGORY_SEARCH_BEGIN:\r\n        {\r\n            return {\r\n                ...state,\r\n                search_enabled: !state.search_enabled,\r\n                search_term: '',\r\n                filteredCategories: state.categoryList\r\n            }\r\n        }\r\n        case CATEGORY_SEARCH_SUCCESS:\r\n        {   \r\n            return {\r\n                ...state,\r\n                search_term: action.payload.searchTerm,\r\n                filteredCategories: action.payload.filteredCategories\r\n            }\r\n        }\r\n        case FETCH_CATEGORIES_FAIL:\r\n        {\r\n            return {\r\n                ...state,\r\n                current_category: initial_current_Category,\r\n                error: action.payload\r\n            }\r\n        }\r\n        case OPEN_SNACKBAR:\r\n        {\r\n            return {\r\n                ...state,\r\n                snack_open: true\r\n            }\r\n        }\r\n        case CLOSE_SNACKBAR:\r\n        {\r\n            return {\r\n                ...state,\r\n                snack_open: false\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import { ADD_ORG_SUCCESS, ADD_ORG_FAIL, SELECT_ORG,\r\n    UPDATE_ORG_SUCCESS, UPDATE_ORG_FAIL,\r\n    FETCH_ORGS_SUCCESS, \r\n    FETCH_ORGS_FAIL,\r\n    CURRENT_ORG_FIELD_CHANGE,\r\n    CURRENT_ORG_FIELD_CHANGE_END, \r\n} from \"../actions/OrgActions\";\r\n\r\nconst initial_current_org = {\r\nid: 0, org_meta: {name:'',city:''}\r\n}\r\n\r\nexport default (state = {}, action) => {\r\nswitch(action.type) {\r\n   case ADD_ORG_SUCCESS:\r\n   {\r\n       return {\r\n           ...state,\r\n           error: null,\r\n           current_org: {name:'',city:''},\r\n           success_message: 'Org added successfully'\r\n       }\r\n   }\r\n   case UPDATE_ORG_FAIL:\r\n   case ADD_ORG_FAIL:\r\n   {\r\n       return {\r\n           ...state,\r\n           error: action.payload\r\n       }\r\n   }\r\n   case SELECT_ORG:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: !state.field_updated,\r\n           editMode: true,\r\n           current_org: action.payload\r\n       }\r\n   }\r\n   case UPDATE_ORG_SUCCESS:\r\n   {\r\n       return {\r\n           ...state,\r\n           editMode: false,\r\n           current_org: {name:'',city:''},\r\n           success_message: 'Org Updated Successfully'\r\n       }\r\n   }\r\n   case CURRENT_ORG_FIELD_CHANGE:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: true,\r\n           current_org: action.payload\r\n       }\r\n   }\r\n   case CURRENT_ORG_FIELD_CHANGE_END:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: false\r\n       }\r\n   }\r\n   case FETCH_ORGS_SUCCESS:\r\n   {\r\n       return {\r\n           ...state,\r\n           error: null,\r\n           editMode: false,\r\n           current_org: {id: 0, org_meta: {name:'',city:''}},\r\n           success_message: '',\r\n           search_enabled: false,\r\n           orgList: action.payload\r\n       }\r\n   }\r\n   case FETCH_ORGS_FAIL:\r\n   {\r\n       return {\r\n           ...state,\r\n           current_org: initial_current_org,\r\n           error: action.payload\r\n       }\r\n   }\r\n   default: {\r\n       return state;\r\n   }\r\n}\r\n}","import { ADD_RMAREQUESTS_BEGIN, ADD_RMAREQUESTS_SUCCESS, ADD_RMAREQUESTS_FAIL, SELECT_CATEGORY,\r\n    UPDATE_RMAREQUESTS_SUCCESS, UPDATE_RMAREQUESTS_FAIL,\r\n    FETCH_RMAREQUESTS_SUCCESS, \r\n    FETCH_RMAREQUESTS_FAIL,\r\n    FETCH_RMAREQUEST_SUCCESS,\r\n    OPEN_SNACKBAR, \r\n    CLOSE_SNACKBAR, \r\n    CURRENT_RMAREQUESTS_FIELD_CHANGE,\r\n    CURRENT_RMAREQUESTS_FIELD_CHANGE_END, \r\n    INITIALIZE_RMA_FIELDS,\r\n    SELECT_RMA_REQUEST, GOBACK_TO_ALL_REQUESTS\r\n    } from '../HiTech/RmaRequestActions'\r\nimport config from '../config';\r\n\r\nconst initial_state = {\r\n    customerDetails: {},\r\n    productList: [],\r\n    current_product: {},\r\n    vendorDetails: {},\r\n    emailTo: '', //config.hitechConfig.notifyEmailId,\r\n    field_version: 0\r\n}\r\n\r\nexport default (state = {}, action) => {\r\nswitch(action.type) {\r\n    case INITIALIZE_RMA_FIELDS:\r\n    {\r\n        return {\r\n            current_rma_request: initial_state\r\n        }\r\n    }\r\n    case ADD_RMAREQUESTS_BEGIN:\r\n    {\r\n        return {\r\n            ...state,\r\n            error: null,\r\n            saving: true\r\n        }\r\n    }\r\n   case ADD_RMAREQUESTS_SUCCESS:\r\n   {\r\n       return {\r\n           ...state,\r\n           error: null,\r\n           current_rma_request: {},\r\n           success_message: 'RMA Request submitted successfully',\r\n           saving: false\r\n       }\r\n   }\r\n   case UPDATE_RMAREQUESTS_FAIL:\r\n   case ADD_RMAREQUESTS_FAIL:\r\n   {\r\n       return {\r\n           ...state,\r\n           error: action.payload\r\n       }\r\n   }\r\n   case UPDATE_RMAREQUESTS_SUCCESS:\r\n   {\r\n       return {\r\n           ...state,\r\n           success_message: 'Category Updated Successfully'\r\n       }\r\n   }\r\n   case CURRENT_RMAREQUESTS_FIELD_CHANGE:\r\n   {\r\n    //    console.log('rma field change reducer');\r\n    //    console.log(action.payload);\r\n       let newState = action.payload;\r\n       \r\n       return {\r\n           ...state,\r\n           current_rma_request: {\r\n               ...state.current_rma_request,\r\n               customerDetails: newState.customerDetails,\r\n               productList: newState.productList,\r\n               current_product: newState.current_product,\r\n               vendorDetails: newState.vendorDetails\r\n           }\r\n       }\r\n    //    return {\r\n    //        ...state,\r\n    //        field_updated: true,\r\n    //        current_rma_request: action.payload\r\n    //    }\r\n   }\r\n   case FETCH_RMAREQUESTS_SUCCESS:\r\n   {\r\n       console.log('fetch rma requests reducer');\r\n       console.log(action.payload);\r\n       \r\n       return {\r\n           ...state,\r\n           error: null,\r\n           success_message: '',\r\n           selectedRmaRequestModel: null,\r\n           rmaRequests: action.payload\r\n       }\r\n   }\r\n   case SELECT_RMA_REQUEST: \r\n   {\r\n       return {\r\n           ...state,\r\n           selectedRmaRequestModel: action.payload\r\n       }\r\n   }\r\n   case GOBACK_TO_ALL_REQUESTS:\r\n   {\r\n       return {\r\n           ...state,\r\n           selectedRmaRequestModel: null\r\n       }\r\n   }\r\n   case FETCH_RMAREQUEST_SUCCESS:\r\n   {\r\n    console.log('fetch single rma requests reducer');\r\n    console.log(action.payload);\r\n        \r\n        return {\r\n            ...state,\r\n            error: null,\r\n            success_message: '',\r\n            viewRmaRequestModel: action.payload\r\n        }\r\n   }\r\n   case FETCH_RMAREQUESTS_FAIL:\r\n   {\r\n       return {\r\n           ...state,\r\n           error: action.payload\r\n       }\r\n   }\r\n   case OPEN_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: true\r\n       }\r\n   }\r\n   case CLOSE_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: false\r\n       }\r\n   }\r\n   default: {\r\n       return state;\r\n   }\r\n}\r\n}","import { combineReducers } from 'redux';\r\nimport categoryReducer from \"./categoryReducer\";\r\nimport skillReducer from \"./skillReducer\";\r\nimport mcqReducer from \"./mcqReducer\";\r\nimport candidateReducer from './candidateReducer';\r\nimport adminTestReducer from './adminTestReducer';\r\nimport testConsoleReducer from './testConsoleReducer';\r\nimport inviteConsoleReducer from './inviteConsoleReducer';\r\nimport userReducer from './userReducer';\r\nimport questionSimulatorConsoleReducer from './questionSimulatorConsoleReducer';\r\nimport orgReducer from './orgReducer';\r\n\r\nimport rmaReducer from '../HiTech/rmaReducer';\r\n\r\nconst appReducer = combineReducers({\r\n    categoryReducer,\r\n    skillReducer,\r\n    mcqReducer,\r\n    candidateReducer,\r\n    adminTestReducer,\r\n    testConsoleReducer,\r\n    inviteConsoleReducer,\r\n    userReducer,\r\n    questionSimulatorConsoleReducer,\r\n    orgReducer,\r\n    rmaReducer\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n    if(action.type === 'LOGOUT_CURRENT_USER') {\r\n        state = undefined;\r\n    }\r\n\r\n    return appReducer(state, action);\r\n}\r\n\r\nexport default rootReducer;","import { ADD_SKILL_SUCCESS, ADD_SKILL_FAIL,\r\n    FETCH_SKILLS_SUCCESS, \r\n    FETCH_SKILLS_FAIL,\r\n    OPEN_SNACKBAR, \r\n    CLOSE_SNACKBAR, \r\n    CURRENT_SKILL_FIELD_CHANGE,\r\n    CURRENT_SKILL_FIELD_CHANGE_END, \r\n    SKILL_SEARCH_BEGIN,\r\n    SKILL_SEARCH_SUCCESS} from \"../actions/SkillActions\";\r\n\r\n\r\nexport default (state = {}, action) => {\r\nswitch(action.type) {\r\n   case ADD_SKILL_SUCCESS:\r\n   {\r\n       return {\r\n           ...state,\r\n           error: null,\r\n           current_skill: {skill:''},\r\n           success_message: 'Skill added successfully'\r\n       }\r\n   }\r\n   case ADD_SKILL_FAIL:\r\n   {\r\n       return {\r\n           ...state,\r\n           error: action.payload\r\n       }\r\n   }\r\n   case CURRENT_SKILL_FIELD_CHANGE:\r\n   {       \r\n       return {\r\n           ...state,\r\n           field_updated: true,\r\n           current_skill: action.payload\r\n       }\r\n   }\r\n   case CURRENT_SKILL_FIELD_CHANGE_END:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: false\r\n       }\r\n   }\r\n   case FETCH_SKILLS_SUCCESS:\r\n   {\r\n       return {\r\n           ...state,\r\n           error: null,\r\n           current_skill: {id: 0, skill_meta: {skill:''}},\r\n           editMode: false,\r\n           success_message: '',\r\n           search_enabled: false,\r\n           skillList: action.payload\r\n       }\r\n   }\r\n   case SKILL_SEARCH_BEGIN:\r\n   {\r\n       return {\r\n           ...state,\r\n           search_enabled: !state.search_enabled,\r\n           search_term: '',\r\n           filteredSkills: state.skillList\r\n       }\r\n   }\r\n   case SKILL_SEARCH_SUCCESS:\r\n   {   \r\n       return {\r\n           ...state,\r\n           search_term: action.payload.searchTerm,\r\n           filteredSkills: action.payload.filteredSkills\r\n       }\r\n   }\r\n   case FETCH_SKILLS_FAIL:\r\n   {\r\n        return {\r\n           ...state,\r\n           current_skill: {skill:''},\r\n           error: action.payload\r\n       }\r\n   }\r\n   case OPEN_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: true\r\n       }\r\n   }\r\n   case CLOSE_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: false\r\n       }\r\n   }\r\n   default: {\r\n       return state;\r\n   }\r\n}\r\n}","import { ADD_MCQ_SUCCESS, ADD_MCQ_FAIL, SELECT_MCQ,\r\n    UPDATE_MCQ_SUCCESS, UPDATE_MCQ_FAIL, FETCH_MCQ_FAIL,\r\n    DELETE_MCQ_SUCCESS, DELETE_MCQ_FAIL,\r\n    FETCH_MCQ_SUCCESS, \r\n    OPEN_SNACKBAR, \r\n    CLOSE_SNACKBAR, \r\n    CURRENT_MCQ_FIELD_CHANGE,\r\n    CURRENT_MCQ_FIELD_CHANGE_END, \r\n    MCQ_SEARCH_BEGIN, MCQ_SEARCH_END,\r\n    MCQ_SEARCH_SUCCESS,\r\n    CHOICE_ADDED_TO_MCQ, \r\n    CURRENT_ANSWER_FIELD_CHANGE\r\n} from \"../actions/McqActions\";\r\nimport { FETCH_CATEGORIES_SUCCESS } from '../actions/CategoryActions'; \r\nimport { FETCH_SKILLS_SUCCESS } from \"../actions/SkillActions\";\r\n\r\nexport default (state = {}, action) => {\r\nswitch(action.type) {\r\n   case ADD_MCQ_SUCCESS:\r\n   {\r\n       return {\r\n            ...state,\r\n            error: null,\r\n            current_mcq: { \r\n                id: 0,\r\n                mcq_meta: {\r\n                        question:'',\r\n                        description:'',\r\n                        category: '',\r\n                        skill: '',\r\n                        minimumExperience: 0,\r\n                        maximumExperience: 10,\r\n                        choices: []\r\n                    }\r\n                },\r\n            snack_open: true,\r\n            success_message: 'MCQ added successfully'\r\n       }\r\n   }\r\n   case DELETE_MCQ_FAIL:\r\n   case UPDATE_MCQ_FAIL:\r\n   case ADD_MCQ_FAIL:\r\n   {\r\n       return {\r\n           ...state,\r\n           error: action.payload\r\n       }\r\n   }\r\n   case SELECT_MCQ:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: !state.field_updated,\r\n           editMode: true,\r\n           current_MCQ: action.payload\r\n       }\r\n   }\r\n   case UPDATE_MCQ_SUCCESS:\r\n   {\r\n       return {\r\n           ...state,\r\n           editMode: false,\r\n           current_mcq: {\r\n                id: 0,\r\n                mcq_meta: { \r\n                    question:'',\r\n                    description:'',\r\n                    category: '',\r\n                    skill: '',\r\n                    minimumExperience: 0,\r\n                    maximumExperience: 10,\r\n                    choices: []\r\n                }\r\n           },\r\n           success_message: 'MCQ Updated Successfully'\r\n       }\r\n   }\r\n   case DELETE_MCQ_SUCCESS:\r\n   {\r\n       return {\r\n           ...state,\r\n           editMode: false,\r\n           snack_open: true,\r\n           current_mcq: {\r\n                id: 0,\r\n                mcq_meta: { \r\n                    question:'',\r\n                    description:'',\r\n                    category: '',\r\n                    skill: '',\r\n                    minimumExperience: 0,\r\n                    maximumExperience: 10,\r\n                    choices: []\r\n                }\r\n            },\r\n           success_message: 'MCQ Deleted Successfully'\r\n       }\r\n   }\r\n   case CURRENT_MCQ_FIELD_CHANGE:\r\n   {\r\n       \r\n       return {\r\n           ...state,\r\n           field_updated: true,\r\n           current_mcq: action.payload\r\n       }\r\n   }\r\n   case CURRENT_MCQ_FIELD_CHANGE_END:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: false\r\n       }\r\n   }\r\n   case CURRENT_ANSWER_FIELD_CHANGE:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: !state.field_updated,\r\n           currentAnswer: action.payload\r\n       }\r\n   }\r\n   case FETCH_MCQ_SUCCESS:\r\n   {\r\n       \r\n       return {\r\n            ...state,\r\n            error: null,\r\n            current_mcq: {\r\n                id: 0,\r\n                mcq_meta: { \r\n                    question:'',\r\n                    description:'',\r\n                    category: '',\r\n                    skill: '',\r\n                    minimumExperience: 0,\r\n                    maximumExperience: 10,\r\n                    choices: []\r\n                }\r\n           },\r\n            snack_open: true,\r\n            success_message: action.payload.message,\r\n            mcqs: action.payload.data\r\n       }\r\n   }\r\n   case FETCH_SKILLS_SUCCESS:\r\n   {\r\n        \r\n        return {\r\n            ...state,\r\n            skills: action.payload\r\n        }\r\n   }\r\n   case FETCH_CATEGORIES_SUCCESS:\r\n   {\r\n       \r\n       return {\r\n           ...state,\r\n           error: null,\r\n           current_mcq: {\r\n                id: 0,\r\n                mcq_meta: { \r\n                    question:'',\r\n                    description:'',\r\n                    category: '',\r\n                    skill: '',\r\n                    minimumExperience: 0,\r\n                    maximumExperience: 10,\r\n                    choices: []\r\n                }\r\n            },\r\n           currentAnswer: {\r\n                content: '',\r\n                isCorrect: false\r\n           },\r\n           success_message: '',\r\n           search_enabled: false,\r\n           categories: action.payload\r\n       }\r\n   }\r\n   case CHOICE_ADDED_TO_MCQ: \r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: !state.field_updated,\r\n           current_mcq: action.payload,\r\n           currentAnswer: {\r\n               content: '',\r\n               isCorrect: false\r\n           }\r\n       }\r\n   }\r\n   case MCQ_SEARCH_BEGIN:\r\n   {\r\n       return {\r\n           ...state,\r\n           search_enabled: !state.search_enabled,\r\n           search_term: '',\r\n       }\r\n   }\r\n   case MCQ_SEARCH_END:\r\n   {\r\n       return {\r\n           ...state,\r\n           search_enabled: !state.search_enabled,\r\n           search_term: '',\r\n       }\r\n   }\r\n   case MCQ_SEARCH_SUCCESS:\r\n   {   \r\n       return {\r\n           ...state,\r\n           search_term: action.payload.searchTerm,\r\n           filteredCategories: action.payload.filteredCategories\r\n       }\r\n   }\r\n   case FETCH_MCQ_FAIL:\r\n   {\r\n       return {\r\n           ...state,\r\n           current_mcq: {\r\n            id: 0,\r\n            mcq_meta: { \r\n                    question:'',\r\n                    description:'',\r\n                    category: '',\r\n                    skill: '',\r\n                    minimumExperience: 0,\r\n                    maximumExperience: 10,\r\n                    choices: []\r\n                }\r\n            },\r\n           error: action.payload\r\n       }\r\n   }\r\n   case OPEN_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: true\r\n       }\r\n   }\r\n   case CLOSE_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: false\r\n       }\r\n   }\r\n   default: {\r\n       return state;\r\n   }\r\n}\r\n}","import { ADD_CANDIDATE_SUCCESS, ADD_CANDIDATE_FAIL, SELECT_CANDIDATE,\r\n    UPDATE_CANDIDATE_SUCCESS, UPDATE_CANDIDATE_FAIL, FETCH_CANDIDATE_FAIL,\r\n    FETCH_CANDIDATE_SUCCESS, \r\n    OPEN_SNACKBAR, \r\n    CLOSE_SNACKBAR, \r\n    CURRENT_CANDIDATE_FIELD_CHANGE,\r\n    CURRENT_CANDIDATE_FIELD_CHANGE_END, \r\n    CANDIDATE_SEARCH_BEGIN,\r\n    CANDIDATE_SEARCH_SUCCESS\r\n} from \"../actions/CandidateActions\";\r\nimport { FETCH_SKILLS_SUCCESS } from \"../actions/SkillActions\";\r\n\r\nexport default (state = {}, action) => {\r\nswitch(action.type) {\r\n   case ADD_CANDIDATE_SUCCESS:\r\n   {\r\n       return {\r\n           ...state,\r\n           error: null,\r\n           current_candidate: { \r\n               fullName:'',\r\n               email:'',\r\n               contactno: '',\r\n               experienceYears: 0,\r\n               experienceMonths: 10\r\n            },\r\n           success_message: 'CANDIDATE added successfully'\r\n       }\r\n   }\r\n   case UPDATE_CANDIDATE_FAIL:\r\n   case ADD_CANDIDATE_FAIL:\r\n   {\r\n       return {\r\n           ...state,\r\n           error: action.payload\r\n       }\r\n   }\r\n   case SELECT_CANDIDATE:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: !state.field_updated,\r\n           editMode: true,\r\n           current_CANDIDATE: action.payload\r\n       }\r\n   }\r\n   case UPDATE_CANDIDATE_SUCCESS:\r\n   {\r\n       return {\r\n           ...state,\r\n           editMode: false,\r\n           current_candidate: { \r\n                fullName:'',\r\n                email:'',\r\n                contactno: '',\r\n                skill: '',\r\n                experienceYears: 0,\r\n                experienceMonths: 10\r\n           },\r\n           success_message: 'CANDIDATE Updated Successfully'\r\n       }\r\n   }\r\n   case CURRENT_CANDIDATE_FIELD_CHANGE:\r\n   {\r\n       console.log('field change reducer');\r\n       console.log(action.payload);\r\n       \r\n       return {\r\n           ...state,\r\n           field_updated: true,\r\n           current_candidate: action.payload\r\n       }\r\n   }\r\n   case CURRENT_CANDIDATE_FIELD_CHANGE_END:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: false\r\n       }\r\n   }\r\n   case FETCH_CANDIDATE_SUCCESS:\r\n   {\r\n       console.log('fetch candidate reducer');\r\n       console.log(action.payload);\r\n       \r\n       return {\r\n           ...state,\r\n           error: null,\r\n           editMode: false,\r\n           current_candidate: { \r\n                fullName:'',\r\n                email:'',\r\n                contactno: '',\r\n                experienceYears: 0,\r\n                experienceMonths: 10\r\n           },\r\n           success_message: '',\r\n           search_enabled: false,\r\n           candidates: action.payload\r\n       }\r\n   }\r\n   case FETCH_SKILLS_SUCCESS:\r\n   {\r\n        console.log('fetch skills reducer');\r\n        console.log(action.payload);\r\n        \r\n        return {\r\n            ...state,\r\n            current_candidate: { \r\n                 fullName:'',\r\n                 email:'',\r\n                 contactno: '',\r\n                 experienceYears: 0,\r\n                 experienceMonths: 10\r\n            },\r\n            skills: action.payload\r\n        }\r\n   }\r\n   case CANDIDATE_SEARCH_BEGIN:\r\n   {\r\n       return {\r\n           ...state,\r\n           search_enabled: !state.search_enabled,\r\n           search_term: '',\r\n           filteredCandidates: state.contactnoList\r\n       }\r\n   }\r\n   case CANDIDATE_SEARCH_SUCCESS:\r\n   {   \r\n       return {\r\n           ...state,\r\n           search_term: action.payload.searchTerm,\r\n           filteredCandidates: action.payload.filteredCandidates\r\n       }\r\n   }\r\n   case FETCH_CANDIDATE_FAIL:\r\n   {\r\n       return {\r\n           ...state,\r\n           current_candidate: { \r\n                fullName:'',\r\n                email:'',\r\n                contactno: '',\r\n                experienceYears: 0,\r\n                experienceMonths: 10\r\n            },\r\n           error: action.payload\r\n       }\r\n   }\r\n   case OPEN_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: true\r\n       }\r\n   }\r\n   case CLOSE_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: false\r\n       }\r\n   }\r\n   default: {\r\n       return state;\r\n   }\r\n}\r\n}","import { ADD_TEST_SUCCESS, ADD_TEST_FAIL, SELECT_TEST,\r\n    UPDATE_TEST_SUCCESS, UPDATE_TEST_FAIL, FETCH_TESTS_FAIL,\r\n    FETCH_TESTS_SUCCESS, \r\n    OPEN_SNACKBAR, \r\n    CLOSE_SNACKBAR, \r\n    CURRENT_TEST_FIELD_CHANGE,\r\n    CURRENT_TEST_FIELD_CHANGE_END, \r\n    TEST_SEARCH_BEGIN,\r\n    TEST_SEARCH_SUCCESS,\r\n    CHOICE_ADDED_TO_TEST, \r\n    CURRENT_ANSWER_FIELD_CHANGE\r\n} from \"../actions/AdminTestActions\";\r\nimport { FETCH_CATEGORIES_SUCCESS } from '../actions/CategoryActions'; \r\nimport { FETCH_SKILLS_SUCCESS } from \"../actions/SkillActions\";\r\n\r\nexport default (state = {}, action) => {\r\nswitch(action.type) {\r\n   case ADD_TEST_SUCCESS:\r\n   {\r\n       return {\r\n            ...state,\r\n            error: null,\r\n            current_test: { \r\n                id: 0,\r\n                test_meta: {\r\n                skill:'',\r\n                testName:'',\r\n                duration: 90,\r\n                experienceYears: 5,\r\n                status: 'draft',\r\n                search_enabled: !state.search_enabled,\r\n                }\r\n            },\r\n            success_message: 'Test added successfully',\r\n            snack_open: true\r\n        }\r\n   }\r\n   case UPDATE_TEST_FAIL:\r\n   case ADD_TEST_FAIL:\r\n   {\r\n       return {\r\n           ...state,\r\n           error: action.payload\r\n       }\r\n   }\r\n   case SELECT_TEST:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: !state.field_updated,\r\n           editMode: true,\r\n           current_TEST: action.payload\r\n       }\r\n   }\r\n   case UPDATE_TEST_SUCCESS:\r\n   {\r\n       return {\r\n           ...state,\r\n           editMode: false,\r\n           current_mcq: { \r\n                question:'',\r\n                description:'',\r\n                category: '',\r\n                skill: '',\r\n                minimumExperience: 0,\r\n                maximumExperience: 10,\r\n                choices: []\r\n           },\r\n           success_message: 'TEST Updated Successfully'\r\n       }\r\n   }\r\n   case CURRENT_TEST_FIELD_CHANGE:\r\n   {\r\n       \r\n       return {\r\n           ...state,\r\n           field_updated: true,\r\n           current_mcq: action.payload\r\n       }\r\n   }\r\n   case CURRENT_TEST_FIELD_CHANGE_END:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: false\r\n       }\r\n   }\r\n   case CURRENT_ANSWER_FIELD_CHANGE:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: !state.field_updated,\r\n           currentAnswer: action.payload\r\n       }\r\n   }\r\n   case FETCH_TESTS_SUCCESS:\r\n   {\r\n       let arr = [];\r\n       if(action.payload && action.payload.length > 0) {\r\n           action.payload.map((item, index) => {\r\n               arr.push(item);\r\n           })\r\n       }\r\n       return {\r\n           ...state,\r\n           error: null,\r\n           editMode: !state.editMode,\r\n           current_test: { \r\n               id: 0,\r\n               test_meta: {\r\n                skill:'',\r\n                testName:'',\r\n                duration: 90,\r\n                experienceYears: 5,\r\n                status: 'draft',\r\n                search_enabled: !state.search_enabled,\r\n               }\r\n            },\r\n           success_message: '',\r\n           search_enabled: !state.search_enabled,\r\n           tests: arr\r\n       }\r\n   }\r\n   case FETCH_SKILLS_SUCCESS:\r\n   {\r\n        \r\n        return {\r\n            ...state,\r\n            skills: action.payload\r\n        }\r\n   }\r\n   case FETCH_CATEGORIES_SUCCESS:\r\n   {\r\n       \r\n       return {\r\n           ...state,\r\n           error: null,\r\n           current_test: {\r\n               id: 0,\r\n               test_meta: { \r\n                question:'',\r\n                description:'',\r\n                category: '',\r\n                skill: '',\r\n                choices: []\r\n               }\r\n           },\r\n           currentAnswer: {\r\n                content: '',\r\n                isCorrect: false\r\n           },\r\n           success_message: '',\r\n           search_enabled: false,\r\n           categories: action.payload\r\n       }\r\n   }\r\n   case CHOICE_ADDED_TO_TEST: \r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: !state.field_updated,\r\n           current_mcq: action.payload,\r\n           currentAnswer: {\r\n               content: '',\r\n               isCorrect: false\r\n           }\r\n       }\r\n   }\r\n   case TEST_SEARCH_BEGIN:\r\n   {\r\n       return {\r\n           ...state,\r\n           search_enabled: !state.search_enabled,\r\n           search_term: '',\r\n           filteredCategories: state.categoryList\r\n       }\r\n   }\r\n   case TEST_SEARCH_SUCCESS:\r\n   {   \r\n       return {\r\n           ...state,\r\n           search_term: action.payload.searchTerm,\r\n           filteredCategories: action.payload.filteredCategories\r\n       }\r\n   }\r\n   case FETCH_TESTS_FAIL:\r\n   {\r\n        let payload = action.payload;\r\n        if(payload && payload.errorStatus === '401') {\r\n            return {\r\n                ...state,\r\n                tests: [],\r\n                skills: [],\r\n                state_changed: !state.state_changed,\r\n                error: payload\r\n            }\r\n        }\r\n       return {\r\n           ...state,\r\n           current_mcq: { \r\n                question:'',\r\n                description:'',\r\n                category: '',\r\n                skill: '',\r\n                answerId: 0,\r\n                choices: []\r\n            },\r\n           error: null\r\n       }\r\n   }\r\n   case OPEN_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: true\r\n       }\r\n   }\r\n   case CLOSE_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: false\r\n       }\r\n   }\r\n   default: {\r\n       return state;\r\n   }\r\n}\r\n}","import { \r\n    FETCH_TEST_SUCCESS, \r\n    OPEN_SNACKBAR, \r\n    CLOSE_SNACKBAR,\r\n    PUBLISH_TEST_SUCCESS,\r\n    FETCH_TEST_MCQS_SUCCESS,\r\n    FETCH_TEST_CANDIDATES_SUCCESS\r\n} from \"../actions/TestConsoleActions\";\r\nimport { ADD_QUESTION_TO_TEST } from \"../actions/TestConsoleActions\";\r\n\r\nexport default (state = {}, action) => {\r\nswitch(action.type) {\r\n   case FETCH_TEST_SUCCESS:\r\n   {\r\n       let test = action.payload;\r\n       return {\r\n           ...state,\r\n           current_test: action.payload,\r\n       }\r\n   }\r\n   case FETCH_TEST_MCQS_SUCCESS:\r\n   {\r\n        let mcqs = action.payload;\r\n        return {\r\n            ...state,\r\n            selectedMcqs: action.payload,\r\n        }\r\n   }\r\n   case FETCH_TEST_CANDIDATES_SUCCESS:\r\n   {\r\n       return {\r\n           ...state,\r\n           candidates: action.payload\r\n       }\r\n   }\r\n   case ADD_QUESTION_TO_TEST:\r\n   {\r\n       let mcqToAdd = action.payload;\r\n       return {\r\n            ...state,\r\n            mcqAdded: !state.mcqAdded,\r\n            current_test: action.payload\r\n        }\r\n   }\r\n   case OPEN_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: true\r\n       }\r\n   }\r\n   case CLOSE_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: false\r\n       }\r\n   }\r\n   default: {\r\n       return state;\r\n   }\r\n}\r\n}","import { \r\n    SEND_TEST_INVITE_SUCCESS,\r\n    INVITE_INFO_FIELD_CHANGE,\r\n    FETCH_INVITES_SUCCESS, EVALUATION_SUCCESS\r\n} from \"../actions/InviteConsoleActions\";\r\nimport { FETCH_TEST_SUCCESS, \r\n    OPEN_SNACKBAR, CLOSE_SNACKBAR } from '../actions/TestConsoleActions';\r\n\r\nexport default (state = {}, action) => {\r\nswitch(action.type) {\r\n   case SEND_TEST_INVITE_SUCCESS:\r\n   {\r\n       return {\r\n            ...state,\r\n            inivteAdded: 'yes',\r\n            current_test: action.payload\r\n        }\r\n   }\r\n   case FETCH_INVITES_SUCCESS:\r\n   {\r\n        return {\r\n           ...state,\r\n           invitations: action.payload\r\n       }\r\n   }\r\n   case FETCH_TEST_SUCCESS:\r\n   {\r\n        let test = action.payload;\r\n        return {\r\n           ...state,\r\n           current_test: {\r\n               testId: (action.payload) ? action.payload.$loki : 0,\r\n               ...action.payload\r\n           },\r\n           inivteAdded: 'no',\r\n           inviteInfo: {}\r\n       }\r\n   }\r\n   case INVITE_INFO_FIELD_CHANGE:\r\n   {\r\n       \r\n       return {\r\n           ...state,\r\n           field_updated: !state.field_updated,\r\n           inviteInfo: action.payload\r\n       }\r\n   }\r\n   case EVALUATION_SUCCESS:\r\n   {\r\n       return {\r\n           ...state,\r\n           invitations: action.payload\r\n       }\r\n   }\r\n  case OPEN_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: true\r\n       }\r\n   }\r\n   case CLOSE_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: false\r\n       }\r\n   }\r\n   default: {\r\n       return state;\r\n   }\r\n}\r\n}","import { \r\n    ADD_USER_SUCCESS, \r\n    ADD_USER_FAIL, \r\n    SELECT_USER,\r\n    UPDATE_USER_SUCCESS, UPDATE_USER_FAIL, FETCH_USER_FAIL,\r\n    FETCH_USER_SUCCESS, \r\n    OPEN_SNACKBAR, \r\n    CLOSE_SNACKBAR, \r\n    CURRENT_USER_FIELD_CHANGE,\r\n    CURRENT_USER_FIELD_CHANGE_END, \r\n    USER_SEARCH_BEGIN,\r\n    USER_SEARCH_SUCCESS,\r\n    SET_USER_INFO_LOCAL,\r\n    LOGOUT_CURRENT_USER\r\n} from \"../actions/UserActions\";\r\n\r\nexport default (state = {}, action) => {\r\nswitch(action.type) {\r\n   case ADD_USER_SUCCESS:\r\n   {\r\n       return {\r\n            ...state,\r\n            error: null,\r\n            current_user: { \r\n                id: 0,\r\n                user_meta: { \r\n                    emailId: '',\r\n                    role: 'guest'\r\n                }\r\n            },\r\n            snack_open: true,\r\n            success_message: 'User added successfully'\r\n       }\r\n   }\r\n   case UPDATE_USER_FAIL:\r\n   case ADD_USER_FAIL:\r\n   {\r\n       return {\r\n           ...state,\r\n           error: action.payload\r\n       }\r\n   }\r\n   case SELECT_USER:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: !state.field_updated,\r\n           editMode: true,\r\n           current_USER: action.payload\r\n       }\r\n   }\r\n   case UPDATE_USER_SUCCESS:\r\n   {\r\n       return {\r\n           ...state,\r\n           editMode: false,\r\n           current_user: { \r\n                id: 0,\r\n                user_meta: { \r\n                    emailId: '',\r\n                    role: 'guest'\r\n                }\r\n           },\r\n           snack_open: true,\r\n           success_message: 'User Updated Successfully'\r\n       }\r\n   }\r\n   case CURRENT_USER_FIELD_CHANGE:\r\n   {\r\n       \r\n       return {\r\n           ...state,\r\n           field_updated: true,\r\n           current_user: action.payload\r\n       }\r\n   }\r\n   case CURRENT_USER_FIELD_CHANGE_END:\r\n   {\r\n       return {\r\n           ...state,\r\n           field_updated: false\r\n       }\r\n   }\r\n   case FETCH_USER_SUCCESS:\r\n   {\r\n       \r\n       return {\r\n           ...state,\r\n           error: null,\r\n           editMode: false,\r\n           current_user: {\r\n               id: 0,\r\n               user_meta: { \r\n                emailId: '',\r\n                role: 'guest'\r\n               }\r\n           },\r\n           success_message: '',\r\n           search_enabled: false,\r\n           users: action.payload\r\n       }\r\n   }\r\n   case USER_SEARCH_BEGIN:\r\n   {\r\n       return {\r\n           ...state,\r\n           search_enabled: !state.search_enabled,\r\n           search_term: '',\r\n           filteredCandidates: state.contactnoList\r\n       }\r\n   }\r\n   case USER_SEARCH_SUCCESS:\r\n   {   \r\n       return {\r\n           ...state,\r\n           search_term: action.payload.searchTerm,\r\n           filteredCandidates: action.payload.filteredCandidates\r\n       }\r\n   }\r\n   case FETCH_USER_FAIL:\r\n   {\r\n       return {\r\n           ...state,\r\n           current_USER: { \r\n                fullName:'',\r\n                email:'',\r\n                contactno: '',\r\n                experienceYears: 0,\r\n                experienceMonths: 10\r\n            },\r\n           error: action.payload\r\n       }\r\n   }\r\n   case SET_USER_INFO_LOCAL:\r\n   {\r\n       return {\r\n           ...state,\r\n           currentUserLocal: action.payload\r\n       }\r\n   }\r\n   case LOGOUT_CURRENT_USER:\r\n   {\r\n       return {\r\n           ...state,\r\n           currentUserLocal: null,\r\n           isTokenExpired: true\r\n       }\r\n   }\r\n   case OPEN_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: true\r\n       }\r\n   }\r\n   case CLOSE_SNACKBAR:\r\n   {\r\n       return {\r\n           ...state,\r\n           snack_open: false\r\n       }\r\n   }\r\n   default: {\r\n       return state;\r\n   }\r\n}\r\n}","import { LOAD_EXAM_SIMULATOR_SUCCESS, GO_TO_NEXT,\r\n            GO_TO_PREVIOUS, CANDIDATE_RESPONSE_CHANGED,\r\n            SUBMIT_ANSWERS_SUCCESS,\r\n            SET_CANDIDATE_INFO } from '../actions/QuestionSimulatorConsoleActions';\r\n\r\nexport default (state = {}, action) => {\r\n    switch(action.type) {\r\n        case SET_CANDIDATE_INFO:\r\n        {\r\n            return {\r\n                ...state,\r\n                candidateInfo: action.payload\r\n            }\r\n        }\r\n       case LOAD_EXAM_SIMULATOR_SUCCESS:\r\n       {\r\n           let testObject = action.payload;\r\n           return {\r\n               ...state,\r\n               candidateTestObject: testObject,\r\n               currentQuestion: (testObject && testObject.response_meta &&\r\n                                 testObject.response_meta.mcqs &&\r\n                                 testObject.response_meta.mcqs.length > 0) ?\r\n                                 testObject.response_meta.mcqs[0] : {}\r\n           }\r\n       }\r\n       case CANDIDATE_RESPONSE_CHANGED: \r\n       {\r\n           let currentQuestion = action.payload;\r\n           return {\r\n               ...state,\r\n               currentQuestion: currentQuestion\r\n           }\r\n       }\r\n       case SUBMIT_ANSWERS_SUCCESS:\r\n       {\r\n           return {\r\n               ...state,\r\n               candidateTestObject: null,\r\n               status: action.payload\r\n           }\r\n       }\r\n       case GO_TO_PREVIOUS:\r\n       {\r\n           return {\r\n               ...state,\r\n               currentQuestion: action.payload\r\n           }\r\n       }\r\n       case GO_TO_NEXT:\r\n       {\r\n           return {\r\n               ...state,\r\n               currentQuestion: action.payload\r\n           }\r\n       }\r\n       default: {\r\n           return state;\r\n       }    \r\n    }\r\n}","import React, { Component } from 'react';\r\n// import logo from './logo.svg';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport axios from 'axios';\r\n\r\nimport Shell from './components/Shell';\r\nimport SimulatorShell from './Containers/Simulator/SimulatorShell';\r\n\r\nimport './App.css';\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport configureStore from \"./store\";\r\nimport config from './config';\r\nimport AuthHelper from './AuthHelper';\r\nimport { Paper, Grid, Button, IconButton, Typography } from '@material-ui/core';\r\nimport { DeveloperMode } from '@material-ui/icons';\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isAuthenticated: true,\r\n      user: null,\r\n      token: ''\r\n    };\r\n  }\r\n\r\n\r\n  googleResponse = (response) => {\r\n        console.log('response', response);\r\n        const tokenBlob = new Blob([JSON.stringify({access_token: response.accessToken}, null, 2)], {type : 'application/json'});\r\n        const options = {\r\n            method: 'POST',\r\n            body: tokenBlob,\r\n            mode: 'cors',\r\n            cache: 'default'\r\n        };\r\n        let url = config.instance.getAdminApiUrl() + 'auth/google';\r\n        console.log('url', url);\r\n        console.log('access_token', response.access_token);\r\n        axios.get(url, {\r\n          headers: {\r\n            access_token: response.accessToken\r\n          }\r\n        }).then((res) => {\r\n          console.log('res',res);\r\n          const token = res.headers['x-auth-token'];\r\n          localStorage.setItem(\"auth-token\", token);\r\n          this.setState({\r\n            isAuthenticated: true,\r\n            user: res.data\r\n          });\r\n    });\r\n    // axios.post(url, tokenBlob)\r\n    //       .then(r => {\r\n    //         console.log('internal server response', r);\r\n    //         const token = r.headers.get('x-auth-token');\r\n    //         r.json().then(user => {\r\n    //             if (token) {\r\n    //                 this.setState({\r\n    //                   isAuthenticated: true,\r\n    //                   user,\r\n    //                   token\r\n    //                 });\r\n    //             }\r\n    //         });\r\n    //       });\r\n  };\r\n/*\r\nclient_id=\"350931387343-l9s3gs4fnmbj4rk4r4nfvh5siega0s5g.apps.googleusercontent.com\",\r\nclient_secret=\"nMaeSsEr8e9-j26dstZ6VAJc\"\r\n*/\r\n  render() {\r\n    const { isAuthenticated, user } = this.state;\r\n    console.log('user', user);\r\n    return (\r\n      <Provider store={configureStore()}>\r\n        <Shell />\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\nconst styles = {\r\n  grid: {\r\n    marginTop: '10%',\r\n    marginLeft: '20%',\r\n    marginRight: '20%',\r\n    marginBottom: '20%',\r\n    border: '3px solid #831057',\r\n    borderRadius: '10px',\r\n    padding: '10%',\r\n    paddingTop: '14%'\r\n  },\r\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\nexport default function configureStore() {\r\n    return createStore(\r\n        rootReducer,\r\n        applyMiddleware(thunk)\r\n    );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}