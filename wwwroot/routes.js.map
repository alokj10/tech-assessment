{"version":3,"sources":["../src/routes.js"],"names":["api","express","Router","get","UserController","LoadConfig","auth","McqController","GetAll","GetMcqsBySkill","GetMcqsByGrade","post","Add","put","Update","delete","Delete","BulkDelete","BulkMcq","CategoryController","SkillController","GradeController","OrgController","RmaRequestController","AdminTestController","GetMy","GetMcqsByTestId","GetCandidatesByTestId","GetStudentsByTestId","GetTest","ChangePassword","AddNewUserToBeVerified","VerifyUser","storage","multer","diskStorage","destination","req","file","cb","console","log","files","uploadDir","path","resolve","Constants","Paths","recordingBaseDir","fieldname","fs","existsSync","mkdirSync","filename","originalname","upload","any","MediaController","SubmitRecording","GetRecordingFileNames","GetRecording","GetTestsAvailableForMe","TestRegistrationController","GetAllRegistrations","GetMyRegistrations","RegisterForTest","StartRegisteredTest","SubmitRegisteredTest","CandidateResponseController","GetCandidateResponse","GetCandidateDetails","TestInviteController","GetInvitation","SendInvite","StartTest","SubmitAnswers","EvaluateAnswers","DashboardController","GetTestCount","GetMcqCount","GetInvitationCount","passport","authenticate","session","scope","res","next","user","status","send","generateToken","sendToken","AuthenticateCandidate","failureRedirect","redirect"],"mappings":"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","file":"routes.js","sourcesContent":["import express  from 'express';\r\nimport { McqController, CategoryController, SkillController,\r\n        CandidateController, AdminTestController, InviteController,\r\n        UserController, GradeController } from './Controllers/admin';\r\nimport { TestInviteController, TestRegistrationController } from './Controllers/candidate';\r\n\r\nimport { RmaRequestController } from './Controllers/hitech';\r\n\r\nimport { generateToken, sendToken } from './utils/token.utils';\r\nimport passport from 'passport';\r\nimport auth from './utils/auth';\r\nimport OrgController from './Controllers/admin/OrgController';\r\nimport DashboardController from './Controllers/admin/DashboardController';\r\nimport CandidateResponseController from './Controllers/admin/CandidateResponseController';\r\nimport MediaController from './Controllers/candidate/MediaController';\r\nimport multer from 'multer';\r\n\r\nimport fs from 'fs';\r\nimport path from 'path';\r\nimport Constants from './commons/Constants';\r\n\r\nlet api = express.Router();\r\n\r\n\r\napi.get('/loadConfig', UserController.LoadConfig);\r\napi.get('/validateUserToken', auth, UserController.LoadConfig);\r\n\r\n/* Admin Routes */\r\n/* mcq endpoints */\r\n// api.get('/admin/getAllMcqs', McqController.GetAll);\r\napi.get('/admin/getAllMcqs', auth, McqController.GetAll);\r\napi.get('/admin/getMcqsBySkill', auth, McqController.GetMcqsBySkill);\r\napi.get('/admin/getMcqsByGrade', auth, McqController.GetMcqsByGrade);\r\napi.post('/admin/mcq', auth, McqController.Add);\r\napi.put('/admin/mcq', auth, McqController.Update);\r\napi.delete('/admin/mcq', auth, McqController.Delete);\r\napi.delete('/admin/bulkmcq', McqController.BulkDelete);\r\napi.post('/admin/bulkMcq', auth, McqController.BulkMcq);\r\n\r\n/* category endpoints */\r\napi.get('/admin/getAllCategories', auth, CategoryController.GetAll);\r\napi.post('/admin/category', auth, CategoryController.Add);\r\napi.put('/admin/category', auth, CategoryController.Update);\r\napi.delete('/admin/category', auth, CategoryController.Delete);\r\n\r\n/* skill endpoints */\r\napi.get('/admin/getAllSkills', auth, SkillController.GetAll);\r\napi.post('/admin/skill', auth, SkillController.Add);\r\napi.delete('/admin/skill', auth, SkillController.Delete);\r\n\r\n/* class/grade endpoints */\r\napi.get('/admin/getAllGrades', auth, GradeController.GetAll);\r\napi.post('/admin/grade', auth, GradeController.Add);\r\napi.put('/admin/grade', auth, GradeController.Update);\r\napi.delete('/admin/grade', auth, GradeController.Delete);\r\n\r\n/* org endpoints */\r\napi.get('/admin/getAllOrgs', auth, OrgController.GetAll);\r\napi.post('/admin/org', auth, OrgController.Add);\r\napi.put('/admin/org', auth, OrgController.Update);\r\napi.delete('/admin/org', auth, OrgController.Delete);\r\n\r\n/* hitech endpoints */\r\napi.get('/hitech/rmaRequests', RmaRequestController.GetAll);\r\napi.post('/hitech/rmaRequest', RmaRequestController.Add);\r\napi.get('/hitech/deleteRmaRequest', RmaRequestController.Delete);\r\n\r\n/* Admin Test endpoints */\r\napi.get('/admin/getAllTests', auth, AdminTestController.GetAll);\r\napi.get('/admin/getMyTests', auth, AdminTestController.GetMy);\r\napi.get('/admin/getMcqsByTestId', auth, AdminTestController.GetMcqsByTestId);\r\napi.get('/admin/getCandidatesByTestId', auth, AdminTestController.GetCandidatesByTestId);\r\napi.get('/admin/getStudentsByTestId', auth, AdminTestController.GetStudentsByTestId);\r\napi.get('/admin/getTest', auth, AdminTestController.GetTest);\r\napi.post('/admin/test', auth, AdminTestController.Add);\r\napi.put('/admin/test', auth, AdminTestController.Update);\r\napi.delete('/admin/test', auth, AdminTestController.Delete);\r\n\r\n/* User endpoints */\r\napi.get('/admin/getAllUsers', auth,  UserController.GetAll);\r\napi.post('/admin/user', auth, UserController.Add);\r\napi.put('/admin/user', auth, UserController.Update);\r\napi.delete('/admin/user', auth, UserController.Delete);\r\napi.post('/admin/changePassword', auth, UserController.ChangePassword);\r\n\r\n\r\n/* Online portal endpoints */\r\napi.post('/candidate/user', UserController.AddNewUserToBeVerified);\r\napi.get('/candidate/verifyUser', UserController.VerifyUser);\r\n//let upload = multer({ dest: 'uploads/responseRecordiings' })\r\nvar storage = multer.diskStorage({\r\n    destination: function (req, file, cb) {\r\n        console.log('s1', req.files);\r\n        console.log('s2', file);\r\n        // let uploadDir = path.resolve(`uploads/responseRecordiings/${file.fieldname}`);\r\n        let uploadDir = path.resolve(`${Constants.Paths.recordingBaseDir}\\\\${file.fieldname}`);\r\n        console.log('uploaddir', uploadDir);\r\n        if(!fs.existsSync(uploadDir)) {\r\n            fs.mkdirSync(uploadDir);\r\n        }\r\n        cb(null, uploadDir);\r\n    },\r\n    filename: function (req, file, cb) {\r\n        console.log('filename', file);\r\n      //const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9)\r\n      cb(null, file.fieldname + '_' + file.originalname)\r\n    }\r\n  })\r\n  \r\nlet upload = multer({ storage: storage })\r\napi.post('/candidate/submitRecording', upload.any(), MediaController.SubmitRecording);\r\napi.get('/candidate/getRecordingFileNames', MediaController.GetRecordingFileNames);\r\napi.get('/candidate/getRecording', MediaController.GetRecording);\r\n\r\napi.post('/teacher/user', UserController.AddNewUserToBeVerified)\r\napi.get('/teacher/verifyUser', UserController.VerifyUser);\r\napi.get('/admin/testsAvailableForMe', auth, AdminTestController.GetTestsAvailableForMe);\r\napi.get('/candidate/getAllRegistrations', auth, TestRegistrationController.GetAllRegistrations);\r\napi.get('/candidate/getMyRegistrations', auth, TestRegistrationController.GetMyRegistrations);\r\napi.post('/candidate/registerForTest', auth, TestRegistrationController.RegisterForTest);\r\napi.post('/candidate/startRegisteredTest', auth, TestRegistrationController.StartRegisteredTest);\r\napi.post('/candidate/submitRegisteredTest', auth, TestRegistrationController.SubmitRegisteredTest);\r\n\r\n\r\n/* Candidate Response Endpoints */\r\napi.get('/admin/getCandidateResponseReport', auth, CandidateResponseController.GetCandidateResponse);\r\napi.get('/admin/getCandidateDetails', CandidateResponseController.GetCandidateDetails);\r\n\r\n/* Candidate Routes */\r\n/* Test Invite endpoints */\r\napi.get('/candidate/getAllInvites', auth, TestInviteController.GetAll);\r\napi.get('/candidate/invitation', TestInviteController.GetInvitation);\r\napi.post('/candidate/sendInvite', auth, TestInviteController.SendInvite);\r\napi.post('/candidate/startTest', auth, TestInviteController.StartTest);\r\napi.post('/candidate/submitAnswers', auth, TestInviteController.SubmitAnswers);\r\napi.post('/candidate/evaluateAnswers', auth, TestInviteController.EvaluateAnswers);\r\n// api.post('/candidate/registerForTest', auth, TestInviteController.RegisterForTest);\r\n\r\napi.get('/admin/dashboard/test/count', auth, DashboardController.GetTestCount);\r\napi.get('/admin/dashboard/mcq/count', auth, DashboardController.GetMcqCount);\r\napi.get('/admin/dashboard/invitation/count', auth, DashboardController.GetInvitationCount);\r\n// api.get('/admin/dashboard', auth, DashboardController.GetAllStatistics);\r\n\r\napi.get('/admin/auth/google',\r\n    passport.authenticate('google-token', { session: false, scope: ['https://www.googleapis.com/auth/plus.login'] }),\r\n    (req, res, next) => {\r\n        console.log('res next');\r\n        req.auth = req.user;\r\n        if(req.user.status === 'not found') {\r\n            return res.status(403).send('User Not Found');\r\n        }\r\n        next();\r\n    }, generateToken, sendToken);\r\n\r\n    \r\napi.post('/admin/auth/local',passport.authenticate('local',{session: false}),\r\n   (req, res, next) => {\r\n    console.log('received local call');\r\n    req.auth = req.user;\r\n        if(req.user.status === 'not found') {\r\n            return res.status(401).send('User Not Found');\r\n        }\r\n        next();\r\n}, generateToken, sendToken);\r\n\r\n\r\napi.post('/candidate/auth/local',TestInviteController.AuthenticateCandidate,\r\n   (req, res, next) => {\r\n       console.log('returned from authenticate candidate', req.user);\r\n        req.auth = req.user;\r\n        if(req.user.status === 'not found') {\r\n            return res.status(401).send('Candidate Not Registered');\r\n        }\r\n        next();\r\n}, generateToken, sendToken);\r\n\r\n// GET /auth/google/callback\r\n//   Use passport.authenticate() as route middleware to authenticate the\r\n//   request.  If authentication fails, the user will be redirected back to the\r\n//   login page.  Otherwise, the primary route function function will be called,\r\n//   which, in this example, will redirect the user to the home page.\r\napi.get('/admin/auth/google/callback', \r\n  passport.authenticate('google-token', { failureRedirect: '/login' }),\r\n  function(req, res) {\r\n      console.log('res 3');\r\n    res.redirect('/');\r\n  });\r\n\r\n/*\r\napi.route('/admin/auth/callback', (req, resp) => {\r\n    console.log('admin api callback called');\r\n})\r\napi.get('/admin/auth/google',\r\n        passport.authenticate('google-token'), \r\n        (req, res, next) => {\r\n            console.log('res returned');\r\n            if (!req.user) {\r\n                return res.send(401, 'User Not Authenticated');\r\n            }\r\n            req.auth = {\r\n                id: req.user.id\r\n            };\r\n            next();\r\n        }, \r\n        generateToken, \r\n        sendToken);*/\r\nexport default api;\r\n"]}