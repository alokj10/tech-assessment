{"version":3,"sources":["../src/routes.js"],"names":["api","express","Router","get","UserController","LoadConfig","auth","McqController","GetAll","post","Add","put","Update","delete","Delete","BulkDelete","BulkMcq","CategoryController","SkillController","OrgController","RmaRequestController","AdminTestController","GetMcqsByTestId","GetCandidatesByTestId","GetTest","TestInviteController","GetInvitation","SendInvite","StartTest","SubmitAnswers","EvaluateAnswers","DashboardController","GetTestCount","GetMcqCount","GetInvitationCount","passport","authenticate","session","scope","req","res","next","console","log","user","status","send","generateToken","sendToken","AuthenticateCandidate","failureRedirect","redirect"],"mappings":"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","file":"routes.js","sourcesContent":["import express  from 'express';\r\nimport { McqController, CategoryController, SkillController,\r\n        CandidateController, AdminTestController, InviteController,\r\n        UserController } from './Controllers/admin';\r\nimport { TestInviteController } from './Controllers/candidate';\r\n\r\nimport { RmaRequestController } from './Controllers/hitech';\r\n\r\nimport { generateToken, sendToken } from './utils/token.utils';\r\nimport passport from 'passport';\r\nimport auth from './utils/auth';\r\nimport OrgController from './Controllers/admin/OrgController';\r\nimport DashboardController from './Controllers/admin/DashboardController';\r\n\r\n\r\nlet api = express.Router();\r\n\r\n\r\napi.get('/loadConfig', UserController.LoadConfig);\r\n\r\n/* Admin Routes */\r\n/* mcq endpoints */\r\n// api.get('/admin/getAllMcqs', McqController.GetAll);\r\napi.get('/admin/getAllMcqs', auth, McqController.GetAll);\r\napi.post('/admin/mcq', auth, McqController.Add);\r\napi.put('/admin/mcq', auth, McqController.Update);\r\napi.delete('/admin/mcq', auth, McqController.Delete);\r\napi.delete('/admin/bulkmcq', McqController.BulkDelete);\r\napi.post('/admin/bulkMcq', auth, McqController.BulkMcq);\r\n\r\n/* category endpoints */\r\napi.get('/admin/getAllCategories', auth, CategoryController.GetAll);\r\napi.post('/admin/category', auth, CategoryController.Add);\r\napi.put('/admin/category', auth, CategoryController.Update);\r\napi.delete('/admin/category', auth, CategoryController.Delete);\r\n\r\n/* skill endpoints */\r\napi.get('/admin/getAllSkills', auth, SkillController.GetAll);\r\napi.post('/admin/skill', auth, SkillController.Add);\r\napi.delete('/admin/skill', auth, SkillController.Delete);\r\n\r\n/* org endpoints */\r\napi.get('/admin/getAllOrgs', auth, OrgController.GetAll);\r\napi.post('/admin/org', auth, OrgController.Add);\r\napi.put('/admin/org', auth, OrgController.Update);\r\napi.delete('/admin/org', auth, OrgController.Delete);\r\n\r\n/* hitech endpoints */\r\napi.get('/hitech/rmaRequests', RmaRequestController.GetAll);\r\napi.post('/hitech/rmaRequest', RmaRequestController.Add);\r\napi.get('/hitech/deleteRmaRequest', RmaRequestController.Delete);\r\n\r\n/* Admin Test endpoints */\r\napi.get('/admin/getAllTests', auth, AdminTestController.GetAll);\r\napi.get('/admin/getMcqsByTestId', auth, AdminTestController.GetMcqsByTestId);\r\napi.get('/admin/getCandidatesByTestId', auth, AdminTestController.GetCandidatesByTestId);\r\napi.get('/admin/getTest', auth, AdminTestController.GetTest);\r\napi.post('/admin/test', auth, AdminTestController.Add);\r\napi.put('/admin/test', auth, AdminTestController.Update);\r\napi.delete('/admin/test', auth, AdminTestController.Delete);\r\n\r\n/* User endpoints */\r\napi.get('/admin/getAllUsers', auth,  UserController.GetAll);\r\napi.post('/admin/user', auth, UserController.Add);\r\napi.put('/admin/user', auth, UserController.Update);\r\napi.delete('/admin/user', auth, UserController.Delete);\r\n\r\n/* Candidate Routes */\r\n/* Test Invite endpoints */\r\napi.get('/candidate/getAllInvites', auth, TestInviteController.GetAll);\r\napi.get('/candidate/invitation', TestInviteController.GetInvitation);\r\napi.post('/candidate/sendInvite', auth, TestInviteController.SendInvite);\r\napi.post('/candidate/startTest', auth, TestInviteController.StartTest);\r\napi.post('/candidate/submitAnswers', auth, TestInviteController.SubmitAnswers);\r\napi.post('/candidate/evaluateAnswers', auth, TestInviteController.EvaluateAnswers);\r\n\r\napi.get('/admin/dashboard/test/count', auth, DashboardController.GetTestCount);\r\napi.get('/admin/dashboard/mcq/count', auth, DashboardController.GetMcqCount);\r\napi.get('/admin/dashboard/invitation/count', auth, DashboardController.GetInvitationCount);\r\n// api.get('/admin/dashboard', auth, DashboardController.GetAllStatistics);\r\n\r\napi.get('/admin/auth/google',\r\n    passport.authenticate('google-token', { session: false, scope: ['https://www.googleapis.com/auth/plus.login'] }),\r\n    (req, res, next) => {\r\n        console.log('res next');\r\n        req.auth = req.user;\r\n        if(req.user.status === 'not found') {\r\n            return res.status(403).send('User Not Found');\r\n        }\r\n        next();\r\n    }, generateToken, sendToken);\r\n\r\n    \r\napi.post('/admin/auth/local',passport.authenticate('local',{session: false}),\r\n   (req, res, next) => {\r\n    console.log('received local call');\r\n    req.auth = req.user;\r\n        if(req.user.status === 'not found') {\r\n            return res.status(401).send('User Not Found');\r\n        }\r\n        next();\r\n}, generateToken, sendToken);\r\n\r\n\r\napi.post('/candidate/auth/local',TestInviteController.AuthenticateCandidate,\r\n   (req, res, next) => {\r\n       console.log('returned from authenticate candidate', req.user);\r\n        req.auth = req.user;\r\n        if(req.user.status === 'not found') {\r\n            return res.status(401).send('Candidate Not Registered');\r\n        }\r\n        next();\r\n}, generateToken, sendToken);\r\n\r\n// GET /auth/google/callback\r\n//   Use passport.authenticate() as route middleware to authenticate the\r\n//   request.  If authentication fails, the user will be redirected back to the\r\n//   login page.  Otherwise, the primary route function function will be called,\r\n//   which, in this example, will redirect the user to the home page.\r\napi.get('/admin/auth/google/callback', \r\n  passport.authenticate('google-token', { failureRedirect: '/login' }),\r\n  function(req, res) {\r\n      console.log('res 3');\r\n    res.redirect('/');\r\n  });\r\n\r\n/*\r\napi.route('/admin/auth/callback', (req, resp) => {\r\n    console.log('admin api callback called');\r\n})\r\napi.get('/admin/auth/google',\r\n        passport.authenticate('google-token'), \r\n        (req, res, next) => {\r\n            console.log('res returned');\r\n            if (!req.user) {\r\n                return res.send(401, 'User Not Authenticated');\r\n            }\r\n            req.auth = {\r\n                id: req.user.id\r\n            };\r\n            next();\r\n        }, \r\n        generateToken, \r\n        sendToken);*/\r\nexport default api;\r\n"]}