{"version":3,"sources":["../src/passport.js"],"names":["GoogleTokenStrategy","require","Strategy","passport","use","clientID","AuthConfig","clientId","clientSecret","callbackUrl","accessToken","refreshToken","profile","done","console","log","emailId","emails","value","existingUser","users","GetUser","userEntity","name","displayName","role","UpdateUser","Constants","AdminEmailId","AdminRole","Add","newUser","googleId","id","status","err","message"],"mappings":"AAAA;;AAEA;;;;AACA;;AAEA;;;;;;AADA,IAAIA,sBAAsBC,QAAQ,uBAAR,EAAiCC,QAA3D;;;AAGAC,mBAASC,GAAT,CAAa,cAAb,EAA4B,IAAIJ,mBAAJ,CAAwB;AAC5CK,cAAUC,yBAAWC,QADuB;AAE5CC,kBAAcF,yBAAWE,YAFmB;AAG5CC,iBAAa;AAH+B,CAAxB,EAIrB,UAACC,WAAD,EAAcC,YAAd,EAA4BC,OAA5B,EAAqCC,IAArC,EAA8C;AACjD,QAAG;AACCC,gBAAQC,GAAR,CAAY,uBAAZ,EAAqCH,OAArC;AACA,YAAII,UAAUJ,QAAQK,MAAR,CAAe,CAAf,EAAkBC,KAAhC;AACA,YAAIC,eAAeC,gBAAMC,OAAN,CAAcL,OAAd,CAAnB;AACA,YAAGG,iBAAiB,IAApB,EAA0B;AACtB,gBAAIG,aAAa;AACbN,yBAASA,OADI;AAEbO,sBAAMX,QAAQY,WAFD;AAGbC,sBAAMN,aAAaM;AAHN,aAAjB;AAKAL,4BAAMM,UAAN,CAAiBV,OAAjB,EAA0BM,UAA1B;AACA,mBAAOT,KAAK,IAAL,EAAWM,YAAX,CAAP;AACH;AACD,YAAGH,YAAYW,wBAAUC,YAAzB,EAAuC;AACnC,gBAAIN,cAAa;AACbN,yBAASA,OADI;AAEbO,sBAAMX,QAAQY,WAFD;AAGbC,sBAAME,wBAAUE;AAHH,aAAjB;AAKAT,4BAAMU,GAAN,CAAUR,WAAV;AACA,mBAAOT,KAAK,IAAL,EAAWS,WAAX,CAAP;AACH;AACD,YAAMS,UAAU;AACZf,qBAASA,OADG;AAEZgB,sBAAUpB,QAAQqB,EAFN;AAGZC,oBAAQ,WAHI;AAIZX,kBAAMX,QAAQY,WAJF;AAKZC,kBAAM;AAEV;AAPgB,SAAhB,CAQAZ,KAAK,IAAL,EAAWkB,OAAX;AACH,KA/BD,CAgCA,OAAMI,GAAN,EAAW;AACPrB,gBAAQC,GAAR,CAAY,kDAAZ;AACAD,gBAAQC,GAAR,CAAYoB,GAAZ;AACAtB,aAAKsB,GAAL,EAAU,KAAV,EAAiBA,IAAIC,OAArB;AACH;AACJ,CA1C2B,CAA5B","file":"passport.js","sourcesContent":["'use strict';\r\n\r\nimport passport from 'passport';\r\nimport { AuthConfig, Constants } from './commons/ServerConfig';\r\nvar GoogleTokenStrategy = require('passport-google-token').Strategy;\r\nimport users from './users';\r\n\r\npassport.use('google-token',new GoogleTokenStrategy({\r\n        clientID: AuthConfig.clientId,\r\n        clientSecret: AuthConfig.clientSecret,\r\n        callbackUrl: 'http://localhost:3001/api/admin/auth/callback'\r\n    }, (accessToken, refreshToken, profile, done) => {\r\n    try{\r\n        console.log('profile authenticated', profile);\r\n        let emailId = profile.emails[0].value;\r\n        let existingUser = users.GetUser(emailId);\r\n        if(existingUser !== null) {\r\n            let userEntity = {\r\n                emailId: emailId,\r\n                name: profile.displayName,\r\n                role: existingUser.role\r\n            };\r\n            users.UpdateUser(emailId, userEntity);\r\n            return done(null, existingUser);\r\n        }\r\n        if(emailId === Constants.AdminEmailId) {\r\n            let userEntity = {\r\n                emailId: emailId,\r\n                name: profile.displayName,\r\n                role: Constants.AdminRole\r\n            };\r\n            users.Add(userEntity);\r\n            return done(null, userEntity);\r\n        }\r\n        const newUser = {\r\n            emailId: emailId,\r\n            googleId: profile.id,\r\n            status: 'not found',\r\n            name: profile.displayName,\r\n            role: 'guest'\r\n        }\r\n        // users.Add(newUser);\r\n        done(null, newUser);\r\n    }\r\n    catch(err) {\r\n        console.log('error occured in profile authentication callback');\r\n        console.log(err);\r\n        done(err, false, err.message);\r\n    }\r\n}));"]}