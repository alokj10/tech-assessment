{"version":3,"sources":["../../src/Models/OrgModel.js"],"names":["OrgModel","entityName","entities","GetAll","userEntity","queryConfig","VIEW_ORGS","db","GetCandidate","candidateId","Promise","resolve","reject","findOne","then","res","Add","entity","insert","insertId","Update","update","org_meta","id","Delete","delete"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;AAEA;;;;;;IAEMA,Q;;;;;SACFC,U,GAAa,K;SACbC,Q,GAAW,E;;SAEXC,M,GAAS,UAACC,UAAD,EAAgB;AACrB,YAAIC,cAAc,qCAAeC,qBAAf,CAAlB;AACA,eAAO,oCAAcC,iBAAd,EAAkBF,WAAlB,EAA+BD,UAA/B,CAAP;AACH,K;;SAEDI,Y,GAAe,UAACC,WAAD,EAAiB;AAC5B,eAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCL,8BAAGM,OAAH,CAAW,MAAKZ,UAAhB,EAA4BQ,WAA5B,EAAyCK,IAAzC,CAA8C,UAACC,GAAD,EAAS;AACnDJ,wBAAQI,GAAR;AACH,aAFD;AAGH,SAJM,CAAP;AAKH,K;;SAEDC,G,GAAM,UAACC,MAAD,EAAY;AACd,eAAO,IAAIP,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCL,8BAAGW,MAAH,CAAU,MAAKjB,UAAf,EAA2BgB,MAA3B,EAAmCH,IAAnC,CAAwC,UAACK,QAAD,EAAc;AAClDR,wBAAQQ,QAAR;AACH,aAFD;AAGH,SAJM,CAAP;AAKH,K;;SAEDC,M,GAAS,UAACH,MAAD,EAAY;AACjB,eAAO,IAAIP,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCL,8BAAGc,MAAH,CAAU,MAAKpB,UAAf,EAA2BgB,OAAOK,QAAlC,EAA4CL,OAAOM,EAAnD,EAAuDT,IAAvD,CAA4D,UAACC,GAAD,EAAS;AACjEJ,wBAAQI,GAAR;AACH,aAFD;AAGH,SAJM,CAAP;AAKH,K;;SAEDS,M,GAAS,UAACP,MAAD,EAAY;AACjB,eAAO,IAAIP,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCL,8BAAGkB,MAAH,CAAU,MAAKxB,UAAf,EAA2BgB,OAAOM,EAAlC,EAAsCT,IAAtC,CAA2C,UAACC,GAAD,EAAS;AAChDJ,wBAAQI,GAAR;AACH,aAFD;AAGH,SAJM,CAAP;AAKH,K;;;kBAGUf,Q","file":"OrgModel.js","sourcesContent":["import db from '../db/mysqldb';\r\nimport users from '../users';\r\nimport { GetQueryConfig, \r\n         HandlePromise } from '../commons/RoleDefinitions';\r\nimport { VIEW_ORGS } from '../commons/RoleBasedQueries/OrgQueries';\r\n\r\nclass OrgModel {\r\n    entityName = 'org';\r\n    entities = {};\r\n    \r\n    GetAll = (userEntity) => {\r\n        let queryConfig = GetQueryConfig(VIEW_ORGS);\r\n        return HandlePromise(db, queryConfig, userEntity);\r\n    }\r\n\r\n    GetCandidate = (candidateId) => {\r\n        return new Promise((resolve, reject) => {\r\n            db.findOne(this.entityName, candidateId).then((res) => {\r\n                resolve(res);\r\n            });\r\n        })\r\n    }\r\n\r\n    Add = (entity) => {\r\n        return new Promise((resolve, reject) => {\r\n            db.insert(this.entityName, entity).then((insertId) => {\r\n                resolve(insertId);\r\n            });\r\n        });\r\n    }\r\n\r\n    Update = (entity) => {\r\n        return new Promise((resolve, reject) => {\r\n            db.update(this.entityName, entity.org_meta, entity.id).then((res) => {\r\n                resolve(res);\r\n            });\r\n        });\r\n    }\r\n\r\n    Delete = (entity) => {\r\n        return new Promise((resolve, reject) => {\r\n            db.delete(this.entityName, entity.id).then((res) => {\r\n                resolve(res);\r\n            });\r\n        });\r\n    }\r\n\r\n}\r\nexport default OrgModel;"]}