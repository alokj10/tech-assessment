{"version":3,"sources":["../../src/utils/token.utils.js"],"names":["createToken","auth","console","log","jwt","sign","googleId","emailId","id","role","name","orgId","AuthConfig","myPrivateKey","expiresIn","generateToken","req","res","next","user","token","sendToken","setHeader","status","send","JSON","stringify"],"mappings":";;;;;;;AAEA;;;;AACA;;;;AAHA;;AAKA,IAAMA,cAAc,SAAdA,WAAc,CAACC,IAAD,EAAU;AAC1BC,YAAQC,GAAR,CAAY,gBAAZ;AACA,WAAOC,uBAAIC,IAAJ,CAAS;AACRC,kBAAUL,KAAKK,QAAL,GAAgBL,KAAKK,QAArB,GAAgCL,KAAKM,OADvC;AAERC,YAAIP,KAAKO,EAFD;AAGRD,iBAASN,KAAKM,OAHN;AAIRE,cAAMR,KAAKQ,IAJH;AAKRC,cAAMT,KAAKS,IALH;AAMRC,eAAOV,KAAKU;AANJ,KAAT,EAOAC,yBAAWC,YAPX;AAQP;AACI;AACIC,mBAAW,KAAK;AADpB,KATG,CAAP;AAYH,CAdD;;AAgBA,IAAMC,gBAAgB,SAAhBA,aAAgB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACtChB,YAAQC,GAAR,CAAY,kBAAZ,EAAgCa,IAAIG,IAApC;AACAH,QAAII,KAAJ,GAAYpB,YAAYgB,IAAIf,IAAhB,CAAZ;AACA,WAAOiB,MAAP;AACH,CAJD;;AAMA,IAAMG,YAAY,SAAZA,SAAY,CAACL,GAAD,EAAMC,GAAN,EAAc;AAC5Bf,YAAQC,GAAR,CAAY,eAAZ;AACAc,QAAIK,SAAJ,CAAc,cAAd,EAA8BN,IAAII,KAAlC;AACA,WAAOH,IAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,KAAKC,SAAL,CAAeV,IAAIG,IAAnB,CAArB,CAAP;AACH,CAJD;;QAOEJ,a,GAAAA,a;QACAM,S,GAAAA,S","file":"token.utils.js","sourcesContent":["// var jwt = require('jsonwebtoken');\r\n\r\nimport jwt from 'jsonwebtoken';\r\nimport { AuthConfig } from '../commons/ServerConfig';\r\n\r\nconst createToken = (auth) => {\r\n    console.log('creating token');\r\n    return jwt.sign({\r\n            googleId: auth.googleId ? auth.googleId : auth.emailId,\r\n            id: auth.id,\r\n            emailId: auth.emailId,\r\n            role: auth.role,\r\n            name: auth.name,\r\n            orgId: auth.orgId\r\n        }, AuthConfig.myPrivateKey,\r\n    // }, 'my-secret',\r\n        {\r\n            expiresIn: 60 * 120\r\n        });\r\n};\r\n\r\nconst generateToken = (req, res, next) => {\r\n    console.log('generating token', req.user);\r\n    req.token = createToken(req.auth);\r\n    return next();\r\n};\r\n\r\nconst sendToken = (req, res) => {\r\n    console.log('sending token');\r\n    res.setHeader('x-auth-token', req.token);\r\n    return res.status(200).send(JSON.stringify(req.user));\r\n};\r\n\r\nexport {\r\n  generateToken,\r\n  sendToken\r\n};"]}